{"Question": "How many customers are from the USA?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);", "Query": "SELECT COUNT(*) FROM customers WHERE country = 'USA';"}
{"Question": "What is the total number of orders placed by customers?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT COUNT(*) FROM orders;"}
{"Question": "How many different customer demographics are there?", "Context": "CREATE TABLE customer_demographics (\n    customer_type_id bpchar NOT NULL PRIMARY KEY,\n    customer_desc text\n);", "Query": "SELECT COUNT(*) FROM customer_demographics;"}
{"Question": "What is the average number of orders per customer?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT AVG(order_count) FROM (SELECT COUNT(*) as order_count FROM orders GROUP BY customer_id) as subquery;"}
{"Question": "How many customers are there in each region?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);", "Query": "SELECT region, COUNT(*) FROM customers GROUP BY region;"}
{"Question": "How many customers are from each country?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);", "Query": "SELECT country, COUNT(*)\nFROM customers\nGROUP BY country;"}
{"Question": "What is the average number of orders per customer?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT AVG(order_count)\nFROM (\n    SELECT customer_id, COUNT(*) as order_count\n    FROM orders\n    GROUP BY customer_id\n) as order_summary;"}
{"Question": "Which customers have placed the most orders?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT c.customer_id, c.company_name, COUNT(o.order_id) as order_count\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_id, c.company_name\nORDER BY order_count DESC\nLIMIT 5;"}
{"Question": "How many customers are there in each region?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);", "Query": "SELECT region, COUNT(*)\nFROM customers\nGROUP BY region;"}
{"Question": "What is the total number of customers who have placed orders?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT COUNT(DISTINCT customer_id)\nFROM orders;"}
{"Question": "List all product names and their corresponding categories.", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT p.product_name, c.category_name FROM products p JOIN categories c ON p.category_id = c.category_id;"}
{"Question": "List all products that are discontinued.", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT product_name FROM products WHERE discontinued = 1;"}
{"Question": "List the top 5 products with the highest unit prices.", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT product_name, unit_price FROM products ORDER BY unit_price DESC LIMIT 5;"}
{"Question": "List the total number of products in each category.", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT c.category_name, COUNT(p.product_id) AS total_products FROM categories c JOIN products p ON c.category_id = p.category_id GROUP BY c.category_name;"}
{"Question": "List all products and their suppliers.", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT p.product_name, s.company_name AS supplier FROM products p JOIN suppliers s ON p.supplier_id = s.supplier_id;"}
{"Question": "List all product names and their suppliers.", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);", "Query": "SELECT p.product_name, s.company_name\nFROM products p\nJOIN suppliers s ON p.supplier_id = s.supplier_id;"}
{"Question": "Find the total number of products in each category.", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\nCREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);", "Query": "SELECT c.category_name, COUNT(p.product_id) AS total_products\nFROM products p\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_name;"}
{"Question": "List all products that are discontinued.", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT product_name, unit_price\nFROM products\nWHERE discontinued = 1;"}
{"Question": "Find the average unit price of products in each category.", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\nCREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);", "Query": "SELECT c.category_name, AVG(p.unit_price) AS average_price\nFROM products p\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_name;"}
{"Question": "List the top 5 most expensive products.", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT product_name, unit_price\nFROM products\nORDER BY unit_price DESC\nLIMIT 5;"}
{"Question": "Which customers have the highest total order value?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.company_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_order_value\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY c.company_name\nORDER BY total_order_value DESC\nLIMIT 5;"}
{"Question": "Which products are most frequently ordered?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT p.product_name, SUM(od.quantity) as total_quantity\nFROM products p\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_name\nORDER BY total_quantity DESC\nLIMIT 5;"}
{"Question": "Which employees have handled the most orders?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(o.order_id) as order_count\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nGROUP BY e.first_name, e.last_name\nORDER BY order_count DESC\nLIMIT 5;"}
{"Question": "Which suppliers have the most products listed?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT s.company_name, COUNT(p.product_id) as product_count\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nGROUP BY s.company_name\nORDER BY product_count DESC\nLIMIT 5;"}
{"Question": "Which categories have the highest total sales?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.category_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_sales\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY c.category_name\nORDER BY total_sales DESC\nLIMIT 5;"}
{"Question": "What is the total freight cost for orders shipped to a specific country?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT SUM(freight) FROM orders WHERE ship_country = 'USA';"}
{"Question": "Which customers have the highest average freight cost for their orders?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);", "Query": "SELECT c.customer_id, c.company_name, AVG(o.freight) AS avg_freight\nFROM orders o\nJOIN customers c ON o.customer_id = c.customer_id\nGROUP BY c.customer_id, c.company_name\nORDER BY avg_freight DESC\nLIMIT 10;"}
{"Question": "What is the average freight cost for orders placed by employees in a specific region?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\nCREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n\tFOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT AVG(o.freight)\nFROM orders o\nJOIN employees e ON o.employee_id = e.employee_id\nWHERE e.region = 'West';"}
{"Question": "What is the total freight cost for orders shipped via a specific shipper?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\nCREATE TABLE shippers (\n    shipper_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    phone character varying(24)\n);", "Query": "SELECT SUM(o.freight)\nFROM orders o\nJOIN shippers s ON o.ship_via = s.shipper_id\nWHERE s.company_name = 'Speedy Express';"}
{"Question": "What is the average freight cost for orders containing a specific product?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n\tFOREIGN KEY (category_id) REFERENCES categories,\n\tFOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT AVG(o.freight)\nFROM orders o\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nWHERE p.product_name = 'Chai';"}
{"Question": "What is the total freight cost for orders in the last month?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT SUM(freight) FROM orders WHERE order_date >= CURRENT_DATE - INTERVAL '1 month';"}
{"Question": "Which customer has the highest total freight cost?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);", "Query": "SELECT c.company_name, SUM(o.freight) AS total_freight FROM orders o JOIN customers c ON o.customer_id = c.customer_id GROUP BY c.company_name ORDER BY total_freight DESC LIMIT 1;"}
{"Question": "What is the average freight cost for orders shipped to each country?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT ship_country, AVG(freight) AS average_freight FROM orders GROUP BY ship_country;"}
{"Question": "What is the total freight cost for orders handled by each employee?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\nCREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT e.first_name, e.last_name, SUM(o.freight) AS total_freight FROM orders o JOIN employees e ON o.employee_id = e.employee_id GROUP BY e.first_name, e.last_name;"}
{"Question": "What is the average freight cost for orders shipped via each shipper?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\nCREATE TABLE shippers (\n    shipper_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    phone character varying(24)\n);", "Query": "SELECT s.company_name, AVG(o.freight) AS average_freight FROM orders o JOIN shippers s ON o.ship_via = s.shipper_id GROUP BY s.company_name;"}
{"Question": "List all employees with their full names, titles, and hire dates.", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT employee_id, first_name || ' ' || last_name AS full_name, title, hire_date FROM employees;"}
{"Question": "Find the number of employees in each city.", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT city, COUNT(*) AS employee_count FROM employees GROUP BY city;"}
{"Question": "List all employees along with the number of orders they have handled.", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT e.employee_id, e.first_name || ' ' || e.last_name AS full_name, COUNT(o.order_id) AS order_count FROM employees e LEFT JOIN orders o ON e.employee_id = o.employee_id GROUP BY e.employee_id, e.first_name, e.last_name;"}
{"Question": "Find the average age of employees in each region.", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT region, AVG(EXTRACT(YEAR FROM AGE(CURRENT_DATE, birth_date))) AS average_age FROM employees GROUP BY region;"}
{"Question": "List all employees who report to a specific manager.", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT e.employee_id, e.first_name || ' ' || e.last_name AS full_name, e.title FROM employees e WHERE e.reports_to = ?;"}
{"Question": "List all employees who have a specific title, along with their full names.", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT employee_id, first_name || ' ' || last_name AS full_name, title FROM employees WHERE title = 'Sales Representative';"}
{"Question": "List all employees who were hired after a specific date, along with their full names and titles.", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT employee_id, first_name || ' ' || last_name AS full_name, title FROM employees WHERE hire_date > '2000-01-01';"}
{"Question": "List the total number of employees in each region, along with the region description.", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\nCREATE TABLE region (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_description bpchar NOT NULL\n);", "Query": "SELECT r.region_description, COUNT(e.employee_id) AS total_employees FROM employees e JOIN region r ON e.region = r.region_description GROUP BY r.region_description;"}
{"Question": "List all employees who report to a specific manager, along with their full names and titles.", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT e.employee_id, e.first_name || ' ' || e.last_name AS full_name, e.title FROM employees e WHERE e.reports_to = 2;"}
{"Question": "List the average age of employees in each title category.", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT title, AVG(EXTRACT(YEAR FROM AGE(birth_date))) AS average_age FROM employees GROUP BY title;"}
{"Question": "Which supplier has the most products?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT s.company_name, COUNT(p.product_id) as product_count FROM suppliers s JOIN products p ON s.supplier_id = p.supplier_id GROUP BY s.company_name ORDER BY product_count DESC LIMIT 1;"}
{"Question": "What is the total number of products in each category?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT c.category_name, COUNT(p.product_id) as product_count FROM categories c JOIN products p ON c.category_id = p.category_id GROUP BY c.category_name;"}
{"Question": "Which category has the highest average unit price for its products?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT c.category_name, AVG(p.unit_price) as avg_unit_price FROM categories c JOIN products p ON c.category_id = p.category_id GROUP BY c.category_name ORDER BY avg_unit_price DESC LIMIT 1;"}
{"Question": "How many products are discontinued in each category?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT c.category_name, COUNT(p.product_id) as discontinued_count FROM categories c JOIN products p ON c.category_id = p.category_id WHERE p.discontinued = 1 GROUP BY c.category_name;"}
{"Question": "What is the total value of products in each category?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT c.category_name, SUM(p.unit_price * p.units_in_stock) as total_value FROM categories c JOIN products p ON c.category_id = p.category_id GROUP BY c.category_name;"}
{"Question": "Which supplier has the most products?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT s.company_name, COUNT(p.product_id) as product_count\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nGROUP BY s.company_name\nORDER BY product_count DESC\nLIMIT 1;"}
{"Question": "What is the average unit price of products in each category?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT c.category_name, AVG(p.unit_price) as average_price\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nGROUP BY c.category_name;"}
{"Question": "Which product has the highest unit price?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT product_name, unit_price\nFROM products\nORDER BY unit_price DESC\nLIMIT 1;"}
{"Question": "How many orders were placed by each customer?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT c.company_name, COUNT(o.order_id) as order_count\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.company_name;"}
{"Question": "Which employee has handled the most orders?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(o.order_id) as order_count\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nGROUP BY e.first_name, e.last_name\nORDER BY order_count DESC\nLIMIT 1;"}
{"Question": "What is the average unit price of products in each category?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT category_name, AVG(unit_price) as average_unit_price\nFROM products\nJOIN categories ON products.category_id = categories.category_id\nGROUP BY category_name;"}
{"Question": "Which suppliers have the highest total value of products in stock?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT company_name, SUM(unit_price * units_in_stock) as total_value\nFROM products\nJOIN suppliers ON products.supplier_id = suppliers.supplier_id\nGROUP BY company_name\nORDER BY total_value DESC\nLIMIT 5;"}
{"Question": "What is the total value of products on order?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT SUM(unit_price * units_on_order) as total_order_value\nFROM products;"}
{"Question": "Which products have the highest value in stock?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT product_name, (unit_price * units_in_stock) as product_value\nFROM products\nORDER BY product_value DESC\nLIMIT 5;"}
{"Question": "What is the total value of discontinued products in stock?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT SUM(unit_price * units_in_stock) as total_discontinued_value\nFROM products\nWHERE discontinued = 1;"}
{"Question": "What is the average unit price of products in stock?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT AVG(unit_price) as average_unit_price FROM products WHERE units_in_stock > 0;"}
{"Question": "How many products are currently discontinued?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT COUNT(*) as discontinued_products FROM products WHERE discontinued = 1;"}
{"Question": "Which suppliers have the most products in stock?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT s.company_name, SUM(p.units_in_stock) as total_stock FROM suppliers s JOIN products p ON s.supplier_id = p.supplier_id GROUP BY s.company_name ORDER BY total_stock DESC LIMIT 1;"}
{"Question": "What is the total value of products on order?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT SUM(unit_price * units_on_order) as total_order_value FROM products;"}
{"Question": "Which categories have the highest total inventory value?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT c.category_name, SUM(p.unit_price * p.units_in_stock) as total_inventory_value FROM categories c JOIN products p ON c.category_id = p.category_id GROUP BY c.category_name ORDER BY total_inventory_value DESC;"}
{"Question": "List all suppliers from a specific region within the USA.", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);", "Query": "SELECT company_name FROM suppliers WHERE country = 'USA' AND region = 'California';"}
{"Question": "Find the total number of suppliers from each country.", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);", "Query": "SELECT country, COUNT(*) AS total_suppliers FROM suppliers GROUP BY country;"}
{"Question": "List all products supplied by suppliers from the USA.", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT p.product_name FROM products p JOIN suppliers s ON p.supplier_id = s.supplier_id WHERE s.country = 'USA';"}
{"Question": "Find the average unit price of products supplied by suppliers from the USA.", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT AVG(p.unit_price) AS average_unit_price FROM products p JOIN suppliers s ON p.supplier_id = s.supplier_id WHERE s.country = 'USA';"}
{"Question": "List all suppliers who have supplied products in the last year.", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT DISTINCT s.company_name FROM suppliers s JOIN products p ON s.supplier_id = p.supplier_id JOIN order_details od ON p.product_id = od.product_id JOIN orders o ON od.order_id = o.order_id WHERE o.order_date >= CURRENT_DATE - INTERVAL '1 year';"}
{"Question": "List all suppliers from the USA along with their contact names.", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);", "Query": "SELECT company_name, contact_name FROM suppliers WHERE country = 'USA';"}
{"Question": "How many suppliers are there from the USA?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);", "Query": "SELECT COUNT(*) FROM suppliers WHERE country = 'USA';"}
{"Question": "List all products supplied by suppliers from the USA.", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT p.product_name FROM products p JOIN suppliers s ON p.supplier_id = s.supplier_id WHERE s.country = 'USA';"}
{"Question": "List all orders that include products supplied by suppliers from the USA.", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT DISTINCT o.order_id FROM orders o JOIN order_details od ON o.order_id = od.order_id JOIN products p ON od.product_id = p.product_id JOIN suppliers s ON p.supplier_id = s.supplier_id WHERE s.country = 'USA';"}
{"Question": "List the average unit price of products supplied by suppliers from the USA.", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT AVG(p.unit_price) FROM products p JOIN suppliers s ON p.supplier_id = s.supplier_id WHERE s.country = 'USA';"}
{"Question": "Which products have a unit price greater than the average unit price?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT product_name, unit_price\nFROM products\nWHERE unit_price > (SELECT AVG(unit_price) FROM products);"}
{"Question": "What is the total value of all products in stock?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT SUM(unit_price * units_in_stock) AS total_value\nFROM products;"}
{"Question": "Which suppliers provide the most expensive products?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);", "Query": "SELECT s.company_name, p.product_name, p.unit_price\nFROM products p\nJOIN suppliers s ON p.supplier_id = s.supplier_id\nORDER BY p.unit_price DESC\nLIMIT 1;"}
{"Question": "What is the average unit price of products in each category?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\nCREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);", "Query": "SELECT c.category_name, AVG(p.unit_price) AS average_price\nFROM products p\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_name;"}
{"Question": "Which products have been discontinued and have a unit price greater than $50?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT product_name, unit_price\nFROM products\nWHERE discontinued = 1 AND unit_price > 50;"}
{"Question": "What is the average price of all products?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT AVG(unit_price) AS average_price FROM products;"}
{"Question": "Which products have a unit price greater than the average price?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT product_name, unit_price FROM products WHERE unit_price > (SELECT AVG(unit_price) FROM products);"}
{"Question": "What is the total value of all products in stock?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT SUM(unit_price * units_in_stock) AS total_value FROM products;"}
{"Question": "Which suppliers have the most expensive products?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT s.company_name, p.product_name, p.unit_price FROM suppliers s JOIN products p ON s.supplier_id = p.supplier_id ORDER BY p.unit_price DESC LIMIT 1;"}
{"Question": "What is the most expensive product in each category?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT c.category_name, p.product_name, p.unit_price FROM categories c JOIN products p ON c.category_id = p.category_id WHERE p.unit_price = (SELECT MAX(unit_price) FROM products WHERE category_id = c.category_id);"}
{"Question": "What is the total number of orders shipped to each region?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT ship_region, COUNT(*) as order_count FROM orders GROUP BY ship_region ORDER BY order_count DESC;"}
{"Question": "Which countries have the highest average freight cost per order?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT ship_country, AVG(freight) as avg_freight FROM orders GROUP BY ship_country ORDER BY avg_freight DESC;"}
{"Question": "How many orders were placed by each customer?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);", "Query": "SELECT customers.customer_id, customers.company_name, COUNT(orders.order_id) as order_count FROM customers LEFT JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customers.customer_id, customers.company_name ORDER BY order_count DESC;"}
{"Question": "What is the total freight cost for each supplier?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);", "Query": "SELECT suppliers.supplier_id, suppliers.company_name, SUM(orders.freight) as total_freight FROM orders JOIN order_details ON orders.order_id = order_details.order_id JOIN products ON order_details.product_id = products.product_id JOIN suppliers ON products.supplier_id = suppliers.supplier_id GROUP BY suppliers.supplier_id, suppliers.company_name ORDER BY total_freight DESC;"}
{"Question": "Which employees have handled the most orders?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\nCREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT employees.employee_id, employees.first_name, employees.last_name, COUNT(orders.order_id) as order_count FROM employees LEFT JOIN orders ON employees.employee_id = orders.employee_id GROUP BY employees.employee_id, employees.first_name, employees.last_name ORDER BY order_count DESC;"}
{"Question": "Which countries have the highest total freight costs for shipped orders?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT ship_country, SUM(freight) as total_freight\nFROM orders\nGROUP BY ship_country\nORDER BY total_freight DESC;"}
{"Question": "What is the average order value for each country?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT o.ship_country, AVG(od.unit_price * od.quantity * (1 - od.discount)) as average_order_value\nFROM orders o\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY o.ship_country;"}
{"Question": "Which products are most frequently shipped to each country?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT o.ship_country, p.product_name, COUNT(*) as product_count\nFROM orders o\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nGROUP BY o.ship_country, p.product_name\nORDER BY o.ship_country, product_count DESC;"}
{"Question": "What is the total number of orders shipped by each shipper to each country?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\nCREATE TABLE shippers (\n    shipper_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    phone character varying(24)\n);", "Query": "SELECT s.company_name, o.ship_country, COUNT(*) as order_count\nFROM orders o\nJOIN shippers s ON o.ship_via = s.shipper_id\nGROUP BY s.company_name, o.ship_country\nORDER BY s.company_name, order_count DESC;"}
{"Question": "Which employees have shipped the most orders to each country?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\nCREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT e.first_name, e.last_name, o.ship_country, COUNT(*) as order_count\nFROM orders o\nJOIN employees e ON o.employee_id = e.employee_id\nGROUP BY e.first_name, e.last_name, o.ship_country\nORDER BY o.ship_country, order_count DESC;"}
{"Question": "Who are the employees that report to a specific manager with a given employee_id?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT first_name, last_name FROM employees WHERE reports_to = 1;"}
{"Question": "What is the average number of employees reporting to each manager?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT AVG(sub.count) FROM (SELECT reports_to, COUNT(*) AS count FROM employees WHERE reports_to IS NOT NULL GROUP BY reports_to) AS sub;"}
{"Question": "Which employees have the same job title as the CEO?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT first_name, last_name FROM employees WHERE title = (SELECT title FROM employees WHERE reports_to IS NULL);"}
{"Question": "How many employees are there in each region?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT region, COUNT(*) AS employee_count FROM employees GROUP BY region;"}
{"Question": "Which employees have been hired in the last year?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT first_name, last_name FROM employees WHERE hire_date >= (CURRENT_DATE - INTERVAL '1 year');"}
{"Question": "Which employees report to a specific manager?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT first_name, last_name FROM employees WHERE reports_to = [specific_manager_id];"}
{"Question": "How many employees report to each manager?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT reports_to, COUNT(*) as num_reports FROM employees WHERE reports_to IS NOT NULL GROUP BY reports_to;"}
{"Question": "What are the titles of employees who report directly to the CEO?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT title FROM employees WHERE reports_to IS NULL;"}
{"Question": "Which employees have the same title as their manager?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT e1.first_name, e1.last_name FROM employees e1 JOIN employees e2 ON e1.reports_to = e2.employee_id WHERE e1.title = e2.title;"}
{"Question": "What is the average number of employees reporting to each manager?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT AVG(num_reports) as avg_reports FROM (SELECT reports_to, COUNT(*) as num_reports FROM employees WHERE reports_to IS NOT NULL GROUP BY reports_to) as subquery;"}
{"Question": "List all products that have been discontinued.", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT product_name FROM products WHERE discontinued = 1;"}
{"Question": "Find the total number of units in stock for each category.", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT c.category_name, SUM(p.units_in_stock) AS total_units_in_stock FROM categories c JOIN products p ON c.category_id = p.category_id GROUP BY c.category_name;"}
{"Question": "List all suppliers along with the number of products they supply.", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT s.company_name, COUNT(p.product_id) AS product_count FROM suppliers s LEFT JOIN products p ON s.supplier_id = p.supplier_id GROUP BY s.company_name;"}
{"Question": "Find the average unit price of products in each category.", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT c.category_name, AVG(p.unit_price) AS average_unit_price FROM categories c JOIN products p ON c.category_id = p.category_id GROUP BY c.category_name;"}
{"Question": "List all orders that include products needing reorder.", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT DISTINCT o.order_id FROM orders o JOIN order_details od ON o.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE p.units_in_stock < p.reorder_level;"}
{"Question": "Which products have the highest reorder level?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT product_name, reorder_level FROM products ORDER BY reorder_level DESC LIMIT 1;"}
{"Question": "How many products are discontinued?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT COUNT(*) FROM products WHERE discontinued = 1;"}
{"Question": "List all suppliers along with the number of products they supply.", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT s.company_name, COUNT(p.product_id) AS num_products FROM suppliers s JOIN products p ON s.supplier_id = p.supplier_id GROUP BY s.company_name;"}
{"Question": "Which categories have the most products?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT c.category_name, COUNT(p.product_id) AS num_products FROM categories c JOIN products p ON c.category_id = p.category_id GROUP BY c.category_name ORDER BY num_products DESC LIMIT 1;"}
{"Question": "What is the total value of all products currently in stock?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT SUM(unit_price * units_in_stock) AS total_value FROM products;"}
{"Question": "Which employee has the highest number of orders assigned?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(o.order_id) as order_count\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nGROUP BY e.employee_id\nORDER BY order_count DESC\nLIMIT 1;"}
{"Question": "Which territory has the most employees assigned to it?", "Context": "CREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (territory_id) REFERENCES territories,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);", "Query": "SELECT t.territory_description, COUNT(et.employee_id) as employee_count\nFROM territories t\nJOIN employee_territories et ON t.territory_id = et.territory_id\nGROUP BY t.territory_id\nORDER BY employee_count DESC\nLIMIT 1;"}
{"Question": "Which employee has the highest total freight for orders?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT e.first_name, e.last_name, SUM(o.freight) as total_freight\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nGROUP BY e.employee_id\nORDER BY total_freight DESC\nLIMIT 1;"}
{"Question": "Which region has the most territories?", "Context": "CREATE TABLE region (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_description bpchar NOT NULL\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region\n);", "Query": "SELECT r.region_description, COUNT(t.territory_id) as territory_count\nFROM region r\nJOIN territories t ON r.region_id = t.region_id\nGROUP BY r.region_id\nORDER BY territory_count DESC\nLIMIT 1;"}
{"Question": "Which employee has the most recent hire date?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT first_name, last_name, hire_date\nFROM employees\nORDER BY hire_date DESC\nLIMIT 1;"}
{"Question": "Which territory has the most employees assigned?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (territory_id) REFERENCES territories,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);", "Query": "SELECT t.territory_description, COUNT(et.employee_id) as employee_count\nFROM territories t\nJOIN employee_territories et ON t.territory_id = et.territory_id\nGROUP BY t.territory_id\nORDER BY employee_count DESC\nLIMIT 1;"}
{"Question": "Which region has the most territories?", "Context": "CREATE TABLE region (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_description bpchar NOT NULL\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region\n);", "Query": "SELECT r.region_description, COUNT(t.territory_id) as territory_count\nFROM region r\nJOIN territories t ON r.region_id = t.region_id\nGROUP BY r.region_id\nORDER BY territory_count DESC\nLIMIT 1;"}
{"Question": "Which employee has the highest total sales amount?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT e.first_name, e.last_name, SUM(o.freight) as total_sales\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nGROUP BY e.employee_id\nORDER BY total_sales DESC\nLIMIT 1;"}
{"Question": "Which supplier has the most products?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT s.company_name, COUNT(p.product_id) as product_count\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nGROUP BY s.supplier_id\nORDER BY product_count DESC\nLIMIT 1;"}
{"Question": "Which customer has placed the most orders?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT c.company_name, COUNT(o.order_id) as order_count\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_id\nORDER BY order_count DESC\nLIMIT 1;"}
{"Question": "List the total number of products in each category that are not discontinued.", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT c.category_name, COUNT(p.product_id) as product_count FROM categories c LEFT JOIN products p ON c.category_id = p.category_id WHERE p.discontinued = 0 GROUP BY c.category_name;"}
{"Question": "List the average unit price of products in each category.", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT c.category_name, AVG(p.unit_price) as average_price FROM categories c LEFT JOIN products p ON c.category_id = p.category_id GROUP BY c.category_name;"}
{"Question": "List the total number of products in each category supplied by each supplier.", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT c.category_name, s.company_name, COUNT(p.product_id) as product_count FROM categories c LEFT JOIN products p ON c.category_id = p.category_id LEFT JOIN suppliers s ON p.supplier_id = s.supplier_id GROUP BY c.category_name, s.company_name;"}
{"Question": "List the number of products in each category that have a unit price greater than $50.", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT c.category_name, COUNT(p.product_id) as product_count FROM categories c LEFT JOIN products p ON c.category_id = p.category_id WHERE p.unit_price > 50 GROUP BY c.category_name;"}
{"Question": "List the total number of products in each category that are currently in stock.", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT c.category_name, COUNT(p.product_id) as product_count FROM categories c LEFT JOIN products p ON c.category_id = p.category_id WHERE p.units_in_stock > 0 GROUP BY c.category_name;"}
{"Question": "List all suppliers and the number of products they supply.", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT s.company_name, COUNT(p.product_id) as product_count FROM suppliers s LEFT JOIN products p ON s.supplier_id = p.supplier_id GROUP BY s.company_name;"}
{"Question": "Find the total number of orders placed by each customer.", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT c.company_name, COUNT(o.order_id) as order_count FROM customers c LEFT JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.company_name;"}
{"Question": "List the average unit price of products in each category.", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT c.category_name, AVG(p.unit_price) as avg_unit_price FROM categories c LEFT JOIN products p ON c.category_id = p.category_id GROUP BY c.category_name;"}
{"Question": "Find the total freight cost for orders shipped to each country.", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT ship_country, SUM(freight) as total_freight FROM orders GROUP BY ship_country;"}
{"Question": "List the number of employees in each region.", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT region, COUNT(employee_id) as employee_count FROM employees GROUP BY region;"}
{"Question": "What is the total number of orders shipped by each shipper?", "Context": "CREATE TABLE shippers (\n    shipper_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    phone character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT s.company_name, COUNT(o.order_id) as total_orders\nFROM orders o\nJOIN shippers s ON o.ship_via = s.shipper_id\nWHERE o.shipped_date IS NOT NULL\nGROUP BY s.company_name;"}
{"Question": "Which customers have the highest total freight costs?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT c.company_name, SUM(o.freight) as total_freight\nFROM orders o\nJOIN customers c ON o.customer_id = c.customer_id\nGROUP BY c.company_name\nORDER BY total_freight DESC\nLIMIT 10;"}
{"Question": "What is the average unit price of products in each category?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT c.category_name, AVG(p.unit_price) as avg_unit_price\nFROM products p\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_name;"}
{"Question": "How many orders were placed by each employee?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(o.order_id) as total_orders\nFROM orders o\nJOIN employees e ON o.employee_id = e.employee_id\nGROUP BY e.first_name, e.last_name;"}
{"Question": "Which products have the highest total sales amount?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT p.product_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_sales\nFROM order_details od\nJOIN products p ON od.product_id = p.product_id\nGROUP BY p.product_name\nORDER BY total_sales DESC\nLIMIT 10;"}
{"Question": "What is the total number of orders placed in the last year?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT COUNT(*) as total_orders FROM orders WHERE order_date >= CURRENT_DATE - INTERVAL '1 year';"}
{"Question": "Which customers have placed the most orders?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);", "Query": "SELECT c.customer_id, c.company_name, COUNT(o.order_id) as total_orders\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_id, c.company_name\nORDER BY total_orders DESC\nLIMIT 10;"}
{"Question": "What is the average freight cost per order?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT AVG(freight) as avg_freight_cost FROM orders;"}
{"Question": "Which products are most frequently ordered?", "Context": "CREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT p.product_id, p.product_name, SUM(od.quantity) as total_quantity\nFROM products p\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_id, p.product_name\nORDER BY total_quantity DESC\nLIMIT 10;"}
{"Question": "How many orders were shipped by each shipper?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\nCREATE TABLE shippers (\n    shipper_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    phone character varying(24)\n);", "Query": "SELECT s.shipper_id, s.company_name, COUNT(o.order_id) as total_orders\nFROM shippers s\nJOIN orders o ON s.shipper_id = o.ship_via\nGROUP BY s.shipper_id, s.company_name\nORDER BY total_orders DESC;"}
{"Question": "Which employees have the highest average sales amount per order?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT e.first_name, e.last_name, AVG(od.unit_price * od.quantity * (1 - od.discount)) as avg_sales_per_order\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY e.employee_id\nORDER BY avg_sales_per_order DESC;"}
{"Question": "Which products have the highest total sales amount?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT p.product_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_sales\nFROM products p\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_id\nORDER BY total_sales DESC;"}
{"Question": "What is the total sales amount for each region?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT o.ship_region, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_sales\nFROM orders o\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY o.ship_region\nORDER BY total_sales DESC;"}
{"Question": "Which employees have the most orders?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(o.order_id) as total_orders\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nGROUP BY e.employee_id\nORDER BY total_orders DESC;"}
{"Question": "What is the total sales amount for each category?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.category_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_sales\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY c.category_id\nORDER BY total_sales DESC;"}
{"Question": "Which customers have placed the most orders?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT c.company_name, COUNT(o.order_id) as order_count\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.company_name\nORDER BY order_count DESC\nLIMIT 1;"}
{"Question": "What is the total amount spent by each customer?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.company_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_spent\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY c.company_name;"}
{"Question": "Which customers have orders that have not been shipped yet?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT c.company_name\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nWHERE o.shipped_date IS NULL;"}
{"Question": "List all customers who have placed orders in the last 30 days.", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT c.company_name\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nWHERE o.order_date >= CURRENT_DATE - INTERVAL '30 days';"}
{"Question": "Which customers have placed orders with a total freight cost greater than $1000?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT c.company_name\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.company_name\nHAVING SUM(o.freight) > 1000;"}
{"Question": "List all customers who have placed more than 10 orders.", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT c.company_name, COUNT(o.order_id) as order_count\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.company_name\nHAVING COUNT(o.order_id) > 10;"}
{"Question": "Find the total number of orders placed by each customer.", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT c.company_name, COUNT(o.order_id) as total_orders\nFROM customers c\nLEFT JOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.company_name;"}
{"Question": "List all customers who have placed orders in the last 30 days.", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT c.company_name\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nWHERE o.order_date >= CURRENT_DATE - INTERVAL '30 days';"}
{"Question": "Find the average number of orders placed by customers.", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT AVG(order_count) as average_orders\nFROM (\n    SELECT COUNT(o.order_id) as order_count\n    FROM customers c\n    LEFT JOIN orders o ON c.customer_id = o.customer_id\n    GROUP BY c.customer_id\n) as subquery;"}
{"Question": "List all customers who have placed orders with a total freight cost greater than $1000.", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT c.company_name, SUM(o.freight) as total_freight\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.company_name\nHAVING SUM(o.freight) > 1000;"}
{"Question": "Which shipper has the highest total freight cost?", "Context": "CREATE TABLE shippers (\n    shipper_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    phone character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT s.company_name, SUM(o.freight) as total_freight FROM orders o JOIN shippers s ON o.ship_via = s.shipper_id GROUP BY s.shipper_id ORDER BY total_freight DESC LIMIT 1;"}
{"Question": "What is the average order value for each ship via method?", "Context": "CREATE TABLE shippers (\n    shipper_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    phone character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT s.company_name, AVG(o.freight) as average_order_value FROM orders o JOIN shippers s ON o.ship_via = s.shipper_id GROUP BY s.shipper_id;"}
{"Question": "How many orders were shipped by each shipper in the last year?", "Context": "CREATE TABLE shippers (\n    shipper_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    phone character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT s.company_name, COUNT(*) as order_count FROM orders o JOIN shippers s ON o.ship_via = s.shipper_id WHERE o.order_date >= CURRENT_DATE - INTERVAL '1 year' GROUP BY s.shipper_id;"}
{"Question": "Which shipper has the most orders with a freight cost greater than $100?", "Context": "CREATE TABLE shippers (\n    shipper_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    phone character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT s.company_name, COUNT(*) as high_freight_order_count FROM orders o JOIN shippers s ON o.ship_via = s.shipper_id WHERE o.freight > 100 GROUP BY s.shipper_id ORDER BY high_freight_order_count DESC LIMIT 1;"}
{"Question": "What is the total number of orders shipped by each shipper, broken down by region?", "Context": "CREATE TABLE shippers (\n    shipper_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    phone character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT s.company_name, o.ship_region, COUNT(*) as order_count FROM orders o JOIN shippers s ON o.ship_via = s.shipper_id GROUP BY s.shipper_id, o.ship_region;"}
{"Question": "Which shipper has the highest average freight cost per order?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE shippers (\n    shipper_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    phone character varying(24)\n);", "Query": "SELECT s.company_name, AVG(o.freight) as avg_freight_cost\nFROM orders o\nJOIN shippers s ON o.ship_via = s.shipper_id\nGROUP BY s.shipper_id\nORDER BY avg_freight_cost DESC\nLIMIT 1;"}
{"Question": "What is the total number of orders shipped to each region?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT ship_region, COUNT(*) as order_count\nFROM orders\nGROUP BY ship_region\nORDER BY order_count DESC;"}
{"Question": "Which employee has handled the most orders?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n\tFOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(*) as order_count\nFROM orders o\nJOIN employees e ON o.employee_id = e.employee_id\nGROUP BY e.employee_id\nORDER BY order_count DESC\nLIMIT 1;"}
{"Question": "What is the total freight cost for each customer?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);", "Query": "SELECT c.company_name, SUM(o.freight) as total_freight_cost\nFROM orders o\nJOIN customers c ON o.customer_id = c.customer_id\nGROUP BY c.customer_id\nORDER BY total_freight_cost DESC;"}
{"Question": "Which products have been ordered the most frequently?", "Context": "CREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n\tFOREIGN KEY (category_id) REFERENCES categories,\n\tFOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT p.product_name, SUM(od.quantity) as total_quantity\nFROM order_details od\nJOIN products p ON od.product_id = p.product_id\nGROUP BY p.product_id\nORDER BY total_quantity DESC\nLIMIT 10;"}
{"Question": "List all products along with their suppliers and the total units in stock.", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT p.product_name, s.company_name as supplier, p.units_in_stock\nFROM products p\nJOIN suppliers s ON p.supplier_id = s.supplier_id;"}
{"Question": "Find the top 5 suppliers based on the number of products they supply.", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT s.company_name as supplier, COUNT(p.product_id) as product_count\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nGROUP BY s.company_name\nORDER BY product_count DESC\nLIMIT 5;"}
{"Question": "List all products with their categories and the total units on order.", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT p.product_name, c.category_name, p.units_on_order\nFROM products p\nJOIN categories c ON p.category_id = c.category_id;"}
{"Question": "Find the average unit price of products for each category.", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_name, AVG(p.unit_price) as average_unit_price\nFROM products p\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_name;"}
{"Question": "List all products that are discontinued along with their suppliers and categories.", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT p.product_name, s.company_name as supplier, c.category_name\nFROM products p\nJOIN suppliers s ON p.supplier_id = s.supplier_id\nJOIN categories c ON p.category_id = c.category_id\nWHERE p.discontinued = 1;"}
{"Question": "List all products with their suppliers and the total number of orders for each product.", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT p.product_name, s.company_name as supplier, COUNT(od.order_id) as total_orders\nFROM products p\nJOIN suppliers s ON p.supplier_id = s.supplier_id\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_name, s.company_name;"}
{"Question": "List all suppliers with the number of products they supply.", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT s.company_name as supplier, COUNT(p.product_id) as product_count\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nGROUP BY s.company_name;"}
{"Question": "List all categories with the average unit price of products in each category.", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT c.category_name, AVG(p.unit_price) as average_price\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nGROUP BY c.category_name;"}
{"Question": "List all products with their suppliers and the total quantity ordered.", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT p.product_name, s.company_name as supplier, SUM(od.quantity) as total_quantity_ordered\nFROM products p\nJOIN suppliers s ON p.supplier_id = s.supplier_id\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_name, s.company_name;"}
{"Question": "List all products with their suppliers and the total revenue generated by each product.", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT p.product_name, s.company_name as supplier, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_revenue\nFROM products p\nJOIN suppliers s ON p.supplier_id = s.supplier_id\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_name, s.company_name;"}
{"Question": "What is the total number of unique customers who have placed orders?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT COUNT(DISTINCT customer_id) FROM orders;"}
{"Question": "How many different suppliers provide products that have been ordered?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT COUNT(DISTINCT supplier_id) FROM products WHERE product_id IN (SELECT DISTINCT product_id FROM order_details);"}
{"Question": "What is the average unit price of products that have been ordered?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT AVG(unit_price) FROM products WHERE product_id IN (SELECT DISTINCT product_id FROM order_details);"}
{"Question": "Which category has the most unique products ordered?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT category_name, COUNT(DISTINCT p.product_id) AS unique_products_ordered FROM categories c JOIN products p ON c.category_id = p.category_id JOIN order_details od ON p.product_id = od.product_id GROUP BY category_name ORDER BY unique_products_ordered DESC LIMIT 1;"}
{"Question": "What is the total number of orders placed by each customer?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT customer_id, COUNT(order_id) AS total_orders FROM orders GROUP BY customer_id;"}
{"Question": "What is the total number of unique customers who have placed orders?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT COUNT(DISTINCT customer_id) FROM orders;"}
{"Question": "Which products have been ordered the most frequently?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT product_id, SUM(quantity) as total_ordered FROM order_details GROUP BY product_id ORDER BY total_ordered DESC LIMIT 1;"}
{"Question": "What is the average unit price of the products ordered?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT AVG(unit_price) FROM order_details;"}
{"Question": "How many orders were placed by each customer?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT customer_id, COUNT(order_id) as order_count FROM orders GROUP BY customer_id;"}
{"Question": "Which suppliers have the most products in the orders?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT s.supplier_id, s.company_name, COUNT(od.product_id) as product_count FROM suppliers s JOIN products p ON s.supplier_id = p.supplier_id JOIN order_details od ON p.product_id = od.product_id GROUP BY s.supplier_id, s.company_name ORDER BY product_count DESC;"}
{"Question": "What is the distribution of employee titles within the company?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT title, COUNT(*) AS count \nFROM employees\nGROUP BY title\nORDER BY count DESC;"}
{"Question": "Which employees have the longest tenure at the company?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT first_name, last_name, hire_date\nFROM employees\nORDER BY hire_date ASC\nLIMIT 5;"}
{"Question": "Which employees have the most direct reports?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(r.reports_to) AS direct_reports\nFROM employees e\nLEFT JOIN employees r ON e.employee_id = r.reports_to\nGROUP BY e.employee_id\nORDER BY direct_reports DESC\nLIMIT 5;"}
{"Question": "Which employees have the most diverse territories they are responsible for?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (territory_id) REFERENCES territories,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(DISTINCT t.territory_id) AS num_territories\nFROM employees e\nJOIN employee_territories et ON e.employee_id = et.employee_id\nJOIN territories t ON et.territory_id = t.territory_id\nGROUP BY e.employee_id\nORDER BY num_territories DESC\nLIMIT 5;"}
{"Question": "Which employees have the highest total order value from their customers?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT e.first_name, e.last_name, SUM(od.unit_price * od.quantity) AS total_order_value\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY e.employee_id\nORDER BY total_order_value DESC\nLIMIT 5;"}
{"Question": "Which employees have the highest average order value from their customers?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT e.first_name, e.last_name, AVG(od.unit_price * od.quantity) AS avg_order_value\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY e.employee_id\nORDER BY avg_order_value DESC\nLIMIT 5;"}
{"Question": "What are the job titles of employees who report directly to the CEO?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT title \nFROM employees\nWHERE reports_to IS NULL;"}
{"Question": "What are the contact details of the employees who report directly to the CEO?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT first_name, last_name, home_phone, address, city, region, postal_code, country\nFROM employees\nWHERE reports_to IS NULL;"}
{"Question": "What are the employee IDs and names of the employees who report directly to the CEO?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT employee_id, first_name, last_name\nFROM employees\nWHERE reports_to IS NULL;"}
{"Question": "What are the hire dates of the employees who report directly to the CEO?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT first_name, last_name, hire_date\nFROM employees\nWHERE reports_to IS NULL;"}
{"Question": "What are the birth dates of the employees who report directly to the CEO?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT first_name, last_name, birth_date\nFROM employees\nWHERE reports_to IS NULL;"}
{"Question": "What are the employee IDs, names, and titles of the employees who report directly to the CEO?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT employee_id, first_name, last_name, title\nFROM employees\nWHERE reports_to IS NULL;"}
{"Question": "Which suppliers have products that need to be reordered?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT s.company_name, p.product_name\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nWHERE p.units_in_stock < p.reorder_level;"}
{"Question": "What are the top 5 best-selling products that need to be reordered?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT p.product_name, SUM(od.quantity) AS total_sold\nFROM products p\nJOIN order_details od ON p.product_id = od.product_id\nWHERE p.units_in_stock < p.reorder_level\nGROUP BY p.product_name\nORDER BY total_sold DESC\nLIMIT 5;"}
{"Question": "Which employees have the most orders for products that need to be reordered?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders,\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(od.order_id) AS total_orders\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nWHERE p.units_in_stock < p.reorder_level\nGROUP BY e.first_name, e.last_name\nORDER BY total_orders DESC\nLIMIT 5;"}
{"Question": "Which categories have the most products that need to be reordered?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_name, COUNT(p.product_id) AS num_products_to_reorder\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nWHERE p.units_in_stock < p.reorder_level\nGROUP BY c.category_name\nORDER BY num_products_to_reorder DESC;"}
{"Question": "Which customers have placed the most orders for products that need to be reordered?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);", "Query": "SELECT c.company_name, COUNT(o.order_id) AS total_orders\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nWHERE p.units_in_stock < p.reorder_level\nGROUP BY c.company_name\nORDER BY total_orders DESC\nLIMIT 5;"}
{"Question": "Which products have the highest units on order?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT product_name, units_on_order \nFROM products\nORDER BY units_on_order DESC\nLIMIT 5;"}
{"Question": "What are the top 5 best-selling products by total quantity ordered?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT p.product_name, SUM(od.quantity) AS total_quantity\nFROM products p\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_name\nORDER BY total_quantity DESC\nLIMIT 5;"}
{"Question": "Which suppliers have the most products that need to be reordered?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT s.company_name, COUNT(p.product_id) AS reorder_count\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nWHERE p.units_in_stock < p.reorder_level\nGROUP BY s.company_name\nORDER BY reorder_count DESC\nLIMIT 5;"}
{"Question": "Which categories have the most products that need to be reordered?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT c.category_name, COUNT(p.product_id) AS reorder_count\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nWHERE p.units_in_stock < p.reorder_level\nGROUP BY c.category_name\nORDER BY reorder_count DESC\nLIMIT 5;"}
{"Question": "Which customers have the most products that need to be reordered for their orders?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT c.company_name, COUNT(od.product_id) AS reorder_count\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nWHERE p.units_in_stock < p.reorder_level\nGROUP BY c.company_name\nORDER BY reorder_count DESC\nLIMIT 5;"}
{"Question": "Which employees have the most customers with products that need to be reordered?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(DISTINCT o.customer_id) AS reorder_customers\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nWHERE p.units_in_stock < p.reorder_level\nGROUP BY e.first_name, e.last_name\nORDER BY reorder_customers DESC\nLIMIT 5;"}
{"Question": "Which employees have territories in multiple regions?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (territory_id) REFERENCES territories,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE region (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_description bpchar NOT NULL\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(DISTINCT t.region_id) as region_count\nFROM employees e\nJOIN employee_territories et ON e.employee_id = et.employee_id\nJOIN territories t ON et.territory_id = t.territory_id\nGROUP BY e.employee_id\nHAVING COUNT(DISTINCT t.region_id) > 1\nORDER BY region_count DESC;"}
{"Question": "Which regions have the most territories assigned to employees?", "Context": "CREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (territory_id) REFERENCES territories\n);\n\nCREATE TABLE region (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_description bpchar NOT NULL\n);", "Query": "SELECT r.region_description, COUNT(t.territory_id) as territory_count\nFROM region r\nJOIN territories t ON r.region_id = t.region_id\nJOIN employee_territories et ON t.territory_id = et.territory_id\nGROUP BY r.region_id\nORDER BY territory_count DESC;"}
{"Question": "Which employees have the most customers in their territories?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(DISTINCT o.customer_id) as customer_count\nFROM employees e\nJOIN employee_territories et ON e.employee_id = et.employee_id\nJOIN orders o ON e.employee_id = o.employee_id\nGROUP BY e.employee_id\nORDER BY customer_count DESC;"}
{"Question": "Which employees have the highest total order value in their territories?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    employee_id smallint,\n    freight real\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (employee_id) REFERENCES employees\n);", "Query": "SELECT e.first_name, e.last_name, SUM(o.freight) as total_order_value\nFROM employees e\nJOIN employee_territories et ON e.employee_id = et.employee_id\nJOIN orders o ON e.employee_id = o.employee_id\nGROUP BY e.employee_id\nORDER BY total_order_value DESC;"}
{"Question": "Which employees have the most customers that are located in their territories?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    country character varying(15)\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    country character varying(15)\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(DISTINCT c.customer_id) as customer_count\nFROM employees e\nJOIN employee_territories et ON e.employee_id = et.employee_id\nJOIN territories t ON et.territory_id = t.territory_id\nJOIN customers c ON c.country = t.country\nGROUP BY e.employee_id\nORDER BY customer_count DESC;"}
{"Question": "Which employees have the highest total sales value in their territories?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    employee_id smallint,\n    freight real\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    PRIMARY KEY (order_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (employee_id) REFERENCES employees\n);", "Query": "SELECT e.first_name, e.last_name, SUM(od.unit_price * od.quantity) as total_sales\nFROM employees e\nJOIN employee_territories et ON e.employee_id = et.employee_id\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY e.employee_id\nORDER BY total_sales DESC;"}
{"Question": "Which employee has the most customers assigned to them?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customer_demographics (\n    customer_type_id bpchar NOT NULL PRIMARY KEY,\n    customer_desc text\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE customer_customer_demo (\n    customer_id bpchar NOT NULL,\n    customer_type_id bpchar NOT NULL,\n    PRIMARY KEY (customer_id, customer_type_id),\n    FOREIGN KEY (customer_type_id) REFERENCES customer_demographics,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(o.customer_id) as customer_count\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nGROUP BY e.employee_id\nORDER BY customer_count DESC\nLIMIT 1;"}
{"Question": "Which employee has the highest total order value assigned to them?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customer_demographics (\n    customer_type_id bpchar NOT NULL PRIMARY KEY,\n    customer_desc text\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE customer_customer_demo (\n    customer_id bpchar NOT NULL,\n    customer_type_id bpchar NOT NULL,\n    PRIMARY KEY (customer_id, customer_type_id),\n    FOREIGN KEY (customer_type_id) REFERENCES customer_demographics,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT e.first_name, e.last_name, SUM(od.unit_price * od.quantity) as total_order_value\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY e.employee_id\nORDER BY total_order_value DESC\nLIMIT 1;"}
{"Question": "Which employee has the highest average order value for their assigned customers?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customer_demographics (\n    customer_type_id bpchar NOT NULL PRIMARY KEY,\n    customer_desc text\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE customer_customer_demo (\n    customer_id bpchar NOT NULL,\n    customer_type_id bpchar NOT NULL,\n    PRIMARY KEY (customer_id, customer_type_id),\n    FOREIGN KEY (customer_type_id) REFERENCES customer_demographics,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT e.first_name, e.last_name, AVG(od.unit_price * od.quantity) as avg_order_value\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY e.employee_id\nORDER BY avg_order_value DESC\nLIMIT 1;"}
{"Question": "Which employee has the highest total order count for their assigned customers?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customer_demographics (\n    customer_type_id bpchar NOT NULL PRIMARY KEY,\n    customer_desc text\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE customer_customer_demo (\n    customer_id bpchar NOT NULL,\n    customer_type_id bpchar NOT NULL,\n    PRIMARY KEY (customer_id, customer_type_id),\n    FOREIGN KEY (customer_type_id) REFERENCES customer_demographics,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(o.order_id) as total_order_count\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nGROUP BY e.employee_id\nORDER BY total_order_count DESC\nLIMIT 1;"}
{"Question": "Which employee has the highest total sales value for their assigned customers?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customer_demographics (\n    customer_type_id bpchar NOT NULL PRIMARY KEY,\n    customer_desc text\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE customer_customer_demo (\n    customer_id bpchar NOT NULL,\n    customer_type_id bpchar NOT NULL,\n    PRIMARY KEY (customer_id, customer_type_id),\n    FOREIGN KEY (customer_type_id) REFERENCES customer_demographics,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT e.first_name, e.last_name, SUM(od.unit_price * od.quantity) as total_sales_value\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY e.employee_id\nORDER BY total_sales_value DESC\nLIMIT 1;"}
{"Question": "What are the top 5 categories with the highest number of products?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_name, COUNT(p.product_id) as product_count\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nGROUP BY c.category_name\nORDER BY product_count DESC\nLIMIT 5;"}
{"Question": "Which categories have the least number of products?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_name, COUNT(p.product_id) as product_count\nFROM categories c\nLEFT JOIN products p ON c.category_id = p.category_id\nGROUP BY c.category_name\nORDER BY product_count ASC\nLIMIT 3;"}
{"Question": "Which categories have the most and least expensive products on average?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "WITH category_avg_price AS (\n    SELECT c.category_name, AVG(p.unit_price) AS avg_price\n    FROM categories c\n    JOIN products p ON c.category_id = p.category_id\n    GROUP BY c.category_name\n)\nSELECT \n    (SELECT category_name FROM category_avg_price ORDER BY avg_price DESC LIMIT 1) AS max_price_category,\n    (SELECT category_name FROM category_avg_price ORDER BY avg_price ASC LIMIT 1) AS min_price_category"}
{"Question": "Which categories have the highest and lowest total inventory (units in stock + units on order)?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "WITH category_inventory AS (\n    SELECT c.category_name, SUM(p.units_in_stock + p.units_on_order) AS total_inventory\n    FROM categories c\n    JOIN products p ON c.category_id = p.category_id\n    GROUP BY c.category_name\n)\nSELECT \n    (SELECT category_name FROM category_inventory ORDER BY total_inventory DESC LIMIT 1) AS max_inventory_category,\n    (SELECT category_name FROM category_inventory ORDER BY total_inventory ASC LIMIT 1) AS min_inventory_category"}
{"Question": "What are the categories that have the highest and lowest average product prices?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "WITH category_avg_price AS (\n    SELECT c.category_name, AVG(p.unit_price) AS avg_price\n    FROM categories c\n    JOIN products p ON c.category_id = p.category_id\n    GROUP BY c.category_name\n)\nSELECT \n    (SELECT category_name FROM category_avg_price ORDER BY avg_price DESC LIMIT 1) AS max_price_category,\n    (SELECT category_name FROM category_avg_price ORDER BY avg_price ASC LIMIT 1) AS min_price_category"}
{"Question": "Which categories have the highest and lowest total product sales (based on order details)?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "WITH category_sales AS (\n    SELECT c.category_name, SUM(od.quantity * od.unit_price) AS total_sales\n    FROM categories c\n    JOIN products p ON c.category_id = p.category_id\n    JOIN order_details od ON p.product_id = od.product_id\n    GROUP BY c.category_name\n)\nSELECT \n    (SELECT category_name FROM category_sales ORDER BY total_sales DESC LIMIT 1) AS max_sales_category,\n    (SELECT category_name FROM category_sales ORDER BY total_sales ASC LIMIT 1) AS min_sales_category"}
{"Question": "List the top 5 categories with the highest number of products and the total number of products in each.", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_name, COUNT(p.product_id) as product_count\nFROM categories c\nLEFT JOIN products p ON c.category_id = p.category_id\nGROUP BY c.category_name\nORDER BY product_count DESC\nLIMIT 5;"}
{"Question": "Find the categories that have more than 10 products and the average price of products in those categories.", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_name, AVG(p.unit_price) as avg_price\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nGROUP BY c.category_name\nHAVING COUNT(p.product_id) > 10\nORDER BY avg_price DESC;"}
{"Question": "List the categories that have the highest total units in stock across all products in that category.", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_name, SUM(p.units_in_stock) as total_units_in_stock\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nGROUP BY c.category_name\nORDER BY total_units_in_stock DESC;"}
{"Question": "Find the categories that have the highest average unit price for their products.", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_name, AVG(p.unit_price) as avg_unit_price\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nGROUP BY c.category_name\nORDER BY avg_unit_price DESC\nLIMIT 5;"}
{"Question": "List the categories that have the highest number of discontinued products.", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_name, COUNT(p.product_id) as discontinued_products\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nWHERE p.discontinued = 1\nGROUP BY c.category_name\nORDER BY discontinued_products DESC;"}
{"Question": "What is the average number of days between order date and required date for each customer?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.customer_id, AVG(o.required_date - o.order_date) AS avg_days_to_required\nFROM orders o\nJOIN customers c ON o.customer_id = c.customer_id\nWHERE o.shipped_date IS NOT NULL\nGROUP BY c.customer_id;"}
{"Question": "Which employees have the fastest average order-to-ship times?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    employee_id smallint,\n    order_date date,\n    shipped_date date,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);", "Query": "SELECT e.employee_id, AVG(o.shipped_date - o.order_date) AS avg_days_to_ship\nFROM orders o\nJOIN employees e ON o.employee_id = e.employee_id\nWHERE o.shipped_date IS NOT NULL\nGROUP BY e.employee_id\nORDER BY avg_days_to_ship ASC\nLIMIT 3;"}
{"Question": "How does the average order-to-ship time vary by product category?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    order_date date,\n    shipped_date date\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders,\n    FOREIGN KEY (product_id) REFERENCES products\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    category_id smallint,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL\n);", "Query": "SELECT c.category_name, AVG(o.shipped_date - o.order_date) AS avg_days_to_ship\nFROM orders o\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nJOIN categories c ON p.category_id = c.category_id\nWHERE o.shipped_date IS NOT NULL\nGROUP BY c.category_name\nORDER BY avg_days_to_ship ASC;"}
{"Question": "How does the average order-to-ship time vary by shipper?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    order_date date,\n    shipped_date date,\n    ship_via smallint,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE shippers (\n    shipper_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL\n);", "Query": "SELECT s.company_name, AVG(o.shipped_date - o.order_date) AS avg_days_to_ship\nFROM orders o\nJOIN shippers s ON o.ship_via = s.shipper_id\nWHERE o.shipped_date IS NOT NULL\nGROUP BY s.company_name\nORDER BY avg_days_to_ship ASC;"}
{"Question": "How does the average order-to-ship time vary by customer region?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    shipped_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    region character varying(15)\n);", "Query": "SELECT c.region, AVG(o.shipped_date - o.order_date) AS avg_days_to_ship\nFROM orders o\nJOIN customers c ON o.customer_id = c.customer_id\nWHERE o.shipped_date IS NOT NULL\nGROUP BY c.region\nORDER BY avg_days_to_ship ASC;"}
{"Question": "How does the average order-to-ship time vary by employee seniority?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    employee_id smallint,\n    order_date date,\n    shipped_date date,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    hire_date date\n);", "Query": "SELECT \n    CASE \n        WHEN EXTRACT(YEAR FROM AGE(hire_date)) < 5 THEN 'Junior'\n        WHEN EXTRACT(YEAR FROM AGE(hire_date)) >= 5 AND EXTRACT(YEAR FROM AGE(hire_date)) < 10 THEN 'Intermediate'\n        ELSE 'Senior'\n    END AS employee_seniority,\n    AVG(o.shipped_date - o.order_date) AS avg_days_to_ship\nFROM orders o\nJOIN employees e ON o.employee_id = e.employee_id\nWHERE o.shipped_date IS NOT NULL\nGROUP BY employee_seniority\nORDER BY avg_days_to_ship ASC;"}
{"Question": "What is the average number of days between order date and required date for each customer?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.customer_id, AVG(o.required_date - o.order_date) AS avg_days_to_required\nFROM orders o\nJOIN customers c ON o.customer_id = c.customer_id\nWHERE o.shipped_date IS NOT NULL\nGROUP BY c.customer_id;"}
{"Question": "Which products have the longest average time between order and ship date?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    order_date date,\n    shipped_date date\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders,\n    FOREIGN KEY (product_id) REFERENCES products\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL\n);", "Query": "SELECT p.product_name, AVG(o.shipped_date - o.order_date) AS avg_days_to_ship\nFROM order_details od\nJOIN orders o ON od.order_id = o.order_id\nJOIN products p ON od.product_id = p.product_id\nWHERE o.shipped_date IS NOT NULL\nGROUP BY p.product_name\nORDER BY avg_days_to_ship DESC\nLIMIT 5;"}
{"Question": "How does the average time to ship vary by employee?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    employee_id smallint,\n    order_date date,\n    shipped_date date,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    first_name character varying(10),\n    last_name character varying(20)\n);", "Query": "SELECT e.first_name, e.last_name, AVG(o.shipped_date - o.order_date) AS avg_days_to_ship\nFROM orders o\nJOIN employees e ON o.employee_id = e.employee_id\nWHERE o.shipped_date IS NOT NULL\nGROUP BY e.employee_id, e.first_name, e.last_name\nORDER BY avg_days_to_ship DESC;"}
{"Question": "Which shippers have the fastest average ship times?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    ship_via smallint,\n    order_date date,\n    shipped_date date,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE shippers (\n    shipper_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL\n);", "Query": "SELECT s.company_name, AVG(o.shipped_date - o.order_date) AS avg_days_to_ship\nFROM orders o\nJOIN shippers s ON o.ship_via = s.shipper_id\nWHERE o.shipped_date IS NOT NULL\nGROUP BY s.company_name\nORDER BY avg_days_to_ship ASC\nLIMIT 3;"}
{"Question": "How does the average time to ship vary by customer location?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    shipped_date date,\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    country character varying(15)\n);", "Query": "SELECT c.country, AVG(o.shipped_date - o.order_date) AS avg_days_to_ship\nFROM orders o\nJOIN customers c ON o.customer_id = c.customer_id\nWHERE o.shipped_date IS NOT NULL\nGROUP BY c.country\nORDER BY avg_days_to_ship DESC;"}
{"Question": "Which employees have the highest total order count?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(o.order_id) as total_orders\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nGROUP BY e.employee_id\nORDER BY total_orders DESC\nLIMIT 3;"}
{"Question": "Which employees have the highest total order value?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT e.first_name, e.last_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_order_value\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY e.employee_id\nORDER BY total_order_value DESC\nLIMIT 3;"}
{"Question": "Which employees have the highest average order value?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT e.first_name, e.last_name, AVG(od.unit_price * od.quantity * (1 - od.discount)) as avg_order_value\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY e.employee_id\nORDER BY avg_order_value DESC\nLIMIT 3;"}
{"Question": "Which employees have the highest total sales for a specific product category?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);", "Query": "SELECT e.first_name, e.last_name, c.category_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_sales\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY e.employee_id, c.category_name\nORDER BY total_sales DESC\nLIMIT 3;"}
{"Question": "Which employees have the highest total sales for a specific region?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE regions (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_name character varying(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);", "Query": "SELECT e.first_name, e.last_name, r.region_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_sales\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN customers c ON o.customer_id = c.customer_id\nJOIN regions r ON c.region = r.region_name\nGROUP BY e.employee_id, r.region_name\nORDER BY total_sales DESC\nLIMIT 3;"}
{"Question": "Which employees have the highest total order count?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(o.order_id) as total_orders\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nGROUP BY e.employee_id\nORDER BY total_orders DESC\nLIMIT 3;"}
{"Question": "Which employees have the highest average order value?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT e.first_name, e.last_name, AVG(od.unit_price * od.quantity * (1 - od.discount)) as avg_order_value\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY e.employee_id\nORDER BY avg_order_value DESC\nLIMIT 3;"}
{"Question": "Which employees have the highest total order value for a specific product category?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);", "Query": "SELECT e.first_name, e.last_name, c.category_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_category_sales\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY e.employee_id, c.category_name\nORDER BY total_category_sales DESC\nLIMIT 3;"}
{"Question": "Which employees have the highest total sales for orders shipped to a specific country?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT e.first_name, e.last_name, o.ship_country, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_sales\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nWHERE o.ship_country = 'France'\nGROUP BY e.employee_id, o.ship_country\nORDER BY total_sales DESC\nLIMIT 3;"}
{"Question": "Which employees have the highest total sales for orders shipped in a specific time period?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT e.first_name, e.last_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_sales\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nWHERE o.shipped_date BETWEEN '2022-01-01' AND '2022-12-31'\nGROUP BY e.employee_id\nORDER BY total_sales DESC\nLIMIT 3;"}
{"Question": "Which customers have placed the most orders?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name, COUNT(o.order_id) AS total_orders\nFROM customers c\nLEFT JOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.company_name\nORDER BY total_orders DESC\nLIMIT 5;"}
{"Question": "What are the most popular products that have never been ordered?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT p.product_name, p.units_in_stock\nFROM products p\nLEFT JOIN order_details od ON p.product_id = od.product_id\nWHERE od.order_id IS NULL\nORDER BY p.units_in_stock DESC\nLIMIT 5;"}
{"Question": "Which employees have the most territories assigned to them?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255)\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (territory_id) REFERENCES territories,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(et.territory_id) AS total_territories\nFROM employees e\nLEFT JOIN employee_territories et ON e.employee_id = et.employee_id\nGROUP BY e.employee_id\nORDER BY total_territories DESC\nLIMIT 5;"}
{"Question": "Which suppliers have the most products that are currently discontinued?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT s.company_name, COUNT(p.product_id) AS discontinued_products\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nWHERE p.discontinued = 1\nGROUP BY s.company_name\nORDER BY discontinued_products DESC\nLIMIT 5;"}
{"Question": "Which customers have the most unique product categories in their orders?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);\n\nCREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);", "Query": "SELECT c.company_name, COUNT(DISTINCT p.category_id) AS unique_categories\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nGROUP BY c.company_name\nORDER BY unique_categories DESC\nLIMIT 5;"}
{"Question": "Which employees have the highest total order value for their assigned customers?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT e.first_name, e.last_name, SUM(od.unit_price * od.quantity) AS total_order_value\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY e.employee_id\nORDER BY total_order_value DESC\nLIMIT 5;"}
{"Question": "What are the top 5 customers who have placed the most orders?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name, COUNT(o.order_id) AS total_orders\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.company_name\nORDER BY total_orders DESC\nLIMIT 5;"}
{"Question": "Which customers have placed orders in the last 30 days?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nWHERE o.order_date >= DATE_TRUNC('day', CURRENT_DATE) - INTERVAL 30 DAY\nGROUP BY c.company_name;"}
{"Question": "What are the top 3 countries with the highest number of customers?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);", "Query": "SELECT c.country, COUNT(*) AS num_customers\nFROM customers c\nGROUP BY c.country\nORDER BY num_customers DESC\nLIMIT 3;"}
{"Question": "Which customers have not placed any orders in the last 6 months?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name\nFROM customers c\nLEFT JOIN orders o ON c.customer_id = o.customer_id\nWHERE o.order_date IS NULL OR o.order_date < DATE_TRUNC('day', CURRENT_DATE) - INTERVAL 6 MONTH\nGROUP BY c.company_name;"}
{"Question": "Which customers have placed orders in multiple regions?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    ship_region character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name\nFROM customers c\nJOIN (\n  SELECT customer_id, COUNT(DISTINCT ship_region) AS regions_count\n  FROM orders\n  GROUP BY customer_id\n  HAVING COUNT(DISTINCT ship_region) > 1\n) o ON c.customer_id = o.customer_id;"}
{"Question": "What is the average order value for each customer who has placed at least 10 orders?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    freight real,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name, AVG(o.freight) AS avg_order_value\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.company_name\nHAVING COUNT(o.order_id) >= 10\nORDER BY avg_order_value DESC;"}
{"Question": "What is the most common ship country for orders?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT ship_country, COUNT(*) as order_count\nFROM orders\nGROUP BY ship_country\nORDER BY order_count DESC\nLIMIT 1;"}
{"Question": "Which employees have the most orders shipped via the most common ship method?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE shippers (\n    shipper_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    phone character varying(24)\n);\n\nCREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(*) as order_count\nFROM orders o\nJOIN employees e ON o.employee_id = e.employee_id\nWHERE o.ship_via = (\n    SELECT ship_via\n    FROM orders\n    GROUP BY ship_via\n    ORDER BY COUNT(*) DESC\n    LIMIT 1\n)\nGROUP BY e.employee_id\nORDER BY order_count DESC\nLIMIT 3;"}
{"Question": "Which customers have the most orders shipped via the most common ship method?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE shippers (\n    shipper_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    phone character varying(24)\n);", "Query": "SELECT c.customer_id, c.company_name, COUNT(*) as order_count\nFROM orders o\nJOIN customers c ON o.customer_id = c.customer_id\nWHERE o.ship_via = (\n    SELECT ship_via\n    FROM orders\n    GROUP BY ship_via\n    ORDER BY COUNT(*) DESC\n    LIMIT 1\n)\nGROUP BY c.customer_id\nORDER BY order_count DESC\nLIMIT 3;"}
{"Question": "Which products have the most orders shipped via the most common ship method?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT p.product_id, p.product_name, COUNT(*) as order_count\nFROM order_details od\nJOIN orders o ON od.order_id = o.order_id\nJOIN products p ON od.product_id = p.product_id\nWHERE o.ship_via = (\n    SELECT ship_via\n    FROM orders\n    GROUP BY ship_via\n    ORDER BY COUNT(*) DESC\n    LIMIT 1\n)\nGROUP BY p.product_id\nORDER BY order_count DESC\nLIMIT 3;"}
{"Question": "Which regions have the most orders shipped via the most common ship method?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE region (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_description bpchar NOT NULL\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);", "Query": "SELECT r.region_description, COUNT(*) as order_count\nFROM orders o\nJOIN customers c ON o.customer_id = c.customer_id\nJOIN territories t ON c.region = t.territory_description\nJOIN region r ON t.region_id = r.region_id\nWHERE o.ship_via = (\n    SELECT ship_via\n    FROM orders\n    GROUP BY ship_via\n    ORDER BY COUNT(*) DESC\n    LIMIT 1\n)\nGROUP BY r.region_description\nORDER BY order_count DESC\nLIMIT 3;"}
{"Question": "Which suppliers have the most products with orders shipped via the most common ship method?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);", "Query": "SELECT s.supplier_id, s.company_name, COUNT(*) as product_count\nFROM products p\nJOIN order_details od ON p.product_id = od.product_id\nJOIN orders o ON od.order_id = o.order_id\nJOIN suppliers s ON p.supplier_id = s.supplier_id\nWHERE o.ship_via = (\n    SELECT ship_via\n    FROM orders\n    GROUP BY ship_via\n    ORDER BY COUNT(*) DESC\n    LIMIT 1\n)\nGROUP BY s.supplier_id\nORDER BY product_count DESC\nLIMIT 3;"}
{"Question": "What is the average freight cost for each ship via method?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE shippers (\n    shipper_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    phone character varying(24)\n);", "Query": "SELECT s.company_name, AVG(o.freight) as avg_freight\nFROM orders o\nJOIN shippers s ON o.ship_via = s.shipper_id\nGROUP BY s.shipper_id, s.company_name\nORDER BY avg_freight DESC;"}
{"Question": "Which customers have used the most ship via methods?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);", "Query": "SELECT c.company_name, COUNT(DISTINCT o.ship_via) as num_ship_methods\nFROM orders o\nJOIN customers c ON o.customer_id = c.customer_id\nGROUP BY c.company_name\nORDER BY num_ship_methods DESC\nLIMIT 5;"}
{"Question": "Which employees have handled the most orders with the most common ship via method?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255)\n);\n\nCREATE TABLE shippers (\n    shipper_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    phone character varying(24)\n);", "Query": "WITH most_common_ship_via AS (\n  SELECT ship_via, COUNT(*) as shipment_count\n  FROM orders\n  GROUP BY ship_via\n  ORDER BY shipment_count DESC\n  LIMIT 1\n)\nSELECT e.first_name, e.last_name, COUNT(*) as order_count\nFROM orders o\nJOIN employees e ON o.employee_id = e.employee_id\nJOIN most_common_ship_via mcv ON o.ship_via = mcv.ship_via\nGROUP BY e.employee_id, e.first_name, e.last_name\nORDER BY order_count DESC\nLIMIT 3;"}
{"Question": "What is the total freight cost for each ship via method by country?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE shippers (\n    shipper_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    phone character varying(24)\n);", "Query": "SELECT s.company_name, o.ship_country, SUM(o.freight) as total_freight\nFROM orders o\nJOIN shippers s ON o.ship_via = s.shipper_id\nGROUP BY s.company_name, o.ship_country\nORDER BY total_freight DESC;"}
{"Question": "Which ship via methods have the highest average order value?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE shippers (\n    shipper_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    phone character varying(24)\n);", "Query": "SELECT s.company_name, AVG(o.freight + SUM(od.unit_price * od.quantity * (1 - od.discount))) as avg_order_value\nFROM orders o\nJOIN order_details od ON o.order_id = od.order_id\nJOIN shippers s ON o.ship_via = s.shipper_id\nGROUP BY s.company_name\nORDER BY avg_order_value DESC;"}
{"Question": "What are the top 5 best-selling products by total units sold?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT p.product_name, SUM(od.quantity) AS total_units_sold\nFROM products p\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_name\nORDER BY total_units_sold DESC\nLIMIT 5;"}
{"Question": "Which suppliers have the highest average product price?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);", "Query": "SELECT s.company_name, AVG(p.unit_price) AS avg_product_price\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nGROUP BY s.company_name\nORDER BY avg_product_price DESC\nLIMIT 5;"}
{"Question": "Which categories have the highest total inventory value (units in stock * unit price)?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);", "Query": "SELECT c.category_name, SUM(p.units_in_stock * p.unit_price) AS total_inventory_value\nFROM products p\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_name\nORDER BY total_inventory_value DESC\nLIMIT 5;"}
{"Question": "Which customers have placed the most orders?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name, COUNT(o.order_id) AS total_orders\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.company_name\nORDER BY total_orders DESC\nLIMIT 5;"}
{"Question": "Which employees have the highest total sales (order value) for their orders?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (employee_id) REFERENCES employees\n);", "Query": "SELECT e.first_name, e.last_name, SUM(o.freight) AS total_sales\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nGROUP BY e.first_name, e.last_name\nORDER BY total_sales DESC\nLIMIT 5;"}
{"Question": "Which product categories have the highest average units in stock?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);", "Query": "SELECT c.category_name, AVG(p.units_in_stock) AS avg_units_in_stock\nFROM products p\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_name\nORDER BY avg_units_in_stock DESC\nLIMIT 5;"}
{"Question": "Which products have the highest and lowest unit prices?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT \n    product_name, \n    unit_price\nFROM products\nORDER BY unit_price DESC\nLIMIT 1;\n\nSELECT \n    product_name,\n    unit_price\nFROM products\nORDER BY unit_price ASC\nLIMIT 1;"}
{"Question": "Which suppliers have the most products in our inventory?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT \n    s.company_name, \n    COUNT(p.product_id) AS product_count\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nGROUP BY s.company_name\nORDER BY product_count DESC\nLIMIT 3;"}
{"Question": "Which categories have the most products that are currently discontinued?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT \n    c.category_name,\n    COUNT(p.product_id) AS discontinued_products\nFROM products p\nJOIN categories c ON p.category_id = c.category_id\nWHERE p.discontinued = 1\nGROUP BY c.category_name\nORDER BY discontinued_products DESC\nLIMIT 3;"}
{"Question": "Which customers have placed the most orders?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT \n    c.company_name,\n    COUNT(o.order_id) AS order_count\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.company_name\nORDER BY order_count DESC\nLIMIT 3;"}
{"Question": "Which employees have the most territories assigned to them?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255)\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (territory_id) REFERENCES territories,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);", "Query": "SELECT \n    e.first_name, \n    e.last_name,\n    COUNT(et.territory_id) AS territory_count\nFROM employees e\nJOIN employee_territories et ON e.employee_id = et.employee_id\nGROUP BY e.first_name, e.last_name\nORDER BY territory_count DESC\nLIMIT 3;"}
{"Question": "Which regions have the most employees assigned to them?", "Context": "CREATE TABLE region (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_description bpchar NOT NULL\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region\n);\n\nCREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255)\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (territory_id) REFERENCES territories,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);", "Query": "SELECT \n    r.region_description,\n    COUNT(et.employee_id) AS employee_count\nFROM region r\nJOIN territories t ON r.region_id = t.region_id\nJOIN employee_territories et ON t.territory_id = et.territory_id\nGROUP BY r.region_description\nORDER BY employee_count DESC\nLIMIT 3;"}
{"Question": "What is the total number of unique products offered by each supplier?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT s.supplier_id, s.company_name, COUNT(DISTINCT p.product_id) AS unique_products\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nGROUP BY s.supplier_id, s.company_name\nORDER BY unique_products DESC;"}
{"Question": "What is the total number of unique products ordered by each customer?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.customer_id, c.company_name, COUNT(DISTINCT od.product_id) AS unique_products\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY c.customer_id, c.company_name\nORDER BY unique_products DESC;"}
{"Question": "What is the total number of unique products ordered by each employee?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT e.employee_id, e.first_name, e.last_name, COUNT(DISTINCT od.product_id) AS unique_products\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY e.employee_id, e.first_name, e.last_name\nORDER BY unique_products DESC;"}
{"Question": "What is the total number of unique products ordered by customers in each region?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.region, COUNT(DISTINCT od.product_id) AS unique_products\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY c.region\nORDER BY unique_products DESC;"}
{"Question": "What is the total number of unique products ordered by customers in each country?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.country, COUNT(DISTINCT od.product_id) AS unique_products\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY c.country\nORDER BY unique_products DESC;"}
{"Question": "What is the total number of unique products ordered by customers in each city?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.city, COUNT(DISTINCT od.product_id) AS unique_products\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY c.city\nORDER BY unique_products DESC;"}
{"Question": "What is the total number of unique products offered by each supplier?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT s.supplier_id, s.company_name, COUNT(DISTINCT p.product_id) AS unique_products\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nGROUP BY s.supplier_id, s.company_name\nORDER BY unique_products DESC;"}
{"Question": "Which categories have the highest number of unique products?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_id, c.category_name, COUNT(DISTINCT p.product_id) AS unique_products\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nGROUP BY c.category_id, c.category_name\nORDER BY unique_products DESC\nLIMIT 3;"}
{"Question": "Which customers have ordered the highest number of unique products?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.customer_id, c.company_name, COUNT(DISTINCT od.product_id) AS unique_products\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY c.customer_id, c.company_name\nORDER BY unique_products DESC\nLIMIT 3;"}
{"Question": "What is the average number of unique products ordered per order?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT AVG(unique_products) AS avg_unique_products\nFROM (\n  SELECT order_id, COUNT(DISTINCT product_id) AS unique_products\n  FROM order_details\n  GROUP BY order_id\n) t;"}
{"Question": "Which employees have processed the most orders for unique products?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT e.employee_id, e.first_name, e.last_name, COUNT(DISTINCT od.product_id) AS unique_products\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY e.employee_id, e.first_name, e.last_name\nORDER BY unique_products DESC\nLIMIT 3;"}
{"Question": "Which product categories have the highest total sales in terms of unique products ordered?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT c.category_id, c.category_name, COUNT(DISTINCT od.product_id) AS unique_products\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY c.category_id, c.category_name\nORDER BY unique_products DESC\nLIMIT 3;"}
{"Question": "Which customer has placed the most orders?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name, COUNT(o.order_id) as total_orders\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_id\nORDER BY total_orders DESC\nLIMIT 1;"}
{"Question": "Which product category has the highest average unit price?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_name, AVG(p.unit_price) as avg_unit_price\nFROM products p\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_name\nORDER BY avg_unit_price DESC\nLIMIT 1;"}
{"Question": "Which employee has the most territories assigned?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255)\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (territory_id) REFERENCES territories,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(et.territory_id) as num_territories\nFROM employees e\nJOIN employee_territories et ON e.employee_id = et.employee_id\nGROUP BY e.employee_id\nORDER BY num_territories DESC\nLIMIT 1;"}
{"Question": "Which supplier has the most products in the \"Beverages\" category?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT s.company_name, COUNT(p.product_id) as num_products\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nWHERE p.category_id = (SELECT category_id FROM categories WHERE category_name = 'Beverages')\nGROUP BY s.supplier_id\nORDER BY num_products DESC\nLIMIT 1;"}
{"Question": "Which customer has the most orders that were shipped late (shipped_date > required_date)?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name, COUNT(o.order_id) as late_orders\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nWHERE o.shipped_date > o.required_date\nGROUP BY c.customer_id\nORDER BY late_orders DESC\nLIMIT 1;"}
{"Question": "Which employee has the highest total sales amount?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT e.first_name, e.last_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_sales\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY e.employee_id\nORDER BY total_sales DESC\nLIMIT 1;"}
{"Question": "Which customer has the most orders?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name, COUNT(o.order_id) as total_orders\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_id\nORDER BY total_orders DESC\nLIMIT 1;"}
{"Question": "Which product category has the highest average unit price?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_name, AVG(p.unit_price) as avg_unit_price\nFROM products p\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_id\nORDER BY avg_unit_price DESC\nLIMIT 1;"}
{"Question": "Which employee has the most territories assigned?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255)\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (territory_id) REFERENCES territories,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(et.territory_id) as total_territories\nFROM employees e\nJOIN employee_territories et ON e.employee_id = et.employee_id\nGROUP BY e.employee_id\nORDER BY total_territories DESC\nLIMIT 1;"}
{"Question": "Which supplier has the most products in the \"Beverages\" category?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT s.company_name, COUNT(p.product_id) as total_products\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nWHERE p.category_id = (SELECT category_id FROM categories WHERE category_name = 'Beverages')\nGROUP BY s.supplier_id\nORDER BY total_products DESC\nLIMIT 1;"}
{"Question": "Which customer has the most unique products ordered?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.company_name, COUNT(DISTINCT od.product_id) as unique_products\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY c.customer_id\nORDER BY unique_products DESC\nLIMIT 1;"}
{"Question": "Which employee has the highest total sales value?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT e.first_name, e.last_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_sales\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY e.employee_id\nORDER BY total_sales DESC\nLIMIT 1;"}
{"Question": "List all employees and the number of orders they have processed.", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT e.first_name || ' ' || e.last_name as employee, COUNT(o.order_id) as orders_processed\nFROM employees e\nLEFT JOIN orders o ON e.employee_id = o.employee_id\nGROUP BY e.employee_id, e.first_name, e.last_name\nORDER BY orders_processed DESC;"}
{"Question": "Find the top 5 customers by total order value.", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.company_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_order_value\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY c.company_name\nORDER BY total_order_value DESC\nLIMIT 5;"}
{"Question": "Find the top 3 products by total units sold.", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT p.product_name, SUM(od.quantity) as total_units_sold\nFROM products p\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_name\nORDER BY total_units_sold DESC\nLIMIT 3;"}
{"Question": "Find the top 3 countries by total order value.", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT o.ship_country, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_order_value\nFROM orders o\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY o.ship_country\nORDER BY total_order_value DESC\nLIMIT 3;"}
{"Question": "Find the top 3 employees by total sales value.", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT e.first_name || ' ' || e.last_name as employee, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_sales_value\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY e.employee_id, e.first_name, e.last_name\nORDER BY total_sales_value DESC\nLIMIT 3;"}
{"Question": "Find the top 3 suppliers by total order value.", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT s.company_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_order_value\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY s.company_name\nORDER BY total_order_value DESC\nLIMIT 3;"}
{"Question": "List all employees and the territories they are responsible for.", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (territory_id) REFERENCES territories,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);", "Query": "SELECT e.first_name || ' ' || e.last_name AS employee, STRING_AGG(t.territory_description, ', ') AS territories\nFROM employees e\nJOIN employee_territories et ON e.employee_id = et.employee_id\nJOIN territories t ON et.territory_id = t.territory_id\nGROUP BY e.first_name, e.last_name;"}
{"Question": "Find the top 5 customers by total order value.", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.company_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) AS total_order_value\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY c.company_name\nORDER BY total_order_value DESC\nLIMIT 5;"}
{"Question": "Find the top 3 best-selling products by total revenue.", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT p.product_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) AS total_revenue\nFROM products p\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_name\nORDER BY total_revenue DESC\nLIMIT 3;"}
{"Question": "Find the top 3 customers by number of orders.", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT c.company_name, COUNT(o.order_id) AS num_orders\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.company_name\nORDER BY num_orders DESC\nLIMIT 3;"}
{"Question": "Find the top 3 employees by total order value.", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT e.first_name || ' ' || e.last_name AS employee, SUM(od.unit_price * od.quantity * (1 - od.discount)) AS total_order_value\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY e.first_name, e.last_name\nORDER BY total_order_value DESC\nLIMIT 3;"}
{"Question": "Find the top 3 products by total units sold.", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT p.product_name, SUM(od.quantity) AS total_units_sold\nFROM products p\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_name\nORDER BY total_units_sold DESC\nLIMIT 3;"}
{"Question": "What is the total value of all orders with a discount applied?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15)\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT SUM(od.unit_price * od.quantity * (1 - od.discount)) AS total_order_value\nFROM order_details od\nJOIN orders o ON od.order_id = o.order_id;"}
{"Question": "What is the average discount applied to orders placed by customers in a specific country?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    country character varying(15)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT AVG(od.discount) * 100 AS avg_discount_percentage\nFROM order_details od\nJOIN orders o ON od.order_id = o.order_id\nJOIN customers c ON o.customer_id = c.customer_id\nWHERE c.country = 'Germany';"}
{"Question": "Which products have the highest average discount applied to their order details?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT p.product_name, AVG(od.discount) * 100 AS avg_discount_percentage\nFROM order_details od\nJOIN products p ON od.product_id = p.product_id\nGROUP BY p.product_name\nORDER BY avg_discount_percentage DESC\nLIMIT 5;"}
{"Question": "How does the average discount vary across different order dates?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    order_date date\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT DATE_TRUNC('month', o.order_date) AS order_month, AVG(od.discount) * 100 AS avg_discount_percentage\nFROM order_details od\nJOIN orders o ON od.order_id = o.order_id\nGROUP BY order_month\nORDER BY order_month;"}
{"Question": "What is the distribution of discount percentages across all order details?", "Context": "CREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id)\n);", "Query": "SELECT \n    ROUND(discount * 100, 2) AS discount_percentage,\n    COUNT(*) AS count\nFROM order_details\nGROUP BY discount_percentage\nORDER BY discount_percentage;"}
{"Question": "What is the total discount amount applied across all order details?", "Context": "CREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT SUM(discount * quantity * unit_price) AS total_discount_amount\nFROM order_details;"}
{"Question": "Which products have the highest average discount applied to their order details?", "Context": "CREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT p.product_name, AVG(od.discount) AS avg_discount\nFROM order_details od\nJOIN products p ON od.product_id = p.product_id\nGROUP BY p.product_name\nORDER BY avg_discount DESC\nLIMIT 5;"}
{"Question": "How does the average discount vary across different customer types?", "Context": "CREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE customer_customer_demo (\n    customer_id bpchar NOT NULL,\n    customer_type_id bpchar NOT NULL,\n    PRIMARY KEY (customer_id, customer_type_id),\n    FOREIGN KEY (customer_type_id) REFERENCES customer_demographics,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE customer_demographics (\n    customer_type_id bpchar NOT NULL PRIMARY KEY,\n    customer_desc text\n);", "Query": "SELECT cd.customer_desc, AVG(od.discount) AS avg_discount\nFROM order_details od\nJOIN orders o ON od.order_id = o.order_id\nJOIN customer_customer_demo ccd ON o.customer_id = ccd.customer_id\nJOIN customer_demographics cd ON ccd.customer_type_id = cd.customer_type_id\nGROUP BY cd.customer_desc\nORDER BY avg_discount DESC;"}
{"Question": "Which employees have the highest average discount applied to the order details they are responsible for?", "Context": "CREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT e.first_name, e.last_name, AVG(od.discount) AS avg_discount\nFROM order_details od\nJOIN orders o ON od.order_id = o.order_id\nJOIN employees e ON o.employee_id = e.employee_id\nGROUP BY e.first_name, e.last_name\nORDER BY avg_discount DESC\nLIMIT 5;"}
{"Question": "How does the average discount vary across different regions and territories?", "Context": "CREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region\n);\n\nCREATE TABLE region (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_description bpchar NOT NULL\n);", "Query": "SELECT r.region_description, t.territory_description, AVG(od.discount) AS avg_discount\nFROM order_details od\nJOIN orders o ON od.order_id = o.order_id\nJOIN territories t ON o.ship_region = t.territory_id\nJOIN region r ON t.region_id = r.region_id\nGROUP BY r.region_description, t.territory_description\nORDER BY avg_discount DESC;"}
{"Question": "How does the average discount vary across different product categories?", "Context": "CREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);", "Query": "SELECT c.category_name, AVG(od.discount) AS avg_discount\nFROM order_details od\nJOIN products p ON od.product_id = p.product_id\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_name\nORDER BY avg_discount DESC;"}
{"Question": "What are the top 5 best-selling products by total quantity ordered?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT p.product_name, SUM(od.quantity) AS total_quantity\nFROM products p\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_name\nORDER BY total_quantity DESC\nLIMIT 5;"}
{"Question": "Which suppliers have not had any of their products ordered?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT s.company_name\nFROM suppliers s\nWHERE s.supplier_id NOT IN (\n    SELECT DISTINCT p.supplier_id\n    FROM products p\n    JOIN order_details od ON p.product_id = od.product_id\n);"}
{"Question": "Which customers have placed orders for products from all categories?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);", "Query": "SELECT c.customer_id, c.company_name\nFROM customers c\nWHERE EXISTS (\n    SELECT 1\n    FROM orders o\n    JOIN order_details od ON o.order_id = od.order_id\n    JOIN products p ON od.product_id = p.product_id\n    GROUP BY o.customer_id\n    HAVING COUNT(DISTINCT p.category_id) = (SELECT COUNT(*) FROM categories)\n    AND o.customer_id = c.customer_id\n);"}
{"Question": "Which employees have the highest total order value for their orders?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT e.employee_id, e.first_name, e.last_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) AS total_order_value\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY e.employee_id, e.first_name, e.last_name\nORDER BY total_order_value DESC\nLIMIT 5;"}
{"Question": "Which product categories have the highest average unit price?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_name, AVG(p.unit_price) AS avg_unit_price\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nGROUP BY c.category_name\nORDER BY avg_unit_price DESC\nLIMIT 5;"}
{"Question": "Which customers have placed the most orders in the last 6 months?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.customer_id, c.company_name, COUNT(*) AS order_count\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nWHERE o.order_date >= DATE_TRUNC('month', CURRENT_DATE - INTERVAL 6 MONTH)\nGROUP BY c.customer_id, c.company_name\nORDER BY order_count DESC\nLIMIT 5;"}
{"Question": "Which products have the highest total order quantity across all orders?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT p.product_name, SUM(od.quantity) AS total_quantity\nFROM products p\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_name\nORDER BY total_quantity DESC\nLIMIT 5;"}
{"Question": "Which products have been ordered the most number of times?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT p.product_name, COUNT(*) AS order_count\nFROM products p\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_name\nORDER BY order_count DESC\nLIMIT 5;"}
{"Question": "What are the top 5 most expensive products?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);", "Query": "SELECT product_name, unit_price\nFROM products\nORDER BY unit_price DESC\nLIMIT 5;"}
{"Question": "Which products have the highest profit margin?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    unit_cost real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT p.product_name, (p.unit_price - p.unit_cost) AS profit_margin\nFROM products p\nORDER BY profit_margin DESC\nLIMIT 5;"}
{"Question": "Which products have the highest inventory turnover ratio?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "WITH product_sales AS (\n    SELECT p.product_id, SUM(od.quantity) AS total_sold\n    FROM products p\n    JOIN order_details od ON p.product_id = od.product_id\n    GROUP BY p.product_id\n)\nSELECT p.product_name, CAST(ps.total_sold AS FLOAT) / p.units_in_stock AS inventory_turnover\nFROM products p\nJOIN product_sales ps ON p.product_id = ps.product_id\nORDER BY inventory_turnover DESC\nLIMIT 5;"}
{"Question": "Which products have the highest total revenue generated?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT p.product_name, SUM(od.quantity * od.unit_price) AS total_revenue\nFROM products p\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_name\nORDER BY total_revenue DESC\nLIMIT 5;"}
{"Question": "Which region has the most customers?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE region (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_description bpchar NOT NULL\n);", "Query": "SELECT r.region_description, COUNT(c.customer_id) AS customer_count\nFROM customers c\nJOIN region r ON c.region = r.region_description\nGROUP BY r.region_id\nORDER BY customer_count DESC\nLIMIT 1;"}
{"Question": "Which region has the highest average employee salary?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE region (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_description bpchar NOT NULL\n);", "Query": "SELECT r.region_description, AVG(e.salary) AS avg_salary\nFROM employees e\nJOIN region r ON e.region = r.region_description\nGROUP BY r.region_id\nORDER BY avg_salary DESC\nLIMIT 1;"}
{"Question": "Which region has the highest total order value?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE region (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_description bpchar NOT NULL\n);", "Query": "SELECT r.region_description, SUM(o.freight) AS total_order_value\nFROM orders o\nJOIN customers c ON o.customer_id = c.customer_id\nJOIN region r ON c.region = r.region_description\nGROUP BY r.region_id\nORDER BY total_order_value DESC\nLIMIT 1;"}
{"Question": "Which region has the highest percentage of discontinued products?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE region (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_description bpchar NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);", "Query": "SELECT r.region_description, \n       ROUND(100.0 * SUM(CASE WHEN p.discontinued = 1 THEN 1 ELSE 0 END) / COUNT(p.product_id), 2) AS discontinued_percentage\nFROM products p\nJOIN suppliers s ON p.supplier_id = s.supplier_id\nJOIN region r ON s.region = r.region_description\nGROUP BY r.region_id\nORDER BY discontinued_percentage DESC\nLIMIT 1;"}
{"Question": "Which region has the highest percentage of customers with a specific customer type?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE customer_demographics (\n    customer_type_id bpchar NOT NULL PRIMARY KEY,\n    customer_desc text\n);\n\nCREATE TABLE customer_customer_demo (\n    customer_id bpchar NOT NULL,\n    customer_type_id bpchar NOT NULL,\n    PRIMARY KEY (customer_id, customer_type_id),\n    FOREIGN KEY (customer_type_id) REFERENCES customer_demographics,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE region (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_description bpchar NOT NULL\n);", "Query": "WITH customer_region_counts AS (\n  SELECT c.region, cd.customer_type_id, COUNT(*) AS customer_count\n  FROM customers c\n  JOIN customer_customer_demo ccd ON c.customer_id = ccd.customer_id\n  JOIN customer_demographics cd ON ccd.customer_type_id = cd.customer_type_id\n  GROUP BY c.region, cd.customer_type_id\n)\nSELECT r.region_description, cd.customer_type_id, \n       ROUND(100.0 * MAX(customer_count) / SUM(customer_count), 2) AS percentage\nFROM customer_region_counts crc\nJOIN region r ON crc.region = r.region_description\nJOIN customer_demographics cd ON crc.customer_type_id = cd.customer_type_id\nGROUP BY r.region_id, cd.customer_type_id\nORDER BY percentage DESC\nLIMIT 1;"}
{"Question": "Which region has the highest percentage of employees that are also territory managers?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (territory_id) REFERENCES territories,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE region (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_description bpchar NOT NULL\n);", "Query": "WITH region_employee_counts AS (\n  SELECT r.region_description, COUNT(e.employee_id) AS total_employees\n)\nSELECT r.region_description, \n       ROUND(100.0 * COUNT(et.employee_id) / rec.total_employees, 2) AS territory_manager_percentage\nFROM employees e\nJOIN employee_territories et ON e.employee_id = et.employee_id\nJOIN region r ON e.region = r.region_description\nJOIN region_employee_counts rec ON r.region_description = rec.region_description\nGROUP BY r.region_id, rec.total_employees\nORDER BY territory_manager_percentage DESC\nLIMIT 1;"}
{"Question": "Which region has the most customers?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);", "Query": "SELECT c.region, COUNT(c.customer_id) AS customer_count\nFROM customers c\nGROUP BY c.region\nORDER BY customer_count DESC\nLIMIT 1;"}
{"Question": "Which region has the highest average employee salary?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT e.region, AVG(e.salary) AS avg_salary\nFROM employees e\nGROUP BY e.region\nORDER BY avg_salary DESC\nLIMIT 1;"}
{"Question": "Which region has the highest percentage of customers with a specific customer type?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE customer_demographics (\n    customer_type_id bpchar NOT NULL PRIMARY KEY,\n    customer_desc text\n);\n\nCREATE TABLE customer_customer_demo (\n    customer_id bpchar NOT NULL,\n    customer_type_id bpchar NOT NULL,\n    PRIMARY KEY (customer_id, customer_type_id),\n    FOREIGN KEY (customer_type_id) REFERENCES customer_demographics,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "WITH region_customer_types AS (\n  SELECT c.region, cd.customer_type_id, COUNT(*) AS customer_count\n  FROM customers c\n  JOIN customer_customer_demo ccd ON c.customer_id = ccd.customer_id\n  JOIN customer_demographics cd ON ccd.customer_type_id = cd.customer_type_id\n  GROUP BY c.region, cd.customer_type_id\n)\nSELECT region, customer_type_id, ROUND(customer_count * 1.0 / (\n  SELECT SUM(customer_count) FROM region_customer_types WHERE region = rct.region\n), 2) AS percentage\nFROM region_customer_types rct\nORDER BY percentage DESC\nLIMIT 1;"}
{"Question": "Which region has the highest percentage of customers that are also suppliers?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);", "Query": "WITH region_customer_supplier_counts AS (\n  SELECT c.region, COUNT(*) AS customer_count, \n         (SELECT COUNT(*) FROM suppliers s WHERE s.country = c.country AND s.region = c.region) AS supplier_count\n  FROM customers c\n  GROUP BY c.region\n)\nSELECT region, ROUND(supplier_count * 1.0 / customer_count, 2) AS percentage\nFROM region_customer_supplier_counts\nORDER BY percentage DESC\nLIMIT 1;"}
{"Question": "Which region has the highest percentage of customers that have placed the most orders?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "WITH region_order_counts AS (\n  SELECT c.region, c.customer_id, COUNT(o.order_id) AS order_count\n  FROM customers c\n  LEFT JOIN orders o ON c.customer_id = o.customer_id\n  GROUP BY c.region, c.customer_id\n),\nregion_max_orders AS (\n  SELECT region, MAX(order_count) AS max_orders\n  FROM region_order_counts\n  GROUP BY region\n)\nSELECT roc.region, ROUND(COUNT(*) * 1.0 / (SELECT COUNT(*) FROM customers WHERE region = roc.region), 2) AS percentage\nFROM region_order_counts roc\nJOIN region_max_orders rmo ON roc.region = rmo.region AND roc.order_count = rmo.max_orders\nGROUP BY roc.region\nORDER BY percentage DESC\nLIMIT 1;"}
{"Question": "Which region has the highest percentage of customers that have placed orders with the highest freight cost?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "WITH region_max_freight AS (\n  SELECT region, MAX(freight) AS max_freight\n  FROM customers c\n  JOIN orders o ON c.customer_id = o.customer_id\n  GROUP BY region\n),\nregion_high_freight_customers AS (\n  SELECT c.region, c.customer_id\n  FROM customers c\n  JOIN orders o ON c.customer_id = o.customer_id\n  JOIN region_max_freight rmf ON c.region = rmf.region AND o.freight = rmf.max_freight\n  GROUP BY c.region, c.customer_id\n)\nSELECT region, ROUND(COUNT(*) * 1.0 / (SELECT COUNT(*) FROM customers WHERE region = rhfc.region), 2) AS percentage\nFROM region_high_freight_customers rhfc\nGROUP BY region\nORDER BY percentage DESC\nLIMIT 1;"}
{"Question": "What is the total freight cost for each customer's orders?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name, SUM(o.freight) as total_freight\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.company_name;"}
{"Question": "What is the average freight cost per order for each employee?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (employee_id) REFERENCES employees\n);", "Query": "SELECT e.first_name, e.last_name, AVG(o.freight) as avg_freight\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nGROUP BY e.employee_id;"}
{"Question": "Which products have the highest total freight cost associated with their orders?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15)\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT p.product_name, SUM(od.quantity * od.unit_price * (1 - od.discount)) as total_sales, SUM(o.freight) as total_freight\nFROM products p\nJOIN order_details od ON p.product_id = od.product_id\nJOIN orders o ON od.order_id = o.order_id\nGROUP BY p.product_id\nORDER BY total_freight DESC\nLIMIT 5;"}
{"Question": "What is the total freight cost for each customer's orders by country?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.country, SUM(o.freight) as total_freight\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.country\nORDER BY total_freight DESC;"}
{"Question": "What is the total freight cost for each product category?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15)\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.category_name, SUM(o.freight) as total_freight\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nJOIN order_details od ON p.product_id = od.product_id\nJOIN orders o ON od.order_id = o.order_id\nGROUP BY c.category_name\nORDER BY total_freight DESC;"}
{"Question": "What is the total freight cost for each employee's orders?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (employee_id) REFERENCES employees\n);", "Query": "SELECT e.first_name, e.last_name, SUM(o.freight) as total_freight\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nGROUP BY e.employee_id\nORDER BY total_freight DESC;"}
{"Question": "What is the total freight cost for each customer's orders?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name, SUM(o.freight) as total_freight\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.company_name;"}
{"Question": "What is the total freight cost for each product category?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15)\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.category_name, SUM(o.freight) as total_freight\nFROM orders o\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_name;"}
{"Question": "What is the total freight cost for each employee's orders?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (employee_id) REFERENCES employees\n);", "Query": "SELECT e.first_name, e.last_name, SUM(o.freight) as total_freight\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nGROUP BY e.first_name, e.last_name;"}
{"Question": "What is the total freight cost for each customer's orders by ship country?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name, o.ship_country, SUM(o.freight) as total_freight\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.company_name, o.ship_country;"}
{"Question": "What is the total freight cost for each shipper's orders by ship region?", "Context": "CREATE TABLE shippers (\n    shipper_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    phone character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT s.company_name, o.ship_region, SUM(o.freight) as total_freight\nFROM shippers s\nJOIN orders o ON s.shipper_id = o.ship_via\nGROUP BY s.company_name, o.ship_region;"}
{"Question": "Which customers have ordered products from the most number of unique categories?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders,\n    FOREIGN KEY (product_id) REFERENCES products\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    category_id smallint,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.company_name, COUNT(DISTINCT p.category_id) AS num_categories\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nGROUP BY c.company_name\nORDER BY num_categories DESC\nLIMIT 10;"}
{"Question": "Which categories have the highest average order value?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    order_date date,\n    freight real\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders,\n    FOREIGN KEY (product_id) REFERENCES products\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    category_id smallint,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_name, AVG(od.unit_price * od.quantity) AS avg_order_value\nFROM order_details od\nJOIN products p ON od.product_id = p.product_id\nJOIN categories c ON p.category_id = c.category_id\nJOIN orders o ON od.order_id = o.order_id\nGROUP BY c.category_name\nORDER BY avg_order_value DESC\nLIMIT 5;"}
{"Question": "Which customers have the highest total order value across all their orders?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    freight real,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.company_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) AS total_order_value\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY c.company_name\nORDER BY total_order_value DESC\nLIMIT 10;"}
{"Question": "Which product categories have the highest percentage of discontinued products?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    category_id smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_name, \n       ROUND(SUM(CASE WHEN p.discontinued = 1 THEN 1 ELSE 0 END) * 1.0 / COUNT(*), 2) AS pct_discontinued\nFROM products p\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_name\nORDER BY pct_discontinued DESC\nLIMIT 5;"}
{"Question": "Which customers have the highest number of unique products they have ordered?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders,\n    FOREIGN KEY (product_id) REFERENCES products\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL\n);", "Query": "SELECT c.company_name, COUNT(DISTINCT od.product_id) AS num_unique_products\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY c.company_name\nORDER BY num_unique_products DESC\nLIMIT 10;"}
{"Question": "Which employees have the highest total order value for the orders they have handled?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    employee_id smallint,\n    order_date date,\n    freight real,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT e.first_name, e.last_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) AS total_order_value\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY e.employee_id, e.first_name, e.last_name\nORDER BY total_order_value DESC\nLIMIT 10;"}
{"Question": "Which customers have ordered products from the most number of unique categories?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders,\n    FOREIGN KEY (product_id) REFERENCES products\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    category_id smallint,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.company_name, COUNT(DISTINCT p.category_id) AS num_unique_categories\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nGROUP BY c.company_name\nORDER BY num_unique_categories DESC\nLIMIT 10;"}
{"Question": "Which customers have placed the most orders that include products from the \"Beverages\" category?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    category_id smallint,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.company_name, COUNT(*) AS num_orders\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nWHERE p.category_id = (SELECT category_id FROM categories WHERE category_name = 'Beverages')\nGROUP BY c.company_name\nORDER BY num_orders DESC\nLIMIT 10;"}
{"Question": "Which customers have placed the most orders that include products from the top 3 most popular categories?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    category_id smallint,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "WITH top_categories AS (\n  SELECT category_id, category_name, COUNT(*) AS product_count\n  FROM products\n  GROUP BY category_id, category_name\n  ORDER BY product_count DESC\n  LIMIT 3\n)\nSELECT c.company_name, COUNT(*) AS num_orders\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nJOIN top_categories tc ON p.category_id = tc.category_id\nGROUP BY c.company_name\nORDER BY num_orders DESC\nLIMIT 10;"}
{"Question": "Which customers have the highest average order value for orders that include products from the \"Dairy Products\" category?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    category_id smallint,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.company_name, AVG(od.unit_price * od.quantity) AS avg_order_value\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nWHERE p.category_id = (SELECT category_id FROM categories WHERE category_name = 'Dairy Products')\nGROUP BY c.company_name\nORDER BY avg_order_value DESC\nLIMIT 10;"}
{"Question": "Which customers have placed the most orders that include products from the \"Confections\" category, and what is the total value of those orders?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    category_id smallint,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.company_name, COUNT(*) AS num_orders, SUM(od.unit_price * od.quantity) AS total_order_value\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nWHERE p.category_id = (SELECT category_id FROM categories WHERE category_name = 'Confections')\nGROUP BY c.company_name\nORDER BY num_orders DESC, total_order_value DESC\nLIMIT 10;"}
{"Question": "What is the average number of orders per product?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT AVG(order_count) AS avg_orders_per_product\nFROM (\n  SELECT p.product_id, COUNT(od.order_id) AS order_count\n  FROM products p\n  LEFT JOIN order_details od ON p.product_id = od.product_id\n  GROUP BY p.product_id\n) AS product_orders;"}
{"Question": "What are the top 3 categories by total order quantity?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT c.category_name, SUM(od.quantity) AS total_order_quantity\nFROM order_details od\nJOIN products p ON od.product_id = p.product_id\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_name\nORDER BY total_order_quantity DESC\nLIMIT 3;"}
{"Question": "Which customers have placed the most orders?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.customer_id, c.company_name, COUNT(o.order_id) AS order_count\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_id, c.company_name\nORDER BY order_count DESC\nLIMIT 3;"}
{"Question": "What is the average order value for each customer?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.customer_id, c.company_name, AVG(od.unit_price * od.quantity) AS avg_order_value\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY c.customer_id, c.company_name\nORDER BY avg_order_value DESC;"}
{"Question": "Which products have the highest total revenue?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT p.product_id, p.product_name, SUM(od.unit_price * od.quantity) AS total_revenue\nFROM products p\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_id, p.product_name\nORDER BY total_revenue DESC\nLIMIT 3;"}
{"Question": "Which employees have the highest total order value?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT e.employee_id, e.first_name, e.last_name, SUM(od.unit_price * od.quantity) AS total_order_value\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY e.employee_id, e.first_name, e.last_name\nORDER BY total_order_value DESC\nLIMIT 3;"}
{"Question": "What are the top 5 most expensive products?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT product_name, unit_price \nFROM products\nORDER BY unit_price DESC\nLIMIT 5;"}
{"Question": "Which customers have placed the most orders?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.customer_id, c.company_name, COUNT(o.order_id) AS order_count\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_id\nORDER BY order_count DESC\nLIMIT 5;"}
{"Question": "Which employees have the most territories assigned to them?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (territory_id) REFERENCES territories,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);", "Query": "SELECT e.employee_id, e.first_name, e.last_name, COUNT(et.territory_id) AS territory_count\nFROM employees e\nJOIN employee_territories et ON e.employee_id = et.employee_id\nGROUP BY e.employee_id\nORDER BY territory_count DESC\nLIMIT 5;"}
{"Question": "Which categories have the highest average product price?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT c.category_name, AVG(p.unit_price) AS avg_price\nFROM products p\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_name\nORDER BY avg_price DESC\nLIMIT 5;"}
{"Question": "Which suppliers have the most products in the database?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT s.supplier_id, s.company_name, COUNT(p.product_id) AS product_count\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nGROUP BY s.supplier_id\nORDER BY product_count DESC\nLIMIT 5;"}
{"Question": "Which products have the highest total sales value?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT p.product_name, SUM(od.quantity * od.unit_price) AS total_sales\nFROM products p\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_id\nORDER BY total_sales DESC\nLIMIT 5;"}
{"Question": "Which employees have not made any sales in a specific region?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (territory_id) REFERENCES territories,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);", "Query": "SELECT e.first_name, e.last_name\nFROM employees e\nWHERE e.employee_id NOT IN (\n    SELECT DISTINCT o.employee_id\n    FROM orders o\n    JOIN territories t ON o.ship_region = t.territory_description\n    WHERE t.region_id = 1 -- Replace with the desired region ID\n);"}
{"Question": "What are the top products that have not been ordered by any employees?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT p.product_name, p.product_id\nFROM products p\nWHERE p.product_id NOT IN (\n    SELECT DISTINCT od.product_id\n    FROM order_details od\n)\nORDER BY p.units_in_stock DESC\nLIMIT 5;"}
{"Question": "Which employees have not made any sales to customers in a specific country?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT e.first_name, e.last_name\nFROM employees e\nWHERE e.employee_id NOT IN (\n    SELECT DISTINCT o.employee_id\n    FROM orders o\n    JOIN customers c ON o.customer_id = c.customer_id\n    WHERE c.country = 'Germany' -- Replace with the desired country\n);"}
{"Question": "Which employees have not made any sales to customers in a specific city?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT e.first_name, e.last_name\nFROM employees e\nWHERE e.employee_id NOT IN (\n    SELECT DISTINCT o.employee_id\n    FROM orders o\n    JOIN customers c ON o.customer_id = c.customer_id\n    WHERE c.city = 'London' -- Replace with the desired city\n);"}
{"Question": "Which employees have not made any sales to customers with a specific contact title?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT e.first_name, e.last_name\nFROM employees e\nWHERE e.employee_id NOT IN (\n    SELECT DISTINCT o.employee_id\n    FROM orders o\n    JOIN customers c ON o.customer_id = c.customer_id\n    WHERE c.contact_title = 'Owner' -- Replace with the desired contact title\n);"}
{"Question": "Which employees have the highest number of orders they have processed?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(o.order_id) AS total_orders\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nGROUP BY e.first_name, e.last_name\nORDER BY total_orders DESC\nLIMIT 5;"}
{"Question": "Which employees have the highest total sales value for the orders they have processed?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT e.first_name, e.last_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) AS total_sales\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY e.first_name, e.last_name\nORDER BY total_sales DESC\nLIMIT 5;"}
{"Question": "Which employees have the highest number of orders that were shipped late (shipped_date > required_date)?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(*) AS late_orders\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nWHERE o.shipped_date > o.required_date\nGROUP BY e.first_name, e.last_name\nORDER BY late_orders DESC\nLIMIT 5;"}
{"Question": "Which employees have the highest number of orders that were shipped to a different country than the customer's country?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(*) AS cross_country_orders\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN customers c ON o.customer_id = c.customer_id\nWHERE o.ship_country <> c.country\nGROUP BY e.first_name, e.last_name\nORDER BY cross_country_orders DESC\nLIMIT 5;"}
{"Question": "Which employees have the highest number of orders that were shipped to a different region than the customer's region?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(*) AS cross_region_orders\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN customers c ON o.customer_id = c.customer_id\nWHERE o.ship_region <> c.region\nGROUP BY e.first_name, e.last_name\nORDER BY cross_region_orders DESC\nLIMIT 5;"}
{"Question": "Which employees have the highest number of orders that were shipped to a different city than the customer's city?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(*) AS cross_city_orders\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN customers c ON o.customer_id = c.customer_id\nWHERE o.ship_city <> c.city\nGROUP BY e.first_name, e.last_name\nORDER BY cross_city_orders DESC\nLIMIT 5;"}
{"Question": "What is the average number of products ordered per customer?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT AVG(product_count) AS avg_products_per_customer\nFROM (\n  SELECT customer_id, COUNT(order_id) AS product_count\n  FROM order_details od\n  JOIN orders o ON od.order_id = o.order_id\n  GROUP BY customer_id\n) AS subquery;"}
{"Question": "What is the average number of orders per employee?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT AVG(order_count) AS avg_orders_per_employee\nFROM (\n  SELECT employee_id, COUNT(order_id) AS order_count\n  FROM orders\n  GROUP BY employee_id\n) AS subquery;"}
{"Question": "What is the average number of products ordered per order for each customer type?", "Context": "CREATE TABLE customer_demographics (\n    customer_type_id bpchar NOT NULL PRIMARY KEY,\n    customer_desc text\n);\n\nCREATE TABLE customer_customer_demo (\n    customer_id bpchar NOT NULL,\n    customer_type_id bpchar NOT NULL,\n    PRIMARY KEY (customer_id, customer_type_id),\n    FOREIGN KEY (customer_type_id) REFERENCES customer_demographics,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT cd.customer_desc, AVG(product_count) AS avg_products_per_order\nFROM (\n  SELECT o.order_id, COUNT(od.product_id) AS product_count\n  FROM orders o\n  JOIN order_details od ON o.order_id = od.order_id\n  GROUP BY o.order_id\n) AS subquery\nJOIN customer_customer_demo ccd ON subquery.order_id = ccd.customer_id\nJOIN customer_demographics cd ON ccd.customer_type_id = cd.customer_type_id\nGROUP BY cd.customer_desc;"}
{"Question": "What is the average number of products ordered per order for each employee?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT e.first_name, e.last_name, AVG(product_count) AS avg_products_per_order\nFROM (\n  SELECT o.order_id, COUNT(od.product_id) AS product_count\n  FROM orders o\n  JOIN order_details od ON o.order_id = od.order_id\n  GROUP BY o.order_id\n) AS subquery\nJOIN orders o ON subquery.order_id = o.order_id\nJOIN employees e ON o.employee_id = e.employee_id\nGROUP BY e.first_name, e.last_name;"}
{"Question": "What is the average number of products ordered per order for each product category?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.category_name, AVG(product_count) AS avg_products_per_order\nFROM (\n  SELECT o.order_id, COUNT(od.product_id) AS product_count\n  FROM orders o\n  JOIN order_details od ON o.order_id = od.order_id\n  GROUP BY o.order_id\n) AS subquery\nJOIN order_details od ON subquery.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_name;"}
{"Question": "What is the average number of products ordered per order for each customer country?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.country, AVG(product_count) AS avg_products_per_order\nFROM (\n  SELECT o.order_id, COUNT(od.product_id) AS product_count\n  FROM orders o\n  JOIN order_details od ON o.order_id = od.order_id\n  GROUP BY o.order_id\n) AS subquery\nJOIN orders o ON subquery.order_id = o.order_id\nJOIN customers c ON o.customer_id = c.customer_id\nGROUP BY c.country;"}
{"Question": "What is the total revenue generated from orders placed by customers in each region?", "Context": "CREATE TABLE regions (\n    region_id SMALLINT PRIMARY KEY,\n    region_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    customer_id CHAR(5) PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    region_id SMALLINT FOREIGN KEY REFERENCES regions(region_id)\n);\n\nCREATE TABLE orders (\n    order_id SMALLINT PRIMARY KEY,\n    customer_id CHAR(5) FOREIGN KEY REFERENCES customers(customer_id),\n    order_date DATE NOT NULL,\n    total_amount DECIMAL(10,2) NOT NULL\n);", "Query": "SELECT r.region_name, SUM(o.total_amount) AS total_revenue\nFROM orders o\nJOIN customers c ON o.customer_id = c.customer_id\nJOIN regions r ON c.region_id = r.region_id\nGROUP BY r.region_name;"}
{"Question": "Which product categories have the highest average order quantities?", "Context": "CREATE TABLE categories (\n    category_id SMALLINT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SMALLINT PRIMARY KEY,\n    product_name VARCHAR(100) NOT NULL,\n    category_id SMALLINT FOREIGN KEY REFERENCES categories(category_id)\n);\n\nCREATE TABLE order_details (\n    order_id SMALLINT NOT NULL,\n    product_id SMALLINT NOT NULL,\n    quantity SMALLINT NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\nCREATE TABLE orders (\n    order_id SMALLINT PRIMARY KEY,\n    order_date DATE NOT NULL,\n    customer_id CHAR(5) NOT NULL\n);", "Query": "SELECT c.category_name, AVG(od.quantity) AS avg_order_quantity\nFROM order_details od\nJOIN products p ON od.product_id = p.product_id\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_name\nORDER BY avg_order_quantity DESC\nLIMIT 3;"}
{"Question": "Which employees have the highest total order value for their assigned territories?", "Context": "CREATE TABLE employees (\n    employee_id SMALLINT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE territories (\n    territory_id VARCHAR(20) PRIMARY KEY,\n    territory_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employee_territories (\n    employee_id SMALLINT NOT NULL,\n    territory_id VARCHAR(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n    FOREIGN KEY (territory_id) REFERENCES territories(territory_id)\n);\n\nCREATE TABLE orders (\n    order_id SMALLINT PRIMARY KEY,\n    employee_id SMALLINT NOT NULL,\n    order_date DATE NOT NULL,\n    total_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);", "Query": "SELECT e.first_name, e.last_name, SUM(o.total_amount) AS total_order_value\nFROM orders o\nJOIN employees e ON o.employee_id = e.employee_id\nJOIN employee_territories et ON e.employee_id = et.employee_id\nGROUP BY e.employee_id, e.first_name, e.last_name\nORDER BY total_order_value DESC\nLIMIT 3;"}
{"Question": "Which customer types have the highest average order frequency?", "Context": "CREATE TABLE customer_types (\n    customer_type_id CHAR(1) PRIMARY KEY,\n    customer_type_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    customer_id CHAR(5) PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_type_id CHAR(1) FOREIGN KEY REFERENCES customer_types(customer_type_id)\n);\n\nCREATE TABLE orders (\n    order_id SMALLINT PRIMARY KEY,\n    customer_id CHAR(5) FOREIGN KEY REFERENCES customers(customer_id),\n    order_date DATE NOT NULL\n);", "Query": "SELECT ct.customer_type_name, AVG(order_count) AS avg_order_frequency\nFROM (\n    SELECT customer_id, COUNT(*) AS order_count\n    FROM orders\n    GROUP BY customer_id\n) AS order_counts\nJOIN customers c ON order_counts.customer_id = c.customer_id\nJOIN customer_types ct ON c.customer_type_id = ct.customer_type_id\nGROUP BY ct.customer_type_name\nORDER BY avg_order_frequency DESC\nLIMIT 3;"}
{"Question": "Which product categories have the highest total sales value?", "Context": "CREATE TABLE categories (\n    category_id SMALLINT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SMALLINT PRIMARY KEY,\n    product_name VARCHAR(100) NOT NULL,\n    category_id SMALLINT FOREIGN KEY REFERENCES categories(category_id)\n);\n\nCREATE TABLE order_details (\n    order_id SMALLINT NOT NULL,\n    product_id SMALLINT NOT NULL,\n    quantity SMALLINT NOT NULL,\n    unit_price DECIMAL(10,2) NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE orders (\n    order_id SMALLINT PRIMARY KEY,\n    order_date DATE NOT NULL\n);", "Query": "SELECT c.category_name, SUM(od.quantity * od.unit_price) AS total_sales_value\nFROM order_details od\nJOIN products p ON od.product_id = p.product_id\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_name\nORDER BY total_sales_value DESC\nLIMIT 3;"}
{"Question": "Which suppliers have the highest number of products in the top-selling categories?", "Context": "CREATE TABLE suppliers (\n    supplier_id SMALLINT PRIMARY KEY,\n    supplier_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE categories (\n    category_id SMALLINT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SMALLINT PRIMARY KEY,\n    product_name VARCHAR(100) NOT NULL,\n    supplier_id SMALLINT FOREIGN KEY REFERENCES suppliers(supplier_id),\n    category_id SMALLINT FOREIGN KEY REFERENCES categories(category_id)\n);\n\nCREATE TABLE order_details (\n    order_id SMALLINT NOT NULL,\n    product_id SMALLINT NOT NULL,\n    quantity SMALLINT NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE orders (\n    order_id SMALLINT PRIMARY KEY,\n    order_date DATE NOT NULL\n);", "Query": "WITH top_categories AS (\n    SELECT category_id, SUM(total_sales) AS total_sales\n    FROM (\n        SELECT od.product_id, SUM(od.quantity) AS total_sales\n        FROM order_details od\n        JOIN products p ON od.product_id = p.product_id\n        GROUP BY od.product_id\n    ) AS product_sales\n    JOIN products p ON product_sales.product_id = p.product_id\n    GROUP BY category_id\n    ORDER BY total_sales DESC\n    LIMIT 3\n)\nSELECT s.supplier_name, COUNT(*) AS num_top_products\nFROM products p\nJOIN suppliers s ON p.supplier_id = s.supplier_id\nWHERE p.category_id IN (SELECT category_id FROM top_categories)\nGROUP BY s.supplier_name\nORDER BY num_top_products DESC\nLIMIT 3;"}
{"Question": "Which customer has the highest total order value across all their orders?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.company_name, SUM(od.unit_price * od.quantity) as total_order_value\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY c.customer_id\nORDER BY total_order_value DESC\nLIMIT 1;"}
{"Question": "Which customer has the highest average order value across their orders?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.company_name, AVG(od.unit_price * od.quantity) as avg_order_value\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY c.customer_id\nORDER BY avg_order_value DESC\nLIMIT 1;"}
{"Question": "Which customer has the highest total order quantity across all their orders?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.company_name, SUM(od.quantity) as total_order_quantity\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY c.customer_id\nORDER BY total_order_quantity DESC\nLIMIT 1;"}
{"Question": "Which customer has the highest number of orders that were shipped late (shipped_date > required_date)?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name, COUNT(*) as late_orders\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nWHERE o.shipped_date > o.required_date\nGROUP BY c.customer_id\nORDER BY late_orders DESC\nLIMIT 1;"}
{"Question": "Which customer has the highest percentage of their orders that were shipped on time (shipped_date <= required_date)?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "WITH customer_orders AS (\n  SELECT c.customer_id, c.company_name, COUNT(*) as total_orders,\n         SUM(CASE WHEN o.shipped_date <= o.required_date THEN 1 ELSE 0 END) as on_time_orders\n  FROM customers c\n  JOIN orders o ON c.customer_id = o.customer_id\n  GROUP BY c.customer_id, c.company_name\n)\nSELECT company_name, ROUND(100.0 * on_time_orders / total_orders, 2) as on_time_percentage\nFROM customer_orders\nORDER BY on_time_percentage DESC\nLIMIT 1;"}
{"Question": "Which customers have placed orders for products from the most different categories?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    category_id smallint,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.company_name, COUNT(DISTINCT p.category_id) AS unique_categories\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nGROUP BY c.customer_id\nORDER BY unique_categories DESC\nLIMIT 1;"}
{"Question": "Which customers have placed orders for the highest total quantity of products?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id)\n);", "Query": "SELECT c.company_name, SUM(od.quantity) AS total_quantity\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY c.customer_id\nORDER BY total_quantity DESC\nLIMIT 1;"}
{"Question": "Which customers have placed orders for the highest total value (quantity * unit_price)?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id)\n);", "Query": "SELECT c.company_name, SUM(od.quantity * od.unit_price) AS total_order_value\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY c.customer_id\nORDER BY total_order_value DESC\nLIMIT 1;"}
{"Question": "Which customers have placed orders for the highest total number of unique products?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id)\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL\n);", "Query": "SELECT c.company_name, COUNT(DISTINCT od.product_id) AS unique_products\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY c.customer_id\nORDER BY unique_products DESC\nLIMIT 1;"}
{"Question": "Which customers have placed orders for the highest total value of products from a single category?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id)\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    category_id smallint\n);\n\nCREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL\n);", "Query": "SELECT c.company_name, SUM(od.quantity * od.unit_price) AS category_order_value\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nJOIN categories cat ON p.category_id = cat.category_id\nGROUP BY c.customer_id, cat.category_id\nORDER BY category_order_value DESC\nLIMIT 1;"}
{"Question": "Which customers have placed orders for the highest total value of products from a single supplier?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id)\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL\n);", "Query": "SELECT c.company_name, SUM(od.quantity * od.unit_price) AS supplier_order_value\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nJOIN suppliers s ON p.supplier_id = s.supplier_id\nGROUP BY c.customer_id, s.supplier_id\nORDER BY supplier_order_value DESC\nLIMIT 1;"}
{"Question": "List all suppliers and the total revenue they have generated from their products.", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT s.company_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) AS total_revenue\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY s.company_name;"}
{"Question": "Find the top 5 suppliers based on the total number of orders they have received.", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15)\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT s.company_name, COUNT(od.order_id) AS total_orders\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nJOIN order_details od ON p.product_id = od.product_id\nJOIN orders o ON od.order_id = o.order_id\nGROUP BY s.company_name\nORDER BY total_orders DESC\nLIMIT 5;"}
{"Question": "Find the top 3 suppliers based on the total number of products they supply.", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT s.company_name, COUNT(p.product_id) AS total_products\nFROM suppliers s\nLEFT JOIN products p ON s.supplier_id = p.supplier_id\nGROUP BY s.company_name\nORDER BY total_products DESC\nLIMIT 3;"}
{"Question": "Identify the suppliers that have not supplied any products in the last 6 months.", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15)\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT s.company_name\nFROM suppliers s\nLEFT JOIN products p ON s.supplier_id = p.supplier_id\nLEFT JOIN order_details od ON p.product_id = od.product_id\nLEFT JOIN orders o ON od.order_id = o.order_id\nWHERE o.order_date < DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH)\nGROUP BY s.company_name\nHAVING COUNT(p.product_id) = 0;"}
{"Question": "Find the suppliers that have the highest average order value for their products.", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15)\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT s.company_name, AVG(od.unit_price * od.quantity * (1 - od.discount)) AS avg_order_value\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nJOIN order_details od ON p.product_id = od.product_id\nJOIN orders o ON od.order_id = o.order_id\nGROUP BY s.company_name\nORDER BY avg_order_value DESC\nLIMIT 3;"}
{"Question": "Identify the suppliers that have the highest number of products with units in stock.", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT s.company_name, COUNT(p.product_id) AS products_in_stock\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nWHERE p.units_in_stock > 0\nGROUP BY s.company_name\nORDER BY products_in_stock DESC\nLIMIT 3;"}
{"Question": "Which suppliers have the highest number of products they supply?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT s.company_name, COUNT(p.product_id) as product_count\nFROM suppliers s\nLEFT JOIN products p ON s.supplier_id = p.supplier_id\nGROUP BY s.supplier_id\nORDER BY product_count DESC\nLIMIT 5;"}
{"Question": "What is the average number of products supplied by each supplier?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT AVG(product_count) AS avg_products_per_supplier\nFROM (\n  SELECT s.supplier_id, COUNT(p.product_id) AS product_count\n  FROM suppliers s\n  LEFT JOIN products p ON s.supplier_id = p.supplier_id\n  GROUP BY s.supplier_id\n) AS supplier_product_counts;"}
{"Question": "Which suppliers have the most diverse range of products they supply?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);", "Query": "SELECT s.company_name, COUNT(DISTINCT p.category_id) AS unique_categories\nFROM suppliers s\nLEFT JOIN products p ON s.supplier_id = p.supplier_id\nGROUP BY s.supplier_id\nORDER BY unique_categories DESC\nLIMIT 5;"}
{"Question": "Which suppliers have the highest total sales value of the products they supply?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT s.company_name, SUM(od.unit_price * od.quantity) AS total_sales\nFROM suppliers s\nLEFT JOIN products p ON s.supplier_id = p.supplier_id\nLEFT JOIN order_details od ON p.product_id = od.product_id\nGROUP BY s.supplier_id\nORDER BY total_sales DESC\nLIMIT 5;"}
{"Question": "Which suppliers have the highest percentage of their products that are currently discontinued?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT s.company_name, \n       ROUND(SUM(CASE WHEN p.discontinued = 1 THEN 1 ELSE 0 END) * 1.0 / COUNT(p.product_id), 2) AS discontinued_percentage\nFROM suppliers s\nLEFT JOIN products p ON s.supplier_id = p.supplier_id\nGROUP BY s.supplier_id\nORDER BY discontinued_percentage DESC\nLIMIT 5;"}
{"Question": "Which suppliers have the highest ratio of products in stock to products discontinued?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT s.company_name,\n       ROUND(SUM(CASE WHEN p.discontinued = 0 THEN p.units_in_stock ELSE 0 END) * 1.0 / \n            SUM(CASE WHEN p.discontinued = 1 THEN 1 ELSE 0 END), 2) AS in_stock_to_discontinued_ratio\nFROM suppliers s\nLEFT JOIN products p ON s.supplier_id = p.supplier_id\nGROUP BY s.supplier_id\nORDER BY in_stock_to_discontinued_ratio DESC\nLIMIT 5;"}
{"Question": "What is the total sales amount for each category by customer type?", "Context": "CREATE TABLE customer_demographics (\n    customer_type_id bpchar NOT NULL PRIMARY KEY,\n    customer_desc text\n);\n\nCREATE TABLE customer_customer_demo (\n    customer_id bpchar NOT NULL,\n    customer_type_id bpchar NOT NULL,\n    PRIMARY KEY (customer_id, customer_type_id),\n    FOREIGN KEY (customer_type_id) REFERENCES customer_demographics,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.category_name, cd.customer_desc, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_sales\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nJOIN order_details od ON p.product_id = od.product_id\nJOIN orders o ON od.order_id = o.order_id\nJOIN customer_customer_demo ccd ON o.customer_id = ccd.customer_id\nJOIN customer_demographics cd ON ccd.customer_type_id = cd.customer_type_id\nGROUP BY c.category_id, cd.customer_desc;"}
{"Question": "What is the total sales amount for each category by region?", "Context": "CREATE TABLE region (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_description bpchar NOT NULL\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (territory_id) REFERENCES territories,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);", "Query": "SELECT c.category_name, r.region_description, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_sales\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nJOIN order_details od ON p.product_id = od.product_id\nJOIN orders o ON od.order_id = o.order_id\nJOIN employees e ON o.employee_id = e.employee_id\nJOIN employee_territories et ON e.employee_id = et.employee_id\nJOIN territories t ON et.territory_id = t.territory_id\nJOIN region r ON t.region_id = r.region_id\nGROUP BY c.category_id, r.region_description;"}
{"Question": "What is the total sales amount for each category by supplier country?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT c.category_name, s.country, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_sales\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nJOIN suppliers s ON p.supplier_id = s.supplier_id\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY c.category_id, s.country;"}
{"Question": "What is the total sales amount for each category by employee region?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);", "Query": "SELECT c.category_name, e.region, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_sales\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nJOIN order_details od ON p.product_id = od.product_id\nJOIN orders o ON od.order_id = o.order_id\nJOIN employees e ON o.employee_id = e.employee_id\nGROUP BY c.category_id, e.region;"}
{"Question": "What is the total sales amount for each category by customer country?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.category_name, cu.country, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_sales\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nJOIN order_details od ON p.product_id = od.product_id\nJOIN orders o ON od.order_id = o.order_id\nJOIN customers cu ON o.customer_id = cu.customer_id\nGROUP BY c.category_id, cu.country;"}
{"Question": "What are the top 5 best-selling products in each category?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT c.category_name, p.product_name, SUM(od.quantity) as total_sold\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY c.category_name, p.product_name\nORDER BY c.category_name, total_sold DESC\nLIMIT 5 PER GROUP;"}
{"Question": "What is the average order value for each customer type?", "Context": "CREATE TABLE customer_demographics (\n    customer_type_id bpchar NOT NULL PRIMARY KEY,\n    customer_desc text\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE customer_customer_demo (\n    customer_id bpchar NOT NULL,\n    customer_type_id bpchar NOT NULL,\n    PRIMARY KEY (customer_id, customer_type_id),\n    FOREIGN KEY (customer_type_id) REFERENCES customer_demographics,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    freight real,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT cd.customer_desc, AVG(o.freight) as avg_order_value\nFROM customer_customer_demo ccd\nJOIN customer_demographics cd ON ccd.customer_type_id = cd.customer_type_id\nJOIN orders o ON ccd.customer_id = o.customer_id\nGROUP BY cd.customer_desc;"}
{"Question": "Which employees have the highest total sales for their assigned territories?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (territory_id) REFERENCES territories,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    employee_id smallint,\n    order_date date,\n    freight real,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT e.first_name, e.last_name, SUM(od.quantity * od.unit_price * (1 - od.discount)) as total_sales\nFROM employees e\nJOIN employee_territories et ON e.employee_id = et.employee_id\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY e.employee_id\nORDER BY total_sales DESC\nLIMIT 5;"}
{"Question": "Which suppliers have the highest total sales across all their products?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT s.company_name, SUM(od.quantity * od.unit_price * (1 - od.discount)) as total_sales\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY s.supplier_id\nORDER BY total_sales DESC\nLIMIT 5;"}
{"Question": "What is the total sales amount for each product category in each region?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE region (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_description bpchar NOT NULL\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    employee_id smallint,\n    ship_via smallint,\n    freight real,\n    ship_country character varying(15)\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.category_name, r.region_description, SUM(od.quantity * od.unit_price * (1 - od.discount)) as total_sales\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nJOIN order_details od ON p.product_id = od.product_id\nJOIN orders o ON od.order_id = o.order_id\nJOIN territories t ON o.ship_country = t.territory_description\nJOIN region r ON t.region_id = r.region_id\nGROUP BY c.category_name, r.region_description\nORDER BY c.category_name, r.region_description, total_sales DESC;"}
{"Question": "Which customers have the highest total order value across all their orders?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    freight real,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.company_name, SUM(o.freight) as total_order_value\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_id\nORDER BY total_order_value DESC\nLIMIT 5;"}
{"Question": "What are the top 5 most expensive products ordered by customers?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT p.product_name, p.unit_price\nFROM products p\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_name, p.unit_price\nORDER BY p.unit_price DESC\nLIMIT 5;"}
{"Question": "Which customers have ordered the most expensive products from each category?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT c.company_name, p.category_id, p.product_name, p.unit_price\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nWHERE p.unit_price = (\n    SELECT MAX(unit_price)\n    FROM products\n    WHERE category_id = p.category_id\n)\nGROUP BY c.company_name, p.category_id, p.product_name, p.unit_price\nORDER BY p.category_id, p.unit_price DESC;"}
{"Question": "Which customers have ordered the most expensive products from each supplier?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);", "Query": "SELECT c.company_name, s.company_name, p.product_name, p.unit_price\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nJOIN suppliers s ON p.supplier_id = s.supplier_id\nWHERE p.unit_price = (\n    SELECT MAX(unit_price)\n    FROM products\n    WHERE supplier_id = p.supplier_id\n)\nGROUP BY c.company_name, s.company_name, p.product_name, p.unit_price\nORDER BY s.company_name, p.unit_price DESC;"}
{"Question": "What are the top 5 customers who have ordered the most expensive products from the most expensive suppliers?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);", "Query": "SELECT c.company_name, s.company_name, p.product_name, p.unit_price\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nJOIN suppliers s ON p.supplier_id = s.supplier_id\nWHERE p.unit_price = (\n    SELECT MAX(unit_price)\n    FROM products\n) AND s.unit_price = (\n    SELECT MAX(unit_price)\n    FROM suppliers\n)\nGROUP BY c.company_name, s.company_name, p.product_name, p.unit_price\nORDER BY p.unit_price DESC\nLIMIT 5;"}
{"Question": "Which customers have ordered the most expensive products from the most expensive suppliers in each region?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE regions (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_name character varying(50) NOT NULL\n);", "Query": "SELECT c.company_name, r.region_name, s.company_name, p.product_name, p.unit_price\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nJOIN suppliers s ON p.supplier_id = s.supplier_id\nJOIN (\n    SELECT customer_id, MAX(unit_price) AS max_price\n    FROM order_details od\n    JOIN products p ON od.product_id = p.product_id\n    GROUP BY customer_id\n) max_prices ON c.customer_id = max_prices.customer_id\nJOIN (\n    SELECT supplier_id, MAX(unit_price) AS max_price\n    FROM suppliers\n    GROUP BY supplier_id\n) max_supplier_prices ON s.supplier_id = max_supplier_prices.supplier_id\nJOIN (\n    SELECT region_id, MAX(unit_price) AS max_price\n    FROM products p\n    JOIN suppliers s ON p.supplier_id = s.supplier_id\n    GROUP BY region_id\n) max_region_prices ON s.region = max_region_prices.region_id\nJOIN regions r ON s.region = r.region_id\nWHERE p.unit_price = max_prices.max_price\n  AND s.unit_price = max_supplier_prices.max_price\n  AND s.region = max_region_prices.region_id\nGROUP BY c.company_name, r.region_name, s.company_name, p.product_name, p.unit_price\nORDER BY r.region_name, p.unit_price DESC;"}
{"Question": "What are the top 3 most expensive products in each category?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_name, p.product_name, p.unit_price\nFROM products p\nJOIN categories c ON p.category_id = c.category_id\nWHERE p.unit_price IN (\n  SELECT unit_price\n  FROM (\n    SELECT unit_price, ROW_NUMBER() OVER (PARTITION BY category_id ORDER BY unit_price DESC) AS rn\n    FROM products\n  ) t\n  WHERE rn <= 3\n)\nORDER BY c.category_name, p.unit_price DESC;"}
{"Question": "Which customers have placed orders for products from the most number of different suppliers?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.customer_id, c.company_name, COUNT(DISTINCT p.supplier_id) AS num_suppliers\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nGROUP BY c.customer_id, c.company_name\nORDER BY num_suppliers DESC\nLIMIT 3;"}
{"Question": "Which employees have the highest total order value for their orders?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    employee_id smallint,\n    order_date date,\n    freight real,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT e.employee_id, e.first_name, e.last_name, SUM(od.unit_price * od.quantity) AS total_order_value\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY e.employee_id, e.first_name, e.last_name\nORDER BY total_order_value DESC\nLIMIT 3;"}
{"Question": "Which customers have placed orders for the most number of unique products?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL\n);", "Query": "SELECT c.customer_id, c.company_name, COUNT(DISTINCT od.product_id) AS num_unique_products\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY c.customer_id, c.company_name\nORDER BY num_unique_products DESC\nLIMIT 3;"}
{"Question": "Which customers have placed the most number of orders for discontinued products?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    discontinued integer NOT NULL\n);", "Query": "SELECT c.customer_id, c.company_name, COUNT(*) AS num_discontinued_orders\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nWHERE p.discontinued = 1\nGROUP BY c.customer_id, c.company_name\nORDER BY num_discontinued_orders DESC\nLIMIT 3;"}
{"Question": "Which employees have the highest number of orders processed?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(o.order_id) as order_count\nFROM employees e\nLEFT JOIN orders o ON e.employee_id = o.employee_id\nGROUP BY e.employee_id\nORDER BY order_count DESC\nLIMIT 5;"}
{"Question": "What is the average number of orders processed by employees?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT AVG(order_count) as avg_orders\nFROM (\n  SELECT COUNT(o.order_id) as order_count\n  FROM employees e\n  LEFT JOIN orders o ON e.employee_id = o.employee_id\n  GROUP BY e.employee_id\n) as subquery;"}
{"Question": "Which employees have processed the most orders in a single year?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(o.order_id) as order_count\nFROM employees e\nLEFT JOIN orders o ON e.employee_id = o.employee_id\nWHERE o.order_date BETWEEN '2022-01-01' AND '2022-12-31'\nGROUP BY e.employee_id\nORDER BY order_count DESC\nLIMIT 5;"}
{"Question": "Which employees have the highest total order value processed?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT e.first_name, e.last_name, SUM(od.unit_price * od.quantity) as total_order_value\nFROM employees e\nLEFT JOIN orders o ON e.employee_id = o.employee_id\nLEFT JOIN order_details od ON o.order_id = od.order_id\nGROUP BY e.employee_id\nORDER BY total_order_value DESC\nLIMIT 5;"}
{"Question": "Which employees have the highest number of orders with the highest freight charges?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(o.order_id) as order_count\nFROM employees e\nLEFT JOIN orders o ON e.employee_id = o.employee_id\nWHERE o.freight > (SELECT AVG(freight) FROM orders)\nGROUP BY e.employee_id\nORDER BY order_count DESC\nLIMIT 5;"}
{"Question": "Which employees have the highest number of orders processed?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(o.order_id) as order_count\nFROM employees e\nLEFT JOIN orders o ON e.employee_id = o.employee_id\nGROUP BY e.employee_id\nORDER BY order_count DESC\nLIMIT 5;"}
{"Question": "Which employees have processed orders for customers in specific regions?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);", "Query": "SELECT e.first_name, e.last_name, c.region, COUNT(o.order_id) as order_count\nFROM employees e\nLEFT JOIN orders o ON e.employee_id = o.employee_id\nLEFT JOIN customers c ON o.customer_id = c.customer_id\nGROUP BY e.employee_id, c.region\nORDER BY order_count DESC;"}
{"Question": "Which employees have processed the most orders for specific product categories?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);", "Query": "SELECT e.first_name, e.last_name, c.category_name, COUNT(od.order_id) as order_count\nFROM employees e\nLEFT JOIN orders o ON e.employee_id = o.employee_id\nLEFT JOIN order_details od ON o.order_id = od.order_id\nLEFT JOIN products p ON od.product_id = p.product_id\nLEFT JOIN categories c ON p.category_id = c.category_id\nGROUP BY e.employee_id, c.category_name\nORDER BY order_count DESC;"}
{"Question": "Which employees have processed the most orders for specific customers?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);", "Query": "SELECT e.first_name, e.last_name, c.company_name, COUNT(o.order_id) as order_count\nFROM employees e\nLEFT JOIN orders o ON e.employee_id = o.employee_id\nLEFT JOIN customers c ON o.customer_id = c.customer_id\nGROUP BY e.employee_id, c.company_name\nORDER BY order_count DESC;"}
{"Question": "Which employees have processed the most orders within a specific time period?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(o.order_id) as order_count\nFROM employees e\nLEFT JOIN orders o ON e.employee_id = o.employee_id\nWHERE o.order_date BETWEEN '2022-01-01' AND '2022-12-31'\nGROUP BY e.employee_id\nORDER BY order_count DESC;"}
{"Question": "Which employees have processed the most orders for specific product suppliers?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);", "Query": "SELECT e.first_name, e.last_name, s.company_name, COUNT(od.order_id) as order_count\nFROM employees e\nLEFT JOIN orders o ON e.employee_id = o.employee_id\nLEFT JOIN order_details od ON o.order_id = od.order_id\nLEFT JOIN products p ON od.product_id = p.product_id\nLEFT JOIN suppliers s ON p.supplier_id = s.supplier_id\nGROUP BY e.employee_id, s.company_name\nORDER BY order_count DESC;"}
{"Question": "What is the total revenue generated from orders in each region?", "Context": "CREATE TABLE regions (\n    region_id SMALLINT PRIMARY KEY,\n    region_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id SMALLINT PRIMARY KEY,\n    customer_id CHAR(5),\n    order_date DATE,\n    ship_region VARCHAR(15),\n    freight DECIMAL(10,2)\n);\n\nCREATE TABLE order_details (\n    order_id SMALLINT,\n    product_id SMALLINT,\n    unit_price DECIMAL(10,2),\n    quantity SMALLINT,\n    discount DECIMAL(4,2),\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);", "Query": "SELECT r.region_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) AS total_revenue\nFROM orders o\nJOIN order_details od ON o.order_id = od.order_id\nJOIN regions r ON o.ship_region = r.region_name\nGROUP BY r.region_name;"}
{"Question": "Which customer types have the highest average order value?", "Context": "CREATE TABLE customer_types (\n    customer_type_id CHAR(1) PRIMARY KEY,\n    customer_type_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    customer_id CHAR(5) PRIMARY KEY,\n    customer_type_id CHAR(1),\n    company_name VARCHAR(40) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id SMALLINT PRIMARY KEY,\n    customer_id CHAR(5),\n    order_date DATE,\n    total_value DECIMAL(10,2)\n);\n\nCREATE TABLE order_details (\n    order_id SMALLINT,\n    product_id SMALLINT,\n    unit_price DECIMAL(10,2),\n    quantity SMALLINT,\n    discount DECIMAL(4,2),\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);", "Query": "SELECT ct.customer_type_name, AVG(o.total_value) AS avg_order_value\nFROM orders o\nJOIN customers c ON o.customer_id = c.customer_id\nJOIN customer_types ct ON c.customer_type_id = ct.customer_type_id\nGROUP BY ct.customer_type_name\nORDER BY avg_order_value DESC;"}
{"Question": "What is the average order value for each employee?", "Context": "CREATE TABLE employees (\n    employee_id SMALLINT PRIMARY KEY,\n    first_name VARCHAR(10),\n    last_name VARCHAR(20)\n);\n\nCREATE TABLE orders (\n    order_id SMALLINT PRIMARY KEY,\n    employee_id SMALLINT,\n    order_date DATE,\n    total_value DECIMAL(10,2),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);", "Query": "SELECT e.first_name, e.last_name, AVG(o.total_value) AS avg_order_value\nFROM orders o\nJOIN employees e ON o.employee_id = e.employee_id\nGROUP BY e.employee_id, e.first_name, e.last_name;"}
{"Question": "Which product categories have the highest average order value?", "Context": "CREATE TABLE categories (\n    category_id SMALLINT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SMALLINT PRIMARY KEY,\n    product_name VARCHAR(40),\n    category_id SMALLINT,\n    unit_price DECIMAL(10,2),\n    FOREIGN KEY (category_id) REFERENCES categories(category_id)\n);\n\nCREATE TABLE order_details (\n    order_id SMALLINT,\n    product_id SMALLINT,\n    unit_price DECIMAL(10,2),\n    quantity SMALLINT,\n    discount DECIMAL(4,2),\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE orders (\n    order_id SMALLINT PRIMARY KEY,\n    order_date DATE,\n    total_value DECIMAL(10,2)\n);", "Query": "SELECT c.category_name, AVG(od.unit_price * od.quantity * (1 - od.discount)) AS avg_order_value\nFROM order_details od\nJOIN products p ON od.product_id = p.product_id\nJOIN categories c ON p.category_id = c.category_id\nJOIN orders o ON od.order_id = o.order_id\nGROUP BY c.category_name\nORDER BY avg_order_value DESC;"}
{"Question": "What is the total revenue generated from orders placed on weekends?", "Context": "CREATE TABLE orders (\n    order_id SMALLINT PRIMARY KEY,\n    order_date DATE,\n    total_value DECIMAL(10,2)\n);\n\nCREATE TABLE order_details (\n    order_id SMALLINT,\n    product_id SMALLINT,\n    unit_price DECIMAL(10,2),\n    quantity SMALLINT,\n    discount DECIMAL(4,2),\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);", "Query": "SELECT SUM(od.unit_price * od.quantity * (1 - od.discount)) AS total_weekend_revenue\nFROM order_details od\nJOIN orders o ON od.order_id = o.order_id\nWHERE EXTRACT(DOW FROM o.order_date) IN (0, 6);"}
{"Question": "Which customer segments have the highest total order value?", "Context": "CREATE TABLE customer_segments (\n    segment_id SMALLINT PRIMARY KEY,\n    segment_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    customer_id CHAR(5) PRIMARY KEY,\n    segment_id SMALLINT,\n    company_name VARCHAR(40) NOT NULL,\n    FOREIGN KEY (segment_id) REFERENCES customer_segments(segment_id)\n);\n\nCREATE TABLE orders (\n    order_id SMALLINT PRIMARY KEY,\n    customer_id CHAR(5),\n    order_date DATE,\n    total_value DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);", "Query": "SELECT cs.segment_name, SUM(o.total_value) AS total_order_value\nFROM orders o\nJOIN customers c ON o.customer_id = c.customer_id\nJOIN customer_segments cs ON c.segment_id = cs.segment_id\nGROUP BY cs.segment_name\nORDER BY total_order_value DESC;"}
{"Question": "What is the total revenue generated from each product category?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT c.category_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) AS total_revenue\nFROM order_details od\nJOIN products p ON od.product_id = p.product_id\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_name;"}
{"Question": "Which customers have the highest total order value?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.customer_id, c.company_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) AS total_order_value\nFROM orders o\nJOIN order_details od ON o.order_id = od.order_id\nJOIN customers c ON o.customer_id = c.customer_id\nGROUP BY c.customer_id, c.company_name\nORDER BY total_order_value DESC\nLIMIT 10;"}
{"Question": "Which employees have the highest total sales value?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT e.employee_id, e.first_name, e.last_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) AS total_sales_value\nFROM orders o\nJOIN order_details od ON o.order_id = od.order_id\nJOIN employees e ON o.employee_id = e.employee_id\nGROUP BY e.employee_id, e.first_name, e.last_name\nORDER BY total_sales_value DESC\nLIMIT 10;"}
{"Question": "What is the average order value for each customer type?", "Context": "CREATE TABLE customer_demographics (\n    customer_type_id bpchar NOT NULL PRIMARY KEY,\n    customer_desc text\n);\n\nCREATE TABLE customer_customer_demo (\n    customer_id bpchar NOT NULL,\n    customer_type_id bpchar NOT NULL,\n    PRIMARY KEY (customer_id, customer_type_id),\n    FOREIGN KEY (customer_type_id) REFERENCES customer_demographics\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT cd.customer_desc, AVG(order_total) AS avg_order_value\nFROM (\n  SELECT o.order_id, SUM(od.unit_price * od.quantity * (1 - od.discount)) AS order_total\n  FROM orders o\n  JOIN order_details od ON o.order_id = od.order_id\n  GROUP BY o.order_id\n) AS subquery\nJOIN customer_customer_demo ccd ON subquery.order_id = ccd.customer_id\nJOIN customer_demographics cd ON ccd.customer_type_id = cd.customer_type_id\nGROUP BY cd.customer_desc;"}
{"Question": "Which product categories have the highest average order quantity?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT c.category_name, AVG(od.quantity) AS avg_order_quantity\nFROM order_details od\nJOIN products p ON od.product_id = p.product_id\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_name\nORDER BY avg_order_quantity DESC;"}
{"Question": "Which suppliers have the highest total order value?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT s.supplier_id, s.company_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) AS total_order_value\nFROM order_details od\nJOIN products p ON od.product_id = p.product_id\nJOIN suppliers s ON p.supplier_id = s.supplier_id\nGROUP BY s.supplier_id, s.company_name\nORDER BY total_order_value DESC\nLIMIT 10;"}
{"Question": "What are the top 5 best-selling products by total ordered quantity?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT p.product_name, COALESCE(SUM(od.quantity), 0) as total_ordered\nFROM products p\nLEFT JOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_id\nORDER BY total_ordered DESC\nLIMIT 5;"}
{"Question": "What are the top 5 best-selling products by total revenue?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT p.product_name, COALESCE(SUM(od.quantity * od.unit_price), 0) as total_revenue\nFROM products p\nLEFT JOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_id\nORDER BY total_revenue DESC\nLIMIT 5;"}
{"Question": "What are the top 5 products with the highest average order quantity?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT p.product_name, AVG(od.quantity) as avg_order_quantity\nFROM products p\nLEFT JOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_id\nORDER BY avg_order_quantity DESC\nLIMIT 5;"}
{"Question": "What are the top 5 products with the highest total revenue by country?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15)\n);", "Query": "SELECT p.product_name, o.ship_country, COALESCE(SUM(od.quantity * od.unit_price), 0) as total_revenue\nFROM products p\nLEFT JOIN order_details od ON p.product_id = od.product_id\nLEFT JOIN orders o ON od.order_id = o.order_id\nGROUP BY p.product_id, o.ship_country\nORDER BY total_revenue DESC\nLIMIT 5;"}
{"Question": "What are the top 5 products with the highest total ordered quantity by customer type?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE customer_customer_demo (\n    customer_id bpchar NOT NULL,\n    customer_type_id bpchar NOT NULL,\n    PRIMARY KEY (customer_id, customer_type_id),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE customer_demographics (\n    customer_type_id bpchar NOT NULL PRIMARY KEY,\n    customer_desc text\n);", "Query": "SELECT p.product_name, cd.customer_desc, COALESCE(SUM(od.quantity), 0) as total_ordered\nFROM products p\nLEFT JOIN order_details od ON p.product_id = od.product_id\nLEFT JOIN customers c ON od.order_id = c.customer_id\nLEFT JOIN customer_customer_demo ccd ON c.customer_id = ccd.customer_id\nLEFT JOIN customer_demographics cd ON ccd.customer_type_id = cd.customer_type_id\nGROUP BY p.product_id, cd.customer_desc\nORDER BY total_ordered DESC\nLIMIT 5;"}
{"Question": "What are the top 5 products with the highest total ordered quantity by employee region?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15)\n);\n\nCREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255)\n);", "Query": "SELECT p.product_name, e.region, COALESCE(SUM(od.quantity), 0) as total_ordered\nFROM products p\nLEFT JOIN order_details od ON p.product_id = od.product_id\nLEFT JOIN orders o ON od.order_id = o.order_id\nLEFT JOIN employees e ON o.employee_id = e.employee_id\nGROUP BY p.product_id, e.region\nORDER BY total_ordered DESC\nLIMIT 5;"}
{"Question": "What are the top 5 best-selling products by total ordered quantity?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT p.product_name, COALESCE(SUM(od.quantity), 0) as total_ordered\nFROM products p\nLEFT JOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_id\nORDER BY total_ordered DESC\nLIMIT 5;"}
{"Question": "Which products have been discontinued and what is their total ordered quantity?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT p.product_name, COALESCE(SUM(od.quantity), 0) as total_ordered\nFROM products p\nLEFT JOIN order_details od ON p.product_id = od.product_id\nWHERE p.discontinued = 1\nGROUP BY p.product_id\nORDER BY total_ordered DESC;"}
{"Question": "What is the average order quantity for each product?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT p.product_name, AVG(od.quantity) as avg_order_quantity\nFROM products p\nLEFT JOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_id;"}
{"Question": "Which products have never been ordered?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT p.product_name\nFROM products p\nLEFT JOIN order_details od ON p.product_id = od.product_id\nWHERE od.product_id IS NULL;"}
{"Question": "What is the total revenue generated by each product?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT p.product_name, SUM(od.quantity * od.unit_price) as total_revenue\nFROM products p\nLEFT JOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_id;"}
{"Question": "Which products have the highest profit margin?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT p.product_name, (p.unit_price - AVG(od.unit_price)) / p.unit_price as profit_margin\nFROM products p\nLEFT JOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_id\nORDER BY profit_margin DESC;"}
{"Question": "Which customers have placed orders on the most consecutive dates?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name, COUNT(DISTINCT o.order_date) AS consecutive_order_dates\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_id\nORDER BY consecutive_order_dates DESC\nLIMIT 1;"}
{"Question": "Which customers have placed orders on the most unique dates across all their orders?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name, COUNT(DISTINCT o.order_date) AS unique_order_dates\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_id\nORDER BY unique_order_dates DESC\nLIMIT 1;"}
{"Question": "Which customers have placed orders on the most unique days of the week?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name, COUNT(DISTINCT EXTRACT(DOW FROM o.order_date)) AS unique_order_days\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_id\nORDER BY unique_order_days DESC\nLIMIT 1;"}
{"Question": "Which customers have placed orders on the most unique months of the year?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name, COUNT(DISTINCT EXTRACT(MONTH FROM o.order_date)) AS unique_order_months\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_id\nORDER BY unique_order_months DESC\nLIMIT 1;"}
{"Question": "Which customers have placed orders on the most unique years?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name, COUNT(DISTINCT EXTRACT(YEAR FROM o.order_date)) AS unique_order_years\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_id\nORDER BY unique_order_years DESC\nLIMIT 1;"}
{"Question": "Which customers have placed orders on the most consecutive dates?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name, COUNT(DISTINCT DATE_PART('day', o.order_date - LAG(o.order_date, 1) OVER (PARTITION BY c.customer_id ORDER BY o.order_date))) AS consecutive_order_dates\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_id\nORDER BY consecutive_order_dates DESC\nLIMIT 1;"}
{"Question": "Which customers have placed orders on the most unique dates across all years?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name, COUNT(DISTINCT DATE(o.order_date)) AS unique_order_dates\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_id\nORDER BY unique_order_dates DESC\nLIMIT 1;"}
{"Question": "Which customers have placed orders on the most unique days of the week?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name, COUNT(DISTINCT EXTRACT(DOW FROM o.order_date)) AS unique_order_days\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_id\nORDER BY unique_order_days DESC\nLIMIT 1;"}
{"Question": "Which customers have placed orders on the most unique months across all years?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name, COUNT(DISTINCT EXTRACT(MONTH FROM o.order_date)) AS unique_order_months\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_id\nORDER BY unique_order_months DESC\nLIMIT 1;"}
{"Question": "Which customers have placed orders on the most unique quarters across all years?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name, COUNT(DISTINCT EXTRACT(QUARTER FROM o.order_date)) AS unique_order_quarters\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_id\nORDER BY unique_order_quarters DESC\nLIMIT 1;"}
{"Question": "Which customers have placed orders on the most unique years?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name, COUNT(DISTINCT EXTRACT(YEAR FROM o.order_date)) AS unique_order_years\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_id\nORDER BY unique_order_years DESC\nLIMIT 1;"}
{"Question": "What is the most common customer country?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);", "Query": "SELECT country, COUNT(*) as customer_count \nFROM customers\nGROUP BY country\nORDER BY customer_count DESC\nLIMIT 1;"}
{"Question": "Which employee has shipped to the most countries?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15)\n);", "Query": "SELECT e.employee_id, e.first_name, e.last_name, COUNT(DISTINCT o.ship_country) as countries_shipped_to\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nGROUP BY e.employee_id, e.first_name, e.last_name\nORDER BY countries_shipped_to DESC\nLIMIT 1;"}
{"Question": "What is the most common product category for orders shipped to a specific country?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15)\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);", "Query": "SELECT c.category_name, COUNT(*) as order_count\nFROM orders o\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nJOIN categories c ON p.category_id = c.category_id\nWHERE o.ship_country = 'Germany'\nGROUP BY c.category_name\nORDER BY order_count DESC\nLIMIT 1;"}
{"Question": "Which customer has placed the most orders?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.customer_id, c.company_name, COUNT(*) as order_count\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_id, c.company_name\nORDER BY order_count DESC\nLIMIT 1;"}
{"Question": "Which employee has the most customers in their territory?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255)\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (territory_id) REFERENCES territories,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);", "Query": "SELECT e.employee_id, e.first_name, e.last_name, COUNT(DISTINCT c.customer_id) as customer_count\nFROM employees e\nJOIN employee_territories et ON e.employee_id = et.employee_id\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN customers c ON o.customer_id = c.customer_id\nGROUP BY e.employee_id, e.first_name, e.last_name\nORDER BY customer_count DESC\nLIMIT 1;"}
{"Question": "What is the most common customer country?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);", "Query": "SELECT country, COUNT(*) as customer_count \nFROM customers\nGROUP BY country\nORDER BY customer_count DESC\nLIMIT 1;"}
{"Question": "Which employee has shipped to the most countries?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15)\n);", "Query": "SELECT e.employee_id, e.first_name, e.last_name, COUNT(DISTINCT o.ship_country) as countries_shipped_to\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nGROUP BY e.employee_id, e.first_name, e.last_name\nORDER BY countries_shipped_to DESC\nLIMIT 1;"}
{"Question": "Which supplier has the most products in the highest category?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);", "Query": "SELECT s.supplier_id, s.company_name, COUNT(*) as product_count\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nWHERE p.category_id = (SELECT category_id FROM categories ORDER BY category_id DESC LIMIT 1)\nGROUP BY s.supplier_id, s.company_name\nORDER BY product_count DESC\nLIMIT 1;"}
{"Question": "Which customer has the most orders shipped to the same country?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15)\n);", "Query": "SELECT c.customer_id, c.company_name, COUNT(*) as orders_to_same_country\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_id, c.company_name\nORDER BY orders_to_same_country DESC\nLIMIT 1;"}
{"Question": "Which region has the highest total freight cost for orders?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15)\n);\n\nCREATE TABLE region (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_description bpchar NOT NULL\n);", "Query": "SELECT r.region_description, SUM(o.freight) as total_freight\nFROM orders o\nJOIN region r ON o.ship_region = r.region_description\nGROUP BY r.region_description\nORDER BY total_freight DESC\nLIMIT 1;"}
{"Question": "Which employee has the most orders shipped to their home country?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15)\n);", "Query": "SELECT e.employee_id, e.first_name, e.last_name, COUNT(*) as orders_to_home_country\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nWHERE e.country = o.ship_country\nGROUP BY e.employee_id, e.first_name, e.last_name\nORDER BY orders_to_home_country DESC\nLIMIT 1;"}
{"Question": "What are the top 5 categories with the highest average product price?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_name, AVG(p.unit_price) as avg_price\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nGROUP BY c.category_id\nORDER BY avg_price DESC\nLIMIT 5;"}
{"Question": "Which categories have an average product price above the overall average?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "WITH overall_avg AS (\n    SELECT AVG(unit_price) AS overall_avg\n    FROM products\n)\nSELECT c.category_name, AVG(p.unit_price) AS avg_price\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nGROUP BY c.category_id\nHAVING AVG(p.unit_price) > (SELECT overall_avg FROM overall_avg);"}
{"Question": "Which categories have the most products with a price above the category average?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "WITH category_avg AS (\n    SELECT category_id, AVG(unit_price) AS avg_price\n    FROM products\n    GROUP BY category_id\n)\nSELECT c.category_name, COUNT(*) AS above_avg_products\nFROM products p\nJOIN category_avg ca ON p.category_id = ca.category_id\nJOIN categories c ON p.category_id = c.category_id\nWHERE p.unit_price > ca.avg_price\nGROUP BY c.category_name\nORDER BY above_avg_products DESC;"}
{"Question": "Which categories have the highest percentage of products with a price above the category average?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "WITH category_avg AS (\n    SELECT category_id, AVG(unit_price) AS avg_price\n    FROM products\n    GROUP BY category_id\n),\ncategory_product_counts AS (\n    SELECT p.category_id, COUNT(*) AS total_products, \n           SUM(CASE WHEN p.unit_price > ca.avg_price THEN 1 ELSE 0 END) AS above_avg_products\n    FROM products p\n    JOIN category_avg ca ON p.category_id = ca.category_id\n    GROUP BY p.category_id\n)\nSELECT c.category_name, \n       ROUND(100.0 * cpc.above_avg_products / cpc.total_products, 2) AS pct_above_avg\nFROM category_product_counts cpc\nJOIN categories c ON cpc.category_id = c.category_id\nORDER BY pct_above_avg DESC;"}
{"Question": "What is the distribution of product prices within each category?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_name,\n       MIN(p.unit_price) AS min_price,\n       MAX(p.unit_price) AS max_price,\n       PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY p.unit_price) AS q1,\n       PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY p.unit_price) AS median,\n       PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY p.unit_price) AS q3\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nGROUP BY c.category_name\nORDER BY c.category_name;"}
{"Question": "Which categories have the most variability in their product prices?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_name,\n       ROUND(STDDEV(p.unit_price), 2) AS price_stddev\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nGROUP BY c.category_name\nORDER BY price_stddev DESC;"}
{"Question": "What are the top 5 categories with the highest average product price?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_name, AVG(p.unit_price) as avg_price\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nGROUP BY c.category_id\nORDER BY avg_price DESC\nLIMIT 5;"}
{"Question": "Which categories have an average product price above the overall average?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "WITH overall_avg AS (\n  SELECT AVG(unit_price) AS overall_avg\n  FROM products\n)\nSELECT c.category_name, AVG(p.unit_price) AS avg_price\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nGROUP BY c.category_id\nHAVING AVG(p.unit_price) > (SELECT overall_avg FROM overall_avg);"}
{"Question": "What are the categories with the most and least number of products?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "WITH category_product_counts AS (\n  SELECT c.category_id, c.category_name, COUNT(p.product_id) AS product_count\n  FROM categories c\n  LEFT JOIN products p ON c.category_id = p.category_id\n  GROUP BY c.category_id\n)\nSELECT \n  (SELECT category_name FROM category_product_counts ORDER BY product_count DESC LIMIT 1) AS max_products_category,\n  (SELECT category_name FROM category_product_counts ORDER BY product_count ASC LIMIT 1) AS min_products_category\nFROM category_product_counts\nLIMIT 1;"}
{"Question": "Which categories have the highest and lowest total product inventory?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "WITH category_inventory AS (\n  SELECT c.category_name, SUM(p.units_in_stock + p.units_on_order) AS total_inventory\n  FROM categories c\n  JOIN products p ON c.category_id = p.category_id\n  GROUP BY c.category_name\n)\nSELECT \n  (SELECT category_name FROM category_inventory ORDER BY total_inventory DESC LIMIT 1) AS max_inventory_category,\n  (SELECT category_name FROM category_inventory ORDER BY total_inventory ASC LIMIT 1) AS min_inventory_category\nFROM category_inventory\nLIMIT 1;"}
{"Question": "What is the average product price for each category, and how many categories have an average price above the overall average?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "WITH category_avg_price AS (\n  SELECT c.category_name, AVG(p.unit_price) AS avg_price\n  FROM categories c\n  JOIN products p ON c.category_id = p.category_id\n  GROUP BY c.category_name\n),\noverall_avg AS (\n  SELECT AVG(unit_price) AS overall_avg\n  FROM products\n)\nSELECT \n  (SELECT COUNT(*) FROM category_avg_price WHERE avg_price > (SELECT overall_avg FROM overall_avg)) AS num_above_avg,\n  category_avg_price.*\nFROM category_avg_price;"}
{"Question": "Which categories have the highest and lowest percentage of discontinued products?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "WITH category_discontinued_pct AS (\n  SELECT c.category_name, \n         ROUND(SUM(CASE WHEN p.discontinued = 1 THEN 1 ELSE 0 END) * 1.0 / COUNT(p.product_id), 2) AS discontinued_pct\n  FROM categories c\n  JOIN products p ON c.category_id = p.category_id\n  GROUP BY c.category_name\n)\nSELECT\n  (SELECT category_name FROM category_discontinued_pct ORDER BY discontinued_pct DESC LIMIT 1) AS max_discontinued_category,\n  (SELECT category_name FROM category_discontinued_pct ORDER BY discontinued_pct ASC LIMIT 1) AS min_discontinued_category\nFROM category_discontinued_pct\nLIMIT 1;"}
{"Question": "Which customer has placed the most orders?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name, COUNT(o.order_id) as total_orders\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_id\nORDER BY total_orders DESC\nLIMIT 1;"}
{"Question": "Which product category has the highest average unit price?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_name, AVG(p.unit_price) as avg_unit_price\nFROM products p\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_name\nORDER BY avg_unit_price DESC\nLIMIT 1;"}
{"Question": "Which employee has the most territories assigned?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255)\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (territory_id) REFERENCES territories,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(et.territory_id) as num_territories\nFROM employees e\nJOIN employee_territories et ON e.employee_id = et.employee_id\nGROUP BY e.employee_id\nORDER BY num_territories DESC\nLIMIT 1;"}
{"Question": "Which supplier has the most products in the \"Beverages\" category?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT s.company_name, COUNT(p.product_id) as num_products\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nWHERE p.category_id = (SELECT category_id FROM categories WHERE category_name = 'Beverages')\nGROUP BY s.supplier_id\nORDER BY num_products DESC\nLIMIT 1;"}
{"Question": "Which customer has the most orders that were shipped late (shipped_date > required_date)?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name, COUNT(o.order_id) as late_orders\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nWHERE o.shipped_date > o.required_date\nGROUP BY c.customer_id\nORDER BY late_orders DESC\nLIMIT 1;"}
{"Question": "Which employee has the highest total sales amount?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT e.first_name, e.last_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_sales\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY e.employee_id\nORDER BY total_sales DESC\nLIMIT 1;"}
{"Question": "Which customer has the most orders?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name, COUNT(o.order_id) as total_orders\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_id\nORDER BY total_orders DESC\nLIMIT 1;"}
{"Question": "Which product category has the highest average unit price?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_name, AVG(p.unit_price) as avg_unit_price\nFROM products p\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_id\nORDER BY avg_unit_price DESC\nLIMIT 1;"}
{"Question": "Which employee has the most territories assigned?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255)\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (territory_id) REFERENCES territories,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(et.territory_id) as total_territories\nFROM employees e\nJOIN employee_territories et ON e.employee_id = et.employee_id\nGROUP BY e.employee_id\nORDER BY total_territories DESC\nLIMIT 1;"}
{"Question": "Which supplier has the most products in the \"Beverages\" category?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT s.company_name, COUNT(p.product_id) as total_products\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nWHERE p.category_id = (SELECT category_id FROM categories WHERE category_name = 'Beverages')\nGROUP BY s.supplier_id\nORDER BY total_products DESC\nLIMIT 1;"}
{"Question": "Which customer has the most unique products ordered?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.company_name, COUNT(DISTINCT od.product_id) as unique_products\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY c.customer_id\nORDER BY unique_products DESC\nLIMIT 1;"}
{"Question": "Which employee has the highest total sales value?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT e.first_name, e.last_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_sales\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY e.employee_id\nORDER BY total_sales DESC\nLIMIT 1;"}
{"Question": "List all employees and the number of orders they have processed.", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT e.first_name || ' ' || e.last_name as employee, COUNT(o.order_id) as orders_processed\nFROM employees e\nLEFT JOIN orders o ON e.employee_id = o.employee_id\nGROUP BY e.employee_id, e.first_name, e.last_name\nORDER BY orders_processed DESC;"}
{"Question": "Find the top 5 customers by total order value.", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.company_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_order_value\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY c.company_name\nORDER BY total_order_value DESC\nLIMIT 5;"}
{"Question": "Find the top 3 products by total units sold.", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT p.product_name, SUM(od.quantity) as total_units_sold\nFROM products p\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_name\nORDER BY total_units_sold DESC\nLIMIT 3;"}
{"Question": "Find the top 3 countries by total order value.", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT o.ship_country, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_order_value\nFROM orders o\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY o.ship_country\nORDER BY total_order_value DESC\nLIMIT 3;"}
{"Question": "Find the top 3 employees by total sales value.", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT e.first_name || ' ' || e.last_name as employee, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_sales_value\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY e.employee_id, e.first_name, e.last_name\nORDER BY total_sales_value DESC\nLIMIT 3;"}
{"Question": "Find the top 3 suppliers by total order value.", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT s.company_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_order_value\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY s.company_name\nORDER BY total_order_value DESC\nLIMIT 3;"}
{"Question": "List all employees and the territories they are responsible for.", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (territory_id) REFERENCES territories,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);", "Query": "SELECT e.first_name || ' ' || e.last_name AS employee, STRING_AGG(t.territory_description, ', ') AS territories\nFROM employees e\nJOIN employee_territories et ON e.employee_id = et.employee_id\nJOIN territories t ON et.territory_id = t.territory_id\nGROUP BY e.first_name, e.last_name;"}
{"Question": "Find the top 5 customers by total order value.", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.company_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) AS total_order_value\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY c.company_name\nORDER BY total_order_value DESC\nLIMIT 5;"}
{"Question": "Find the top 3 best-selling products by total revenue.", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT p.product_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) AS total_revenue\nFROM products p\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_name\nORDER BY total_revenue DESC\nLIMIT 3;"}
{"Question": "Find the top 3 customers by number of orders.", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT c.company_name, COUNT(o.order_id) AS num_orders\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.company_name\nORDER BY num_orders DESC\nLIMIT 3;"}
{"Question": "Find the top 3 employees by total order value.", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT e.first_name || ' ' || e.last_name AS employee, SUM(od.unit_price * od.quantity * (1 - od.discount)) AS total_order_value\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY e.first_name, e.last_name\nORDER BY total_order_value DESC\nLIMIT 3;"}
{"Question": "Find the top 3 products by total units sold.", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT p.product_name, SUM(od.quantity) AS total_units_sold\nFROM products p\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_name\nORDER BY total_units_sold DESC\nLIMIT 3;"}
{"Question": "What is the total value of all orders with a discount applied?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15)\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT SUM(od.unit_price * od.quantity * (1 - od.discount)) AS total_order_value\nFROM order_details od\nJOIN orders o ON od.order_id = o.order_id;"}
{"Question": "What is the average discount applied to orders placed by customers in a specific country?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    country character varying(15)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT AVG(od.discount) * 100 AS avg_discount_percentage\nFROM order_details od\nJOIN orders o ON od.order_id = o.order_id\nJOIN customers c ON o.customer_id = c.customer_id\nWHERE c.country = 'Germany';"}
{"Question": "Which products have the highest average discount applied to their order details?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT p.product_name, AVG(od.discount) * 100 AS avg_discount_percentage\nFROM order_details od\nJOIN products p ON od.product_id = p.product_id\nGROUP BY p.product_name\nORDER BY avg_discount_percentage DESC\nLIMIT 5;"}
{"Question": "How does the average discount vary across different order dates?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    order_date date\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT DATE_TRUNC('month', o.order_date) AS order_month, AVG(od.discount) * 100 AS avg_discount_percentage\nFROM order_details od\nJOIN orders o ON od.order_id = o.order_id\nGROUP BY order_month\nORDER BY order_month;"}
{"Question": "What is the distribution of discount percentages across all order details?", "Context": "CREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id)\n);", "Query": "SELECT \n    ROUND(discount * 100, 2) AS discount_percentage,\n    COUNT(*) AS count\nFROM order_details\nGROUP BY discount_percentage\nORDER BY discount_percentage;"}
{"Question": "What is the total discount amount applied across all order details?", "Context": "CREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT SUM(discount * quantity * unit_price) AS total_discount_amount\nFROM order_details;"}
{"Question": "Which products have the highest average discount applied to their order details?", "Context": "CREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT p.product_name, AVG(od.discount) AS avg_discount\nFROM order_details od\nJOIN products p ON od.product_id = p.product_id\nGROUP BY p.product_name\nORDER BY avg_discount DESC\nLIMIT 5;"}
{"Question": "How does the average discount vary across different customer types?", "Context": "CREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE customer_customer_demo (\n    customer_id bpchar NOT NULL,\n    customer_type_id bpchar NOT NULL,\n    PRIMARY KEY (customer_id, customer_type_id),\n    FOREIGN KEY (customer_type_id) REFERENCES customer_demographics,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE customer_demographics (\n    customer_type_id bpchar NOT NULL PRIMARY KEY,\n    customer_desc text\n);", "Query": "SELECT cd.customer_desc, AVG(od.discount) AS avg_discount\nFROM order_details od\nJOIN orders o ON od.order_id = o.order_id\nJOIN customer_customer_demo ccd ON o.customer_id = ccd.customer_id\nJOIN customer_demographics cd ON ccd.customer_type_id = cd.customer_type_id\nGROUP BY cd.customer_desc\nORDER BY avg_discount DESC;"}
{"Question": "Which employees have the highest average discount applied to the order details they are responsible for?", "Context": "CREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT e.first_name, e.last_name, AVG(od.discount) AS avg_discount\nFROM order_details od\nJOIN orders o ON od.order_id = o.order_id\nJOIN employees e ON o.employee_id = e.employee_id\nGROUP BY e.first_name, e.last_name\nORDER BY avg_discount DESC\nLIMIT 5;"}
{"Question": "How does the average discount vary across different regions and territories?", "Context": "CREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region\n);\n\nCREATE TABLE region (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_description bpchar NOT NULL\n);", "Query": "SELECT r.region_description, t.territory_description, AVG(od.discount) AS avg_discount\nFROM order_details od\nJOIN orders o ON od.order_id = o.order_id\nJOIN territories t ON o.ship_region = t.territory_id\nJOIN region r ON t.region_id = r.region_id\nGROUP BY r.region_description, t.territory_description\nORDER BY avg_discount DESC;"}
{"Question": "How does the average discount vary across different product categories?", "Context": "CREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);", "Query": "SELECT c.category_name, AVG(od.discount) AS avg_discount\nFROM order_details od\nJOIN products p ON od.product_id = p.product_id\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_name\nORDER BY avg_discount DESC;"}
{"Question": "What are the top 5 best-selling products by total quantity ordered?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT p.product_name, SUM(od.quantity) AS total_quantity\nFROM products p\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_name\nORDER BY total_quantity DESC\nLIMIT 5;"}
{"Question": "Which suppliers have not had any of their products ordered?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT s.company_name\nFROM suppliers s\nWHERE s.supplier_id NOT IN (\n    SELECT DISTINCT p.supplier_id\n    FROM products p\n    JOIN order_details od ON p.product_id = od.product_id\n);"}
{"Question": "Which customers have placed orders for products from all categories?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);", "Query": "SELECT c.customer_id, c.company_name\nFROM customers c\nWHERE EXISTS (\n    SELECT 1\n    FROM orders o\n    JOIN order_details od ON o.order_id = od.order_id\n    JOIN products p ON od.product_id = p.product_id\n    GROUP BY o.customer_id\n    HAVING COUNT(DISTINCT p.category_id) = (SELECT COUNT(*) FROM categories)\n    AND o.customer_id = c.customer_id\n);"}
{"Question": "Which employees have the highest total order value for their orders?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT e.employee_id, e.first_name, e.last_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) AS total_order_value\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY e.employee_id, e.first_name, e.last_name\nORDER BY total_order_value DESC\nLIMIT 5;"}
{"Question": "Which product categories have the highest average unit price?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_name, AVG(p.unit_price) AS avg_unit_price\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nGROUP BY c.category_name\nORDER BY avg_unit_price DESC\nLIMIT 5;"}
{"Question": "Which customers have placed the most orders in the last 6 months?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.customer_id, c.company_name, COUNT(*) AS order_count\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nWHERE o.order_date >= DATE_TRUNC('month', CURRENT_DATE - INTERVAL 6 MONTH)\nGROUP BY c.customer_id, c.company_name\nORDER BY order_count DESC\nLIMIT 5;"}
{"Question": "Which products have the highest total order quantity across all orders?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT p.product_name, SUM(od.quantity) AS total_quantity\nFROM products p\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_name\nORDER BY total_quantity DESC\nLIMIT 5;"}
{"Question": "Which products have been ordered the most number of times?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT p.product_name, COUNT(*) AS order_count\nFROM products p\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_name\nORDER BY order_count DESC\nLIMIT 5;"}
{"Question": "What are the top 5 most expensive products?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);", "Query": "SELECT product_name, unit_price\nFROM products\nORDER BY unit_price DESC\nLIMIT 5;"}
{"Question": "Which products have the highest profit margin?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    unit_cost real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT p.product_name, (p.unit_price - p.unit_cost) AS profit_margin\nFROM products p\nORDER BY profit_margin DESC\nLIMIT 5;"}
{"Question": "Which products have the highest inventory turnover ratio?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "WITH product_sales AS (\n    SELECT p.product_id, SUM(od.quantity) AS total_sold\n    FROM products p\n    JOIN order_details od ON p.product_id = od.product_id\n    GROUP BY p.product_id\n)\nSELECT p.product_name, CAST(ps.total_sold AS FLOAT) / p.units_in_stock AS inventory_turnover\nFROM products p\nJOIN product_sales ps ON p.product_id = ps.product_id\nORDER BY inventory_turnover DESC\nLIMIT 5;"}
{"Question": "Which products have the highest total revenue generated?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT p.product_name, SUM(od.quantity * od.unit_price) AS total_revenue\nFROM products p\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_name\nORDER BY total_revenue DESC\nLIMIT 5;"}
{"Question": "Which region has the most customers?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE region (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_description bpchar NOT NULL\n);", "Query": "SELECT r.region_description, COUNT(c.customer_id) AS customer_count\nFROM customers c\nJOIN region r ON c.region = r.region_description\nGROUP BY r.region_id\nORDER BY customer_count DESC\nLIMIT 1;"}
{"Question": "Which region has the highest average employee salary?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE region (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_description bpchar NOT NULL\n);", "Query": "SELECT r.region_description, AVG(e.salary) AS avg_salary\nFROM employees e\nJOIN region r ON e.region = r.region_description\nGROUP BY r.region_id\nORDER BY avg_salary DESC\nLIMIT 1;"}
{"Question": "Which region has the highest total order value?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE region (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_description bpchar NOT NULL\n);", "Query": "SELECT r.region_description, SUM(o.freight) AS total_order_value\nFROM orders o\nJOIN customers c ON o.customer_id = c.customer_id\nJOIN region r ON c.region = r.region_description\nGROUP BY r.region_id\nORDER BY total_order_value DESC\nLIMIT 1;"}
{"Question": "Which region has the highest percentage of discontinued products?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE region (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_description bpchar NOT NULL\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);", "Query": "SELECT r.region_description, \n       ROUND(100.0 * SUM(CASE WHEN p.discontinued = 1 THEN 1 ELSE 0 END) / COUNT(p.product_id), 2) AS discontinued_percentage\nFROM products p\nJOIN suppliers s ON p.supplier_id = s.supplier_id\nJOIN region r ON s.region = r.region_description\nGROUP BY r.region_id\nORDER BY discontinued_percentage DESC\nLIMIT 1;"}
{"Question": "Which region has the highest percentage of customers with a specific customer type?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE customer_demographics (\n    customer_type_id bpchar NOT NULL PRIMARY KEY,\n    customer_desc text\n);\n\nCREATE TABLE customer_customer_demo (\n    customer_id bpchar NOT NULL,\n    customer_type_id bpchar NOT NULL,\n    PRIMARY KEY (customer_id, customer_type_id),\n    FOREIGN KEY (customer_type_id) REFERENCES customer_demographics,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE region (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_description bpchar NOT NULL\n);", "Query": "WITH customer_region_counts AS (\n  SELECT c.region, cd.customer_type_id, COUNT(*) AS customer_count\n  FROM customers c\n  JOIN customer_customer_demo ccd ON c.customer_id = ccd.customer_id\n  JOIN customer_demographics cd ON ccd.customer_type_id = cd.customer_type_id\n  GROUP BY c.region, cd.customer_type_id\n)\nSELECT r.region_description, cd.customer_type_id, \n       ROUND(100.0 * MAX(customer_count) / SUM(customer_count), 2) AS percentage\nFROM customer_region_counts crc\nJOIN region r ON crc.region = r.region_description\nJOIN customer_demographics cd ON crc.customer_type_id = cd.customer_type_id\nGROUP BY r.region_id, cd.customer_type_id\nORDER BY percentage DESC\nLIMIT 1;"}
{"Question": "Which region has the highest percentage of employees that are also territory managers?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (territory_id) REFERENCES territories,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE region (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_description bpchar NOT NULL\n);", "Query": "WITH region_employee_counts AS (\n  SELECT r.region_description, COUNT(e.employee_id) AS total_employees\n)\nSELECT r.region_description, \n       ROUND(100.0 * COUNT(et.employee_id) / rec.total_employees, 2) AS territory_manager_percentage\nFROM employees e\nJOIN employee_territories et ON e.employee_id = et.employee_id\nJOIN region r ON e.region = r.region_description\nJOIN region_employee_counts rec ON r.region_description = rec.region_description\nGROUP BY r.region_id, rec.total_employees\nORDER BY territory_manager_percentage DESC\nLIMIT 1;"}
{"Question": "Which region has the most customers?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);", "Query": "SELECT c.region, COUNT(c.customer_id) AS customer_count\nFROM customers c\nGROUP BY c.region\nORDER BY customer_count DESC\nLIMIT 1;"}
{"Question": "Which region has the highest average employee salary?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT e.region, AVG(e.salary) AS avg_salary\nFROM employees e\nGROUP BY e.region\nORDER BY avg_salary DESC\nLIMIT 1;"}
{"Question": "Which region has the highest percentage of customers with a specific customer type?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE customer_demographics (\n    customer_type_id bpchar NOT NULL PRIMARY KEY,\n    customer_desc text\n);\n\nCREATE TABLE customer_customer_demo (\n    customer_id bpchar NOT NULL,\n    customer_type_id bpchar NOT NULL,\n    PRIMARY KEY (customer_id, customer_type_id),\n    FOREIGN KEY (customer_type_id) REFERENCES customer_demographics,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "WITH region_customer_types AS (\n  SELECT c.region, cd.customer_type_id, COUNT(*) AS customer_count\n  FROM customers c\n  JOIN customer_customer_demo ccd ON c.customer_id = ccd.customer_id\n  JOIN customer_demographics cd ON ccd.customer_type_id = cd.customer_type_id\n  GROUP BY c.region, cd.customer_type_id\n)\nSELECT region, customer_type_id, ROUND(customer_count * 1.0 / (\n  SELECT SUM(customer_count) FROM region_customer_types WHERE region = rct.region\n), 2) AS percentage\nFROM region_customer_types rct\nORDER BY percentage DESC\nLIMIT 1;"}
{"Question": "Which region has the highest percentage of customers that are also suppliers?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);", "Query": "WITH region_customer_supplier_counts AS (\n  SELECT c.region, COUNT(*) AS customer_count, \n         (SELECT COUNT(*) FROM suppliers s WHERE s.country = c.country AND s.region = c.region) AS supplier_count\n  FROM customers c\n  GROUP BY c.region\n)\nSELECT region, ROUND(supplier_count * 1.0 / customer_count, 2) AS percentage\nFROM region_customer_supplier_counts\nORDER BY percentage DESC\nLIMIT 1;"}
{"Question": "Which region has the highest percentage of customers that have placed the most orders?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "WITH region_order_counts AS (\n  SELECT c.region, c.customer_id, COUNT(o.order_id) AS order_count\n  FROM customers c\n  LEFT JOIN orders o ON c.customer_id = o.customer_id\n  GROUP BY c.region, c.customer_id\n),\nregion_max_orders AS (\n  SELECT region, MAX(order_count) AS max_orders\n  FROM region_order_counts\n  GROUP BY region\n)\nSELECT roc.region, ROUND(COUNT(*) * 1.0 / (SELECT COUNT(*) FROM customers WHERE region = roc.region), 2) AS percentage\nFROM region_order_counts roc\nJOIN region_max_orders rmo ON roc.region = rmo.region AND roc.order_count = rmo.max_orders\nGROUP BY roc.region\nORDER BY percentage DESC\nLIMIT 1;"}
{"Question": "Which region has the highest percentage of customers that have placed orders with the highest freight cost?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "WITH region_max_freight AS (\n  SELECT region, MAX(freight) AS max_freight\n  FROM customers c\n  JOIN orders o ON c.customer_id = o.customer_id\n  GROUP BY region\n),\nregion_high_freight_customers AS (\n  SELECT c.region, c.customer_id\n  FROM customers c\n  JOIN orders o ON c.customer_id = o.customer_id\n  JOIN region_max_freight rmf ON c.region = rmf.region AND o.freight = rmf.max_freight\n  GROUP BY c.region, c.customer_id\n)\nSELECT region, ROUND(COUNT(*) * 1.0 / (SELECT COUNT(*) FROM customers WHERE region = rhfc.region), 2) AS percentage\nFROM region_high_freight_customers rhfc\nGROUP BY region\nORDER BY percentage DESC\nLIMIT 1;"}
{"Question": "What is the total freight cost for each customer's orders?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name, SUM(o.freight) as total_freight\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.company_name;"}
{"Question": "What is the average freight cost per order for each employee?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (employee_id) REFERENCES employees\n);", "Query": "SELECT e.first_name, e.last_name, AVG(o.freight) as avg_freight\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nGROUP BY e.employee_id;"}
{"Question": "Which products have the highest total freight cost associated with their orders?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15)\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT p.product_name, SUM(od.quantity * od.unit_price * (1 - od.discount)) as total_sales, SUM(o.freight) as total_freight\nFROM products p\nJOIN order_details od ON p.product_id = od.product_id\nJOIN orders o ON od.order_id = o.order_id\nGROUP BY p.product_id\nORDER BY total_freight DESC\nLIMIT 5;"}
{"Question": "What is the total freight cost for each customer's orders by country?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.country, SUM(o.freight) as total_freight\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.country\nORDER BY total_freight DESC;"}
{"Question": "What is the total freight cost for each product category?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15)\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.category_name, SUM(o.freight) as total_freight\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nJOIN order_details od ON p.product_id = od.product_id\nJOIN orders o ON od.order_id = o.order_id\nGROUP BY c.category_name\nORDER BY total_freight DESC;"}
{"Question": "What is the total freight cost for each employee's orders?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (employee_id) REFERENCES employees\n);", "Query": "SELECT e.first_name, e.last_name, SUM(o.freight) as total_freight\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nGROUP BY e.employee_id\nORDER BY total_freight DESC;"}
{"Question": "What is the total freight cost for each customer's orders?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name, SUM(o.freight) as total_freight\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.company_name;"}
{"Question": "What is the total freight cost for each product category?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15)\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.category_name, SUM(o.freight) as total_freight\nFROM orders o\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_name;"}
{"Question": "What is the total freight cost for each employee's orders?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (employee_id) REFERENCES employees\n);", "Query": "SELECT e.first_name, e.last_name, SUM(o.freight) as total_freight\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nGROUP BY e.first_name, e.last_name;"}
{"Question": "What is the total freight cost for each customer's orders by ship country?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name, o.ship_country, SUM(o.freight) as total_freight\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.company_name, o.ship_country;"}
{"Question": "What is the total freight cost for each shipper's orders by ship region?", "Context": "CREATE TABLE shippers (\n    shipper_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    phone character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT s.company_name, o.ship_region, SUM(o.freight) as total_freight\nFROM shippers s\nJOIN orders o ON s.shipper_id = o.ship_via\nGROUP BY s.company_name, o.ship_region;"}
{"Question": "Which customers have ordered products from the most number of unique categories?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders,\n    FOREIGN KEY (product_id) REFERENCES products\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    category_id smallint,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.company_name, COUNT(DISTINCT p.category_id) AS num_categories\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nGROUP BY c.company_name\nORDER BY num_categories DESC\nLIMIT 10;"}
{"Question": "Which categories have the highest average order value?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    order_date date,\n    freight real\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders,\n    FOREIGN KEY (product_id) REFERENCES products\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    category_id smallint,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_name, AVG(od.unit_price * od.quantity) AS avg_order_value\nFROM order_details od\nJOIN products p ON od.product_id = p.product_id\nJOIN categories c ON p.category_id = c.category_id\nJOIN orders o ON od.order_id = o.order_id\nGROUP BY c.category_name\nORDER BY avg_order_value DESC\nLIMIT 5;"}
{"Question": "Which customers have the highest total order value across all their orders?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    freight real,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.company_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) AS total_order_value\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY c.company_name\nORDER BY total_order_value DESC\nLIMIT 10;"}
{"Question": "Which product categories have the highest percentage of discontinued products?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    category_id smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_name, \n       ROUND(SUM(CASE WHEN p.discontinued = 1 THEN 1 ELSE 0 END) * 1.0 / COUNT(*), 2) AS pct_discontinued\nFROM products p\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_name\nORDER BY pct_discontinued DESC\nLIMIT 5;"}
{"Question": "Which customers have the highest number of unique products they have ordered?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders,\n    FOREIGN KEY (product_id) REFERENCES products\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL\n);", "Query": "SELECT c.company_name, COUNT(DISTINCT od.product_id) AS num_unique_products\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY c.company_name\nORDER BY num_unique_products DESC\nLIMIT 10;"}
{"Question": "Which employees have the highest total order value for the orders they have handled?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    employee_id smallint,\n    order_date date,\n    freight real,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT e.first_name, e.last_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) AS total_order_value\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY e.employee_id, e.first_name, e.last_name\nORDER BY total_order_value DESC\nLIMIT 10;"}
{"Question": "Which customers have ordered products from the most number of unique categories?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders,\n    FOREIGN KEY (product_id) REFERENCES products\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    category_id smallint,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.company_name, COUNT(DISTINCT p.category_id) AS num_unique_categories\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nGROUP BY c.company_name\nORDER BY num_unique_categories DESC\nLIMIT 10;"}
{"Question": "Which customers have placed the most orders that include products from the \"Beverages\" category?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    category_id smallint,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.company_name, COUNT(*) AS num_orders\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nWHERE p.category_id = (SELECT category_id FROM categories WHERE category_name = 'Beverages')\nGROUP BY c.company_name\nORDER BY num_orders DESC\nLIMIT 10;"}
{"Question": "Which customers have placed the most orders that include products from the top 3 most popular categories?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    category_id smallint,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "WITH top_categories AS (\n  SELECT category_id, category_name, COUNT(*) AS product_count\n  FROM products\n  GROUP BY category_id, category_name\n  ORDER BY product_count DESC\n  LIMIT 3\n)\nSELECT c.company_name, COUNT(*) AS num_orders\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nJOIN top_categories tc ON p.category_id = tc.category_id\nGROUP BY c.company_name\nORDER BY num_orders DESC\nLIMIT 10;"}
{"Question": "Which customers have the highest average order value for orders that include products from the \"Dairy Products\" category?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    category_id smallint,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.company_name, AVG(od.unit_price * od.quantity) AS avg_order_value\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nWHERE p.category_id = (SELECT category_id FROM categories WHERE category_name = 'Dairy Products')\nGROUP BY c.company_name\nORDER BY avg_order_value DESC\nLIMIT 10;"}
{"Question": "Which customers have placed the most orders that include products from the \"Confections\" category, and what is the total value of those orders?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    category_id smallint,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.company_name, COUNT(*) AS num_orders, SUM(od.unit_price * od.quantity) AS total_order_value\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nWHERE p.category_id = (SELECT category_id FROM categories WHERE category_name = 'Confections')\nGROUP BY c.company_name\nORDER BY num_orders DESC, total_order_value DESC\nLIMIT 10;"}
{"Question": "What is the average number of orders per product?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT AVG(order_count) AS avg_orders_per_product\nFROM (\n  SELECT p.product_id, COUNT(od.order_id) AS order_count\n  FROM products p\n  LEFT JOIN order_details od ON p.product_id = od.product_id\n  GROUP BY p.product_id\n) AS product_orders;"}
{"Question": "What are the top 3 categories by total order quantity?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT c.category_name, SUM(od.quantity) AS total_order_quantity\nFROM order_details od\nJOIN products p ON od.product_id = p.product_id\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_name\nORDER BY total_order_quantity DESC\nLIMIT 3;"}
{"Question": "Which customers have placed the most orders?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.customer_id, c.company_name, COUNT(o.order_id) AS order_count\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_id, c.company_name\nORDER BY order_count DESC\nLIMIT 3;"}
{"Question": "What is the average order value for each customer?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.customer_id, c.company_name, AVG(od.unit_price * od.quantity) AS avg_order_value\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY c.customer_id, c.company_name\nORDER BY avg_order_value DESC;"}
{"Question": "Which products have the highest total revenue?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT p.product_id, p.product_name, SUM(od.unit_price * od.quantity) AS total_revenue\nFROM products p\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_id, p.product_name\nORDER BY total_revenue DESC\nLIMIT 3;"}
{"Question": "Which employees have the highest total order value?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT e.employee_id, e.first_name, e.last_name, SUM(od.unit_price * od.quantity) AS total_order_value\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY e.employee_id, e.first_name, e.last_name\nORDER BY total_order_value DESC\nLIMIT 3;"}
{"Question": "What are the top 5 most expensive products?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT product_name, unit_price \nFROM products\nORDER BY unit_price DESC\nLIMIT 5;"}
{"Question": "Which customers have placed the most orders?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.customer_id, c.company_name, COUNT(o.order_id) AS order_count\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_id\nORDER BY order_count DESC\nLIMIT 5;"}
{"Question": "Which employees have the most territories assigned to them?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (territory_id) REFERENCES territories,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);", "Query": "SELECT e.employee_id, e.first_name, e.last_name, COUNT(et.territory_id) AS territory_count\nFROM employees e\nJOIN employee_territories et ON e.employee_id = et.employee_id\nGROUP BY e.employee_id\nORDER BY territory_count DESC\nLIMIT 5;"}
{"Question": "Which categories have the highest average product price?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT c.category_name, AVG(p.unit_price) AS avg_price\nFROM products p\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_name\nORDER BY avg_price DESC\nLIMIT 5;"}
{"Question": "Which suppliers have the most products in the database?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT s.supplier_id, s.company_name, COUNT(p.product_id) AS product_count\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nGROUP BY s.supplier_id\nORDER BY product_count DESC\nLIMIT 5;"}
{"Question": "Which products have the highest total sales value?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT p.product_name, SUM(od.quantity * od.unit_price) AS total_sales\nFROM products p\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_id\nORDER BY total_sales DESC\nLIMIT 5;"}
{"Question": "Which employees have not made any sales in a specific region?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (territory_id) REFERENCES territories,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);", "Query": "SELECT e.first_name, e.last_name\nFROM employees e\nWHERE e.employee_id NOT IN (\n    SELECT DISTINCT o.employee_id\n    FROM orders o\n    JOIN territories t ON o.ship_region = t.territory_description\n    WHERE t.region_id = 1 -- Replace with the desired region ID\n);"}
{"Question": "What are the top products that have not been ordered by any employees?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT p.product_name, p.product_id\nFROM products p\nWHERE p.product_id NOT IN (\n    SELECT DISTINCT od.product_id\n    FROM order_details od\n)\nORDER BY p.units_in_stock DESC\nLIMIT 5;"}
{"Question": "Which employees have not made any sales to customers in a specific country?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT e.first_name, e.last_name\nFROM employees e\nWHERE e.employee_id NOT IN (\n    SELECT DISTINCT o.employee_id\n    FROM orders o\n    JOIN customers c ON o.customer_id = c.customer_id\n    WHERE c.country = 'Germany' -- Replace with the desired country\n);"}
{"Question": "Which employees have not made any sales to customers in a specific city?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT e.first_name, e.last_name\nFROM employees e\nWHERE e.employee_id NOT IN (\n    SELECT DISTINCT o.employee_id\n    FROM orders o\n    JOIN customers c ON o.customer_id = c.customer_id\n    WHERE c.city = 'London' -- Replace with the desired city\n);"}
{"Question": "Which employees have not made any sales to customers with a specific contact title?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT e.first_name, e.last_name\nFROM employees e\nWHERE e.employee_id NOT IN (\n    SELECT DISTINCT o.employee_id\n    FROM orders o\n    JOIN customers c ON o.customer_id = c.customer_id\n    WHERE c.contact_title = 'Owner' -- Replace with the desired contact title\n);"}
{"Question": "Which employees have the highest number of orders they have processed?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(o.order_id) AS total_orders\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nGROUP BY e.first_name, e.last_name\nORDER BY total_orders DESC\nLIMIT 5;"}
{"Question": "Which employees have the highest total sales value for the orders they have processed?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT e.first_name, e.last_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) AS total_sales\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY e.first_name, e.last_name\nORDER BY total_sales DESC\nLIMIT 5;"}
{"Question": "Which employees have the highest number of orders that were shipped late (shipped_date > required_date)?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(*) AS late_orders\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nWHERE o.shipped_date > o.required_date\nGROUP BY e.first_name, e.last_name\nORDER BY late_orders DESC\nLIMIT 5;"}
{"Question": "Which employees have the highest number of orders that were shipped to a different country than the customer's country?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(*) AS cross_country_orders\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN customers c ON o.customer_id = c.customer_id\nWHERE o.ship_country <> c.country\nGROUP BY e.first_name, e.last_name\nORDER BY cross_country_orders DESC\nLIMIT 5;"}
{"Question": "Which employees have the highest number of orders that were shipped to a different region than the customer's region?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(*) AS cross_region_orders\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN customers c ON o.customer_id = c.customer_id\nWHERE o.ship_region <> c.region\nGROUP BY e.first_name, e.last_name\nORDER BY cross_region_orders DESC\nLIMIT 5;"}
{"Question": "Which employees have the highest number of orders that were shipped to a different city than the customer's city?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(*) AS cross_city_orders\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN customers c ON o.customer_id = c.customer_id\nWHERE o.ship_city <> c.city\nGROUP BY e.first_name, e.last_name\nORDER BY cross_city_orders DESC\nLIMIT 5;"}
{"Question": "What is the average number of products ordered per customer?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT AVG(product_count) AS avg_products_per_customer\nFROM (\n  SELECT customer_id, COUNT(order_id) AS product_count\n  FROM order_details od\n  JOIN orders o ON od.order_id = o.order_id\n  GROUP BY customer_id\n) AS subquery;"}
{"Question": "What is the average number of orders per employee?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT AVG(order_count) AS avg_orders_per_employee\nFROM (\n  SELECT employee_id, COUNT(order_id) AS order_count\n  FROM orders\n  GROUP BY employee_id\n) AS subquery;"}
{"Question": "What is the average number of products ordered per order for each customer type?", "Context": "CREATE TABLE customer_demographics (\n    customer_type_id bpchar NOT NULL PRIMARY KEY,\n    customer_desc text\n);\n\nCREATE TABLE customer_customer_demo (\n    customer_id bpchar NOT NULL,\n    customer_type_id bpchar NOT NULL,\n    PRIMARY KEY (customer_id, customer_type_id),\n    FOREIGN KEY (customer_type_id) REFERENCES customer_demographics,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT cd.customer_desc, AVG(product_count) AS avg_products_per_order\nFROM (\n  SELECT o.order_id, COUNT(od.product_id) AS product_count\n  FROM orders o\n  JOIN order_details od ON o.order_id = od.order_id\n  GROUP BY o.order_id\n) AS subquery\nJOIN customer_customer_demo ccd ON subquery.order_id = ccd.customer_id\nJOIN customer_demographics cd ON ccd.customer_type_id = cd.customer_type_id\nGROUP BY cd.customer_desc;"}
{"Question": "What is the average number of products ordered per order for each employee?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT e.first_name, e.last_name, AVG(product_count) AS avg_products_per_order\nFROM (\n  SELECT o.order_id, COUNT(od.product_id) AS product_count\n  FROM orders o\n  JOIN order_details od ON o.order_id = od.order_id\n  GROUP BY o.order_id\n) AS subquery\nJOIN orders o ON subquery.order_id = o.order_id\nJOIN employees e ON o.employee_id = e.employee_id\nGROUP BY e.first_name, e.last_name;"}
{"Question": "What is the average number of products ordered per order for each product category?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.category_name, AVG(product_count) AS avg_products_per_order\nFROM (\n  SELECT o.order_id, COUNT(od.product_id) AS product_count\n  FROM orders o\n  JOIN order_details od ON o.order_id = od.order_id\n  GROUP BY o.order_id\n) AS subquery\nJOIN order_details od ON subquery.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_name;"}
{"Question": "What is the average number of products ordered per order for each customer country?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.country, AVG(product_count) AS avg_products_per_order\nFROM (\n  SELECT o.order_id, COUNT(od.product_id) AS product_count\n  FROM orders o\n  JOIN order_details od ON o.order_id = od.order_id\n  GROUP BY o.order_id\n) AS subquery\nJOIN orders o ON subquery.order_id = o.order_id\nJOIN customers c ON o.customer_id = c.customer_id\nGROUP BY c.country;"}
{"Question": "What is the total revenue generated from orders placed by customers in each region?", "Context": "CREATE TABLE regions (\n    region_id SMALLINT PRIMARY KEY,\n    region_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    customer_id CHAR(5) PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    region_id SMALLINT FOREIGN KEY REFERENCES regions(region_id)\n);\n\nCREATE TABLE orders (\n    order_id SMALLINT PRIMARY KEY,\n    customer_id CHAR(5) FOREIGN KEY REFERENCES customers(customer_id),\n    order_date DATE NOT NULL,\n    total_amount DECIMAL(10,2) NOT NULL\n);", "Query": "SELECT r.region_name, SUM(o.total_amount) AS total_revenue\nFROM orders o\nJOIN customers c ON o.customer_id = c.customer_id\nJOIN regions r ON c.region_id = r.region_id\nGROUP BY r.region_name;"}
{"Question": "Which product categories have the highest average order quantities?", "Context": "CREATE TABLE categories (\n    category_id SMALLINT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SMALLINT PRIMARY KEY,\n    product_name VARCHAR(100) NOT NULL,\n    category_id SMALLINT FOREIGN KEY REFERENCES categories(category_id)\n);\n\nCREATE TABLE order_details (\n    order_id SMALLINT NOT NULL,\n    product_id SMALLINT NOT NULL,\n    quantity SMALLINT NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\nCREATE TABLE orders (\n    order_id SMALLINT PRIMARY KEY,\n    order_date DATE NOT NULL,\n    customer_id CHAR(5) NOT NULL\n);", "Query": "SELECT c.category_name, AVG(od.quantity) AS avg_order_quantity\nFROM order_details od\nJOIN products p ON od.product_id = p.product_id\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_name\nORDER BY avg_order_quantity DESC\nLIMIT 3;"}
{"Question": "Which employees have the highest total order value for their assigned territories?", "Context": "CREATE TABLE employees (\n    employee_id SMALLINT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE territories (\n    territory_id VARCHAR(20) PRIMARY KEY,\n    territory_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employee_territories (\n    employee_id SMALLINT NOT NULL,\n    territory_id VARCHAR(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id),\n    FOREIGN KEY (territory_id) REFERENCES territories(territory_id)\n);\n\nCREATE TABLE orders (\n    order_id SMALLINT PRIMARY KEY,\n    employee_id SMALLINT NOT NULL,\n    order_date DATE NOT NULL,\n    total_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);", "Query": "SELECT e.first_name, e.last_name, SUM(o.total_amount) AS total_order_value\nFROM orders o\nJOIN employees e ON o.employee_id = e.employee_id\nJOIN employee_territories et ON e.employee_id = et.employee_id\nGROUP BY e.employee_id, e.first_name, e.last_name\nORDER BY total_order_value DESC\nLIMIT 3;"}
{"Question": "Which customer types have the highest average order frequency?", "Context": "CREATE TABLE customer_types (\n    customer_type_id CHAR(1) PRIMARY KEY,\n    customer_type_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    customer_id CHAR(5) PRIMARY KEY,\n    customer_name VARCHAR(50) NOT NULL,\n    customer_type_id CHAR(1) FOREIGN KEY REFERENCES customer_types(customer_type_id)\n);\n\nCREATE TABLE orders (\n    order_id SMALLINT PRIMARY KEY,\n    customer_id CHAR(5) FOREIGN KEY REFERENCES customers(customer_id),\n    order_date DATE NOT NULL\n);", "Query": "SELECT ct.customer_type_name, AVG(order_count) AS avg_order_frequency\nFROM (\n    SELECT customer_id, COUNT(*) AS order_count\n    FROM orders\n    GROUP BY customer_id\n) AS order_counts\nJOIN customers c ON order_counts.customer_id = c.customer_id\nJOIN customer_types ct ON c.customer_type_id = ct.customer_type_id\nGROUP BY ct.customer_type_name\nORDER BY avg_order_frequency DESC\nLIMIT 3;"}
{"Question": "Which product categories have the highest total sales value?", "Context": "CREATE TABLE categories (\n    category_id SMALLINT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SMALLINT PRIMARY KEY,\n    product_name VARCHAR(100) NOT NULL,\n    category_id SMALLINT FOREIGN KEY REFERENCES categories(category_id)\n);\n\nCREATE TABLE order_details (\n    order_id SMALLINT NOT NULL,\n    product_id SMALLINT NOT NULL,\n    quantity SMALLINT NOT NULL,\n    unit_price DECIMAL(10,2) NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE orders (\n    order_id SMALLINT PRIMARY KEY,\n    order_date DATE NOT NULL\n);", "Query": "SELECT c.category_name, SUM(od.quantity * od.unit_price) AS total_sales_value\nFROM order_details od\nJOIN products p ON od.product_id = p.product_id\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_name\nORDER BY total_sales_value DESC\nLIMIT 3;"}
{"Question": "Which suppliers have the highest number of products in the top-selling categories?", "Context": "CREATE TABLE suppliers (\n    supplier_id SMALLINT PRIMARY KEY,\n    supplier_name VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE categories (\n    category_id SMALLINT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SMALLINT PRIMARY KEY,\n    product_name VARCHAR(100) NOT NULL,\n    supplier_id SMALLINT FOREIGN KEY REFERENCES suppliers(supplier_id),\n    category_id SMALLINT FOREIGN KEY REFERENCES categories(category_id)\n);\n\nCREATE TABLE order_details (\n    order_id SMALLINT NOT NULL,\n    product_id SMALLINT NOT NULL,\n    quantity SMALLINT NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE orders (\n    order_id SMALLINT PRIMARY KEY,\n    order_date DATE NOT NULL\n);", "Query": "WITH top_categories AS (\n    SELECT category_id, SUM(total_sales) AS total_sales\n    FROM (\n        SELECT od.product_id, SUM(od.quantity) AS total_sales\n        FROM order_details od\n        JOIN products p ON od.product_id = p.product_id\n        GROUP BY od.product_id\n    ) AS product_sales\n    JOIN products p ON product_sales.product_id = p.product_id\n    GROUP BY category_id\n    ORDER BY total_sales DESC\n    LIMIT 3\n)\nSELECT s.supplier_name, COUNT(*) AS num_top_products\nFROM products p\nJOIN suppliers s ON p.supplier_id = s.supplier_id\nWHERE p.category_id IN (SELECT category_id FROM top_categories)\nGROUP BY s.supplier_name\nORDER BY num_top_products DESC\nLIMIT 3;"}
{"Question": "Which customer has the highest total order value across all their orders?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.company_name, SUM(od.unit_price * od.quantity) as total_order_value\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY c.customer_id\nORDER BY total_order_value DESC\nLIMIT 1;"}
{"Question": "Which customer has the highest average order value across their orders?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.company_name, AVG(od.unit_price * od.quantity) as avg_order_value\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY c.customer_id\nORDER BY avg_order_value DESC\nLIMIT 1;"}
{"Question": "Which customer has the highest total order quantity across all their orders?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.company_name, SUM(od.quantity) as total_order_quantity\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY c.customer_id\nORDER BY total_order_quantity DESC\nLIMIT 1;"}
{"Question": "Which customer has the highest number of orders that were shipped late (shipped_date > required_date)?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name, COUNT(*) as late_orders\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nWHERE o.shipped_date > o.required_date\nGROUP BY c.customer_id\nORDER BY late_orders DESC\nLIMIT 1;"}
{"Question": "Which customer has the highest percentage of their orders that were shipped on time (shipped_date <= required_date)?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "WITH customer_orders AS (\n  SELECT c.customer_id, c.company_name, COUNT(*) as total_orders,\n         SUM(CASE WHEN o.shipped_date <= o.required_date THEN 1 ELSE 0 END) as on_time_orders\n  FROM customers c\n  JOIN orders o ON c.customer_id = o.customer_id\n  GROUP BY c.customer_id, c.company_name\n)\nSELECT company_name, ROUND(100.0 * on_time_orders / total_orders, 2) as on_time_percentage\nFROM customer_orders\nORDER BY on_time_percentage DESC\nLIMIT 1;"}
{"Question": "Which customers have placed orders for products from the most different categories?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    category_id smallint,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.company_name, COUNT(DISTINCT p.category_id) AS unique_categories\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nGROUP BY c.customer_id\nORDER BY unique_categories DESC\nLIMIT 1;"}
{"Question": "Which customers have placed orders for the highest total quantity of products?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id)\n);", "Query": "SELECT c.company_name, SUM(od.quantity) AS total_quantity\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY c.customer_id\nORDER BY total_quantity DESC\nLIMIT 1;"}
{"Question": "Which customers have placed orders for the highest total value (quantity * unit_price)?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id)\n);", "Query": "SELECT c.company_name, SUM(od.quantity * od.unit_price) AS total_order_value\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY c.customer_id\nORDER BY total_order_value DESC\nLIMIT 1;"}
{"Question": "Which customers have placed orders for the highest total number of unique products?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id)\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL\n);", "Query": "SELECT c.company_name, COUNT(DISTINCT od.product_id) AS unique_products\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY c.customer_id\nORDER BY unique_products DESC\nLIMIT 1;"}
{"Question": "Which customers have placed orders for the highest total value of products from a single category?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id)\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    category_id smallint\n);\n\nCREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL\n);", "Query": "SELECT c.company_name, SUM(od.quantity * od.unit_price) AS category_order_value\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nJOIN categories cat ON p.category_id = cat.category_id\nGROUP BY c.customer_id, cat.category_id\nORDER BY category_order_value DESC\nLIMIT 1;"}
{"Question": "Which customers have placed orders for the highest total value of products from a single supplier?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id)\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL\n);", "Query": "SELECT c.company_name, SUM(od.quantity * od.unit_price) AS supplier_order_value\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nJOIN suppliers s ON p.supplier_id = s.supplier_id\nGROUP BY c.customer_id, s.supplier_id\nORDER BY supplier_order_value DESC\nLIMIT 1;"}
{"Question": "List all suppliers and the total revenue they have generated from their products.", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT s.company_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) AS total_revenue\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY s.company_name;"}
{"Question": "Find the top 5 suppliers based on the total number of orders they have received.", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15)\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT s.company_name, COUNT(od.order_id) AS total_orders\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nJOIN order_details od ON p.product_id = od.product_id\nJOIN orders o ON od.order_id = o.order_id\nGROUP BY s.company_name\nORDER BY total_orders DESC\nLIMIT 5;"}
{"Question": "Find the top 3 suppliers based on the total number of products they supply.", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT s.company_name, COUNT(p.product_id) AS total_products\nFROM suppliers s\nLEFT JOIN products p ON s.supplier_id = p.supplier_id\nGROUP BY s.company_name\nORDER BY total_products DESC\nLIMIT 3;"}
{"Question": "Identify the suppliers that have not supplied any products in the last 6 months.", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15)\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT s.company_name\nFROM suppliers s\nLEFT JOIN products p ON s.supplier_id = p.supplier_id\nLEFT JOIN order_details od ON p.product_id = od.product_id\nLEFT JOIN orders o ON od.order_id = o.order_id\nWHERE o.order_date < DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH)\nGROUP BY s.company_name\nHAVING COUNT(p.product_id) = 0;"}
{"Question": "Find the suppliers that have the highest average order value for their products.", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15)\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT s.company_name, AVG(od.unit_price * od.quantity * (1 - od.discount)) AS avg_order_value\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nJOIN order_details od ON p.product_id = od.product_id\nJOIN orders o ON od.order_id = o.order_id\nGROUP BY s.company_name\nORDER BY avg_order_value DESC\nLIMIT 3;"}
{"Question": "Identify the suppliers that have the highest number of products with units in stock.", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT s.company_name, COUNT(p.product_id) AS products_in_stock\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nWHERE p.units_in_stock > 0\nGROUP BY s.company_name\nORDER BY products_in_stock DESC\nLIMIT 3;"}
{"Question": "Which suppliers have the highest number of products they supply?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT s.company_name, COUNT(p.product_id) as product_count\nFROM suppliers s\nLEFT JOIN products p ON s.supplier_id = p.supplier_id\nGROUP BY s.supplier_id\nORDER BY product_count DESC\nLIMIT 5;"}
{"Question": "What is the average number of products supplied by each supplier?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT AVG(product_count) AS avg_products_per_supplier\nFROM (\n  SELECT s.supplier_id, COUNT(p.product_id) AS product_count\n  FROM suppliers s\n  LEFT JOIN products p ON s.supplier_id = p.supplier_id\n  GROUP BY s.supplier_id\n) AS supplier_product_counts;"}
{"Question": "Which suppliers have the most diverse range of products they supply?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);", "Query": "SELECT s.company_name, COUNT(DISTINCT p.category_id) AS unique_categories\nFROM suppliers s\nLEFT JOIN products p ON s.supplier_id = p.supplier_id\nGROUP BY s.supplier_id\nORDER BY unique_categories DESC\nLIMIT 5;"}
{"Question": "Which suppliers have the highest total sales value of the products they supply?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT s.company_name, SUM(od.unit_price * od.quantity) AS total_sales\nFROM suppliers s\nLEFT JOIN products p ON s.supplier_id = p.supplier_id\nLEFT JOIN order_details od ON p.product_id = od.product_id\nGROUP BY s.supplier_id\nORDER BY total_sales DESC\nLIMIT 5;"}
{"Question": "Which suppliers have the highest percentage of their products that are currently discontinued?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT s.company_name, \n       ROUND(SUM(CASE WHEN p.discontinued = 1 THEN 1 ELSE 0 END) * 1.0 / COUNT(p.product_id), 2) AS discontinued_percentage\nFROM suppliers s\nLEFT JOIN products p ON s.supplier_id = p.supplier_id\nGROUP BY s.supplier_id\nORDER BY discontinued_percentage DESC\nLIMIT 5;"}
{"Question": "Which suppliers have the highest ratio of products in stock to products discontinued?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT s.company_name,\n       ROUND(SUM(CASE WHEN p.discontinued = 0 THEN p.units_in_stock ELSE 0 END) * 1.0 / \n            SUM(CASE WHEN p.discontinued = 1 THEN 1 ELSE 0 END), 2) AS in_stock_to_discontinued_ratio\nFROM suppliers s\nLEFT JOIN products p ON s.supplier_id = p.supplier_id\nGROUP BY s.supplier_id\nORDER BY in_stock_to_discontinued_ratio DESC\nLIMIT 5;"}
{"Question": "What is the total sales amount for each category by customer type?", "Context": "CREATE TABLE customer_demographics (\n    customer_type_id bpchar NOT NULL PRIMARY KEY,\n    customer_desc text\n);\n\nCREATE TABLE customer_customer_demo (\n    customer_id bpchar NOT NULL,\n    customer_type_id bpchar NOT NULL,\n    PRIMARY KEY (customer_id, customer_type_id),\n    FOREIGN KEY (customer_type_id) REFERENCES customer_demographics,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.category_name, cd.customer_desc, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_sales\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nJOIN order_details od ON p.product_id = od.product_id\nJOIN orders o ON od.order_id = o.order_id\nJOIN customer_customer_demo ccd ON o.customer_id = ccd.customer_id\nJOIN customer_demographics cd ON ccd.customer_type_id = cd.customer_type_id\nGROUP BY c.category_id, cd.customer_desc;"}
{"Question": "What is the total sales amount for each category by region?", "Context": "CREATE TABLE region (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_description bpchar NOT NULL\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (territory_id) REFERENCES territories,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);", "Query": "SELECT c.category_name, r.region_description, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_sales\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nJOIN order_details od ON p.product_id = od.product_id\nJOIN orders o ON od.order_id = o.order_id\nJOIN employees e ON o.employee_id = e.employee_id\nJOIN employee_territories et ON e.employee_id = et.employee_id\nJOIN territories t ON et.territory_id = t.territory_id\nJOIN region r ON t.region_id = r.region_id\nGROUP BY c.category_id, r.region_description;"}
{"Question": "What is the total sales amount for each category by supplier country?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT c.category_name, s.country, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_sales\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nJOIN suppliers s ON p.supplier_id = s.supplier_id\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY c.category_id, s.country;"}
{"Question": "What is the total sales amount for each category by employee region?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);", "Query": "SELECT c.category_name, e.region, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_sales\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nJOIN order_details od ON p.product_id = od.product_id\nJOIN orders o ON od.order_id = o.order_id\nJOIN employees e ON o.employee_id = e.employee_id\nGROUP BY c.category_id, e.region;"}
{"Question": "What is the total sales amount for each category by customer country?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.category_name, cu.country, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_sales\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nJOIN order_details od ON p.product_id = od.product_id\nJOIN orders o ON od.order_id = o.order_id\nJOIN customers cu ON o.customer_id = cu.customer_id\nGROUP BY c.category_id, cu.country;"}
{"Question": "What are the top 5 best-selling products in each category?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT c.category_name, p.product_name, SUM(od.quantity) as total_sold\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY c.category_name, p.product_name\nORDER BY c.category_name, total_sold DESC\nLIMIT 5 PER GROUP;"}
{"Question": "What is the average order value for each customer type?", "Context": "CREATE TABLE customer_demographics (\n    customer_type_id bpchar NOT NULL PRIMARY KEY,\n    customer_desc text\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE customer_customer_demo (\n    customer_id bpchar NOT NULL,\n    customer_type_id bpchar NOT NULL,\n    PRIMARY KEY (customer_id, customer_type_id),\n    FOREIGN KEY (customer_type_id) REFERENCES customer_demographics,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    freight real,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT cd.customer_desc, AVG(o.freight) as avg_order_value\nFROM customer_customer_demo ccd\nJOIN customer_demographics cd ON ccd.customer_type_id = cd.customer_type_id\nJOIN orders o ON ccd.customer_id = o.customer_id\nGROUP BY cd.customer_desc;"}
{"Question": "Which employees have the highest total sales for their assigned territories?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (territory_id) REFERENCES territories,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    employee_id smallint,\n    order_date date,\n    freight real,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT e.first_name, e.last_name, SUM(od.quantity * od.unit_price * (1 - od.discount)) as total_sales\nFROM employees e\nJOIN employee_territories et ON e.employee_id = et.employee_id\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY e.employee_id\nORDER BY total_sales DESC\nLIMIT 5;"}
{"Question": "Which suppliers have the highest total sales across all their products?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT s.company_name, SUM(od.quantity * od.unit_price * (1 - od.discount)) as total_sales\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY s.supplier_id\nORDER BY total_sales DESC\nLIMIT 5;"}
{"Question": "What is the total sales amount for each product category in each region?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE region (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_description bpchar NOT NULL\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    employee_id smallint,\n    ship_via smallint,\n    freight real,\n    ship_country character varying(15)\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.category_name, r.region_description, SUM(od.quantity * od.unit_price * (1 - od.discount)) as total_sales\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nJOIN order_details od ON p.product_id = od.product_id\nJOIN orders o ON od.order_id = o.order_id\nJOIN territories t ON o.ship_country = t.territory_description\nJOIN region r ON t.region_id = r.region_id\nGROUP BY c.category_name, r.region_description\nORDER BY c.category_name, r.region_description, total_sales DESC;"}
{"Question": "Which customers have the highest total order value across all their orders?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    freight real,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.company_name, SUM(o.freight) as total_order_value\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_id\nORDER BY total_order_value DESC\nLIMIT 5;"}
{"Question": "What are the top 5 most expensive products ordered by customers?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT p.product_name, p.unit_price\nFROM products p\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_name, p.unit_price\nORDER BY p.unit_price DESC\nLIMIT 5;"}
{"Question": "Which customers have ordered the most expensive products from each category?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT c.company_name, p.category_id, p.product_name, p.unit_price\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nWHERE p.unit_price = (\n    SELECT MAX(unit_price)\n    FROM products\n    WHERE category_id = p.category_id\n)\nGROUP BY c.company_name, p.category_id, p.product_name, p.unit_price\nORDER BY p.category_id, p.unit_price DESC;"}
{"Question": "Which customers have ordered the most expensive products from each supplier?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);", "Query": "SELECT c.company_name, s.company_name, p.product_name, p.unit_price\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nJOIN suppliers s ON p.supplier_id = s.supplier_id\nWHERE p.unit_price = (\n    SELECT MAX(unit_price)\n    FROM products\n    WHERE supplier_id = p.supplier_id\n)\nGROUP BY c.company_name, s.company_name, p.product_name, p.unit_price\nORDER BY s.company_name, p.unit_price DESC;"}
{"Question": "What are the top 5 customers who have ordered the most expensive products from the most expensive suppliers?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);", "Query": "SELECT c.company_name, s.company_name, p.product_name, p.unit_price\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nJOIN suppliers s ON p.supplier_id = s.supplier_id\nWHERE p.unit_price = (\n    SELECT MAX(unit_price)\n    FROM products\n) AND s.unit_price = (\n    SELECT MAX(unit_price)\n    FROM suppliers\n)\nGROUP BY c.company_name, s.company_name, p.product_name, p.unit_price\nORDER BY p.unit_price DESC\nLIMIT 5;"}
{"Question": "Which customers have ordered the most expensive products from the most expensive suppliers in each region?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE regions (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_name character varying(50) NOT NULL\n);", "Query": "SELECT c.company_name, r.region_name, s.company_name, p.product_name, p.unit_price\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nJOIN suppliers s ON p.supplier_id = s.supplier_id\nJOIN (\n    SELECT customer_id, MAX(unit_price) AS max_price\n    FROM order_details od\n    JOIN products p ON od.product_id = p.product_id\n    GROUP BY customer_id\n) max_prices ON c.customer_id = max_prices.customer_id\nJOIN (\n    SELECT supplier_id, MAX(unit_price) AS max_price\n    FROM suppliers\n    GROUP BY supplier_id\n) max_supplier_prices ON s.supplier_id = max_supplier_prices.supplier_id\nJOIN (\n    SELECT region_id, MAX(unit_price) AS max_price\n    FROM products p\n    JOIN suppliers s ON p.supplier_id = s.supplier_id\n    GROUP BY region_id\n) max_region_prices ON s.region = max_region_prices.region_id\nJOIN regions r ON s.region = r.region_id\nWHERE p.unit_price = max_prices.max_price\n  AND s.unit_price = max_supplier_prices.max_price\n  AND s.region = max_region_prices.region_id\nGROUP BY c.company_name, r.region_name, s.company_name, p.product_name, p.unit_price\nORDER BY r.region_name, p.unit_price DESC;"}
{"Question": "What are the top 3 most expensive products in each category?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_name, p.product_name, p.unit_price\nFROM products p\nJOIN categories c ON p.category_id = c.category_id\nWHERE p.unit_price IN (\n  SELECT unit_price\n  FROM (\n    SELECT unit_price, ROW_NUMBER() OVER (PARTITION BY category_id ORDER BY unit_price DESC) AS rn\n    FROM products\n  ) t\n  WHERE rn <= 3\n)\nORDER BY c.category_name, p.unit_price DESC;"}
{"Question": "Which customers have placed orders for products from the most number of different suppliers?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.customer_id, c.company_name, COUNT(DISTINCT p.supplier_id) AS num_suppliers\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nGROUP BY c.customer_id, c.company_name\nORDER BY num_suppliers DESC\nLIMIT 3;"}
{"Question": "Which employees have the highest total order value for their orders?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    employee_id smallint,\n    order_date date,\n    freight real,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT e.employee_id, e.first_name, e.last_name, SUM(od.unit_price * od.quantity) AS total_order_value\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY e.employee_id, e.first_name, e.last_name\nORDER BY total_order_value DESC\nLIMIT 3;"}
{"Question": "Which customers have placed orders for the most number of unique products?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL\n);", "Query": "SELECT c.customer_id, c.company_name, COUNT(DISTINCT od.product_id) AS num_unique_products\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY c.customer_id, c.company_name\nORDER BY num_unique_products DESC\nLIMIT 3;"}
{"Question": "Which customers have placed the most number of orders for discontinued products?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    discontinued integer NOT NULL\n);", "Query": "SELECT c.customer_id, c.company_name, COUNT(*) AS num_discontinued_orders\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nWHERE p.discontinued = 1\nGROUP BY c.customer_id, c.company_name\nORDER BY num_discontinued_orders DESC\nLIMIT 3;"}
{"Question": "Which employees have the highest number of orders processed?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(o.order_id) as order_count\nFROM employees e\nLEFT JOIN orders o ON e.employee_id = o.employee_id\nGROUP BY e.employee_id\nORDER BY order_count DESC\nLIMIT 5;"}
{"Question": "What is the average number of orders processed by employees?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT AVG(order_count) as avg_orders\nFROM (\n  SELECT COUNT(o.order_id) as order_count\n  FROM employees e\n  LEFT JOIN orders o ON e.employee_id = o.employee_id\n  GROUP BY e.employee_id\n) as subquery;"}
{"Question": "Which employees have processed the most orders in a single year?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(o.order_id) as order_count\nFROM employees e\nLEFT JOIN orders o ON e.employee_id = o.employee_id\nWHERE o.order_date BETWEEN '2022-01-01' AND '2022-12-31'\nGROUP BY e.employee_id\nORDER BY order_count DESC\nLIMIT 5;"}
{"Question": "Which employees have the highest total order value processed?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT e.first_name, e.last_name, SUM(od.unit_price * od.quantity) as total_order_value\nFROM employees e\nLEFT JOIN orders o ON e.employee_id = o.employee_id\nLEFT JOIN order_details od ON o.order_id = od.order_id\nGROUP BY e.employee_id\nORDER BY total_order_value DESC\nLIMIT 5;"}
{"Question": "Which employees have the highest number of orders with the highest freight charges?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(o.order_id) as order_count\nFROM employees e\nLEFT JOIN orders o ON e.employee_id = o.employee_id\nWHERE o.freight > (SELECT AVG(freight) FROM orders)\nGROUP BY e.employee_id\nORDER BY order_count DESC\nLIMIT 5;"}
{"Question": "Which employees have the highest number of orders processed?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(o.order_id) as order_count\nFROM employees e\nLEFT JOIN orders o ON e.employee_id = o.employee_id\nGROUP BY e.employee_id\nORDER BY order_count DESC\nLIMIT 5;"}
{"Question": "Which employees have processed orders for customers in specific regions?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);", "Query": "SELECT e.first_name, e.last_name, c.region, COUNT(o.order_id) as order_count\nFROM employees e\nLEFT JOIN orders o ON e.employee_id = o.employee_id\nLEFT JOIN customers c ON o.customer_id = c.customer_id\nGROUP BY e.employee_id, c.region\nORDER BY order_count DESC;"}
{"Question": "Which employees have processed the most orders for specific product categories?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);", "Query": "SELECT e.first_name, e.last_name, c.category_name, COUNT(od.order_id) as order_count\nFROM employees e\nLEFT JOIN orders o ON e.employee_id = o.employee_id\nLEFT JOIN order_details od ON o.order_id = od.order_id\nLEFT JOIN products p ON od.product_id = p.product_id\nLEFT JOIN categories c ON p.category_id = c.category_id\nGROUP BY e.employee_id, c.category_name\nORDER BY order_count DESC;"}
{"Question": "Which employees have processed the most orders for specific customers?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);", "Query": "SELECT e.first_name, e.last_name, c.company_name, COUNT(o.order_id) as order_count\nFROM employees e\nLEFT JOIN orders o ON e.employee_id = o.employee_id\nLEFT JOIN customers c ON o.customer_id = c.customer_id\nGROUP BY e.employee_id, c.company_name\nORDER BY order_count DESC;"}
{"Question": "Which employees have processed the most orders within a specific time period?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(o.order_id) as order_count\nFROM employees e\nLEFT JOIN orders o ON e.employee_id = o.employee_id\nWHERE o.order_date BETWEEN '2022-01-01' AND '2022-12-31'\nGROUP BY e.employee_id\nORDER BY order_count DESC;"}
{"Question": "Which employees have processed the most orders for specific product suppliers?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);", "Query": "SELECT e.first_name, e.last_name, s.company_name, COUNT(od.order_id) as order_count\nFROM employees e\nLEFT JOIN orders o ON e.employee_id = o.employee_id\nLEFT JOIN order_details od ON o.order_id = od.order_id\nLEFT JOIN products p ON od.product_id = p.product_id\nLEFT JOIN suppliers s ON p.supplier_id = s.supplier_id\nGROUP BY e.employee_id, s.company_name\nORDER BY order_count DESC;"}
{"Question": "What is the total revenue generated from orders in each region?", "Context": "CREATE TABLE regions (\n    region_id SMALLINT PRIMARY KEY,\n    region_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id SMALLINT PRIMARY KEY,\n    customer_id CHAR(5),\n    order_date DATE,\n    ship_region VARCHAR(15),\n    freight DECIMAL(10,2)\n);\n\nCREATE TABLE order_details (\n    order_id SMALLINT,\n    product_id SMALLINT,\n    unit_price DECIMAL(10,2),\n    quantity SMALLINT,\n    discount DECIMAL(4,2),\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);", "Query": "SELECT r.region_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) AS total_revenue\nFROM orders o\nJOIN order_details od ON o.order_id = od.order_id\nJOIN regions r ON o.ship_region = r.region_name\nGROUP BY r.region_name;"}
{"Question": "Which customer types have the highest average order value?", "Context": "CREATE TABLE customer_types (\n    customer_type_id CHAR(1) PRIMARY KEY,\n    customer_type_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    customer_id CHAR(5) PRIMARY KEY,\n    customer_type_id CHAR(1),\n    company_name VARCHAR(40) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id SMALLINT PRIMARY KEY,\n    customer_id CHAR(5),\n    order_date DATE,\n    total_value DECIMAL(10,2)\n);\n\nCREATE TABLE order_details (\n    order_id SMALLINT,\n    product_id SMALLINT,\n    unit_price DECIMAL(10,2),\n    quantity SMALLINT,\n    discount DECIMAL(4,2),\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);", "Query": "SELECT ct.customer_type_name, AVG(o.total_value) AS avg_order_value\nFROM orders o\nJOIN customers c ON o.customer_id = c.customer_id\nJOIN customer_types ct ON c.customer_type_id = ct.customer_type_id\nGROUP BY ct.customer_type_name\nORDER BY avg_order_value DESC;"}
{"Question": "What is the average order value for each employee?", "Context": "CREATE TABLE employees (\n    employee_id SMALLINT PRIMARY KEY,\n    first_name VARCHAR(10),\n    last_name VARCHAR(20)\n);\n\nCREATE TABLE orders (\n    order_id SMALLINT PRIMARY KEY,\n    employee_id SMALLINT,\n    order_date DATE,\n    total_value DECIMAL(10,2),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);", "Query": "SELECT e.first_name, e.last_name, AVG(o.total_value) AS avg_order_value\nFROM orders o\nJOIN employees e ON o.employee_id = e.employee_id\nGROUP BY e.employee_id, e.first_name, e.last_name;"}
{"Question": "Which product categories have the highest average order value?", "Context": "CREATE TABLE categories (\n    category_id SMALLINT PRIMARY KEY,\n    category_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SMALLINT PRIMARY KEY,\n    product_name VARCHAR(40),\n    category_id SMALLINT,\n    unit_price DECIMAL(10,2),\n    FOREIGN KEY (category_id) REFERENCES categories(category_id)\n);\n\nCREATE TABLE order_details (\n    order_id SMALLINT,\n    product_id SMALLINT,\n    unit_price DECIMAL(10,2),\n    quantity SMALLINT,\n    discount DECIMAL(4,2),\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE orders (\n    order_id SMALLINT PRIMARY KEY,\n    order_date DATE,\n    total_value DECIMAL(10,2)\n);", "Query": "SELECT c.category_name, AVG(od.unit_price * od.quantity * (1 - od.discount)) AS avg_order_value\nFROM order_details od\nJOIN products p ON od.product_id = p.product_id\nJOIN categories c ON p.category_id = c.category_id\nJOIN orders o ON od.order_id = o.order_id\nGROUP BY c.category_name\nORDER BY avg_order_value DESC;"}
{"Question": "What is the total revenue generated from orders placed on weekends?", "Context": "CREATE TABLE orders (\n    order_id SMALLINT PRIMARY KEY,\n    order_date DATE,\n    total_value DECIMAL(10,2)\n);\n\nCREATE TABLE order_details (\n    order_id SMALLINT,\n    product_id SMALLINT,\n    unit_price DECIMAL(10,2),\n    quantity SMALLINT,\n    discount DECIMAL(4,2),\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);", "Query": "SELECT SUM(od.unit_price * od.quantity * (1 - od.discount)) AS total_weekend_revenue\nFROM order_details od\nJOIN orders o ON od.order_id = o.order_id\nWHERE EXTRACT(DOW FROM o.order_date) IN (0, 6);"}
{"Question": "Which customer segments have the highest total order value?", "Context": "CREATE TABLE customer_segments (\n    segment_id SMALLINT PRIMARY KEY,\n    segment_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    customer_id CHAR(5) PRIMARY KEY,\n    segment_id SMALLINT,\n    company_name VARCHAR(40) NOT NULL,\n    FOREIGN KEY (segment_id) REFERENCES customer_segments(segment_id)\n);\n\nCREATE TABLE orders (\n    order_id SMALLINT PRIMARY KEY,\n    customer_id CHAR(5),\n    order_date DATE,\n    total_value DECIMAL(10,2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);", "Query": "SELECT cs.segment_name, SUM(o.total_value) AS total_order_value\nFROM orders o\nJOIN customers c ON o.customer_id = c.customer_id\nJOIN customer_segments cs ON c.segment_id = cs.segment_id\nGROUP BY cs.segment_name\nORDER BY total_order_value DESC;"}
{"Question": "What is the total revenue generated from each product category?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT c.category_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) AS total_revenue\nFROM order_details od\nJOIN products p ON od.product_id = p.product_id\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_name;"}
{"Question": "Which customers have the highest total order value?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.customer_id, c.company_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) AS total_order_value\nFROM orders o\nJOIN order_details od ON o.order_id = od.order_id\nJOIN customers c ON o.customer_id = c.customer_id\nGROUP BY c.customer_id, c.company_name\nORDER BY total_order_value DESC\nLIMIT 10;"}
{"Question": "Which employees have the highest total sales value?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT e.employee_id, e.first_name, e.last_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) AS total_sales_value\nFROM orders o\nJOIN order_details od ON o.order_id = od.order_id\nJOIN employees e ON o.employee_id = e.employee_id\nGROUP BY e.employee_id, e.first_name, e.last_name\nORDER BY total_sales_value DESC\nLIMIT 10;"}
{"Question": "What is the average order value for each customer type?", "Context": "CREATE TABLE customer_demographics (\n    customer_type_id bpchar NOT NULL PRIMARY KEY,\n    customer_desc text\n);\n\nCREATE TABLE customer_customer_demo (\n    customer_id bpchar NOT NULL,\n    customer_type_id bpchar NOT NULL,\n    PRIMARY KEY (customer_id, customer_type_id),\n    FOREIGN KEY (customer_type_id) REFERENCES customer_demographics\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT cd.customer_desc, AVG(order_total) AS avg_order_value\nFROM (\n  SELECT o.order_id, SUM(od.unit_price * od.quantity * (1 - od.discount)) AS order_total\n  FROM orders o\n  JOIN order_details od ON o.order_id = od.order_id\n  GROUP BY o.order_id\n) AS subquery\nJOIN customer_customer_demo ccd ON subquery.order_id = ccd.customer_id\nJOIN customer_demographics cd ON ccd.customer_type_id = cd.customer_type_id\nGROUP BY cd.customer_desc;"}
{"Question": "Which product categories have the highest average order quantity?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT c.category_name, AVG(od.quantity) AS avg_order_quantity\nFROM order_details od\nJOIN products p ON od.product_id = p.product_id\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_name\nORDER BY avg_order_quantity DESC;"}
{"Question": "Which suppliers have the highest total order value?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT s.supplier_id, s.company_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) AS total_order_value\nFROM order_details od\nJOIN products p ON od.product_id = p.product_id\nJOIN suppliers s ON p.supplier_id = s.supplier_id\nGROUP BY s.supplier_id, s.company_name\nORDER BY total_order_value DESC\nLIMIT 10;"}
{"Question": "What are the top 5 best-selling products by total ordered quantity?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT p.product_name, COALESCE(SUM(od.quantity), 0) as total_ordered\nFROM products p\nLEFT JOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_id\nORDER BY total_ordered DESC\nLIMIT 5;"}
{"Question": "What are the top 5 best-selling products by total revenue?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT p.product_name, COALESCE(SUM(od.quantity * od.unit_price), 0) as total_revenue\nFROM products p\nLEFT JOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_id\nORDER BY total_revenue DESC\nLIMIT 5;"}
{"Question": "What are the top 5 products with the highest average order quantity?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT p.product_name, AVG(od.quantity) as avg_order_quantity\nFROM products p\nLEFT JOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_id\nORDER BY avg_order_quantity DESC\nLIMIT 5;"}
{"Question": "What are the top 5 products with the highest total revenue by country?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15)\n);", "Query": "SELECT p.product_name, o.ship_country, COALESCE(SUM(od.quantity * od.unit_price), 0) as total_revenue\nFROM products p\nLEFT JOIN order_details od ON p.product_id = od.product_id\nLEFT JOIN orders o ON od.order_id = o.order_id\nGROUP BY p.product_id, o.ship_country\nORDER BY total_revenue DESC\nLIMIT 5;"}
{"Question": "What are the top 5 products with the highest total ordered quantity by customer type?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE customer_customer_demo (\n    customer_id bpchar NOT NULL,\n    customer_type_id bpchar NOT NULL,\n    PRIMARY KEY (customer_id, customer_type_id),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE customer_demographics (\n    customer_type_id bpchar NOT NULL PRIMARY KEY,\n    customer_desc text\n);", "Query": "SELECT p.product_name, cd.customer_desc, COALESCE(SUM(od.quantity), 0) as total_ordered\nFROM products p\nLEFT JOIN order_details od ON p.product_id = od.product_id\nLEFT JOIN customers c ON od.order_id = c.customer_id\nLEFT JOIN customer_customer_demo ccd ON c.customer_id = ccd.customer_id\nLEFT JOIN customer_demographics cd ON ccd.customer_type_id = cd.customer_type_id\nGROUP BY p.product_id, cd.customer_desc\nORDER BY total_ordered DESC\nLIMIT 5;"}
{"Question": "What are the top 5 products with the highest total ordered quantity by employee region?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15)\n);\n\nCREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255)\n);", "Query": "SELECT p.product_name, e.region, COALESCE(SUM(od.quantity), 0) as total_ordered\nFROM products p\nLEFT JOIN order_details od ON p.product_id = od.product_id\nLEFT JOIN orders o ON od.order_id = o.order_id\nLEFT JOIN employees e ON o.employee_id = e.employee_id\nGROUP BY p.product_id, e.region\nORDER BY total_ordered DESC\nLIMIT 5;"}
{"Question": "What are the top 5 best-selling products by total ordered quantity?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT p.product_name, COALESCE(SUM(od.quantity), 0) as total_ordered\nFROM products p\nLEFT JOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_id\nORDER BY total_ordered DESC\nLIMIT 5;"}
{"Question": "Which products have been discontinued and what is their total ordered quantity?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT p.product_name, COALESCE(SUM(od.quantity), 0) as total_ordered\nFROM products p\nLEFT JOIN order_details od ON p.product_id = od.product_id\nWHERE p.discontinued = 1\nGROUP BY p.product_id\nORDER BY total_ordered DESC;"}
{"Question": "What is the average order quantity for each product?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT p.product_name, AVG(od.quantity) as avg_order_quantity\nFROM products p\nLEFT JOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_id;"}
{"Question": "Which products have never been ordered?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT p.product_name\nFROM products p\nLEFT JOIN order_details od ON p.product_id = od.product_id\nWHERE od.product_id IS NULL;"}
{"Question": "What is the total revenue generated by each product?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT p.product_name, SUM(od.quantity * od.unit_price) as total_revenue\nFROM products p\nLEFT JOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_id;"}
{"Question": "Which products have the highest profit margin?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT p.product_name, (p.unit_price - AVG(od.unit_price)) / p.unit_price as profit_margin\nFROM products p\nLEFT JOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_id\nORDER BY profit_margin DESC;"}
{"Question": "Which customers have placed orders on the most consecutive dates?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name, COUNT(DISTINCT o.order_date) AS consecutive_order_dates\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_id\nORDER BY consecutive_order_dates DESC\nLIMIT 1;"}
{"Question": "Which customers have placed orders on the most unique dates across all their orders?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name, COUNT(DISTINCT o.order_date) AS unique_order_dates\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_id\nORDER BY unique_order_dates DESC\nLIMIT 1;"}
{"Question": "Which customers have placed orders on the most unique days of the week?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name, COUNT(DISTINCT EXTRACT(DOW FROM o.order_date)) AS unique_order_days\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_id\nORDER BY unique_order_days DESC\nLIMIT 1;"}
{"Question": "Which customers have placed orders on the most unique months of the year?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name, COUNT(DISTINCT EXTRACT(MONTH FROM o.order_date)) AS unique_order_months\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_id\nORDER BY unique_order_months DESC\nLIMIT 1;"}
{"Question": "Which customers have placed orders on the most unique years?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name, COUNT(DISTINCT EXTRACT(YEAR FROM o.order_date)) AS unique_order_years\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_id\nORDER BY unique_order_years DESC\nLIMIT 1;"}
{"Question": "Which customers have placed orders on the most consecutive dates?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name, COUNT(DISTINCT DATE_PART('day', o.order_date - LAG(o.order_date, 1) OVER (PARTITION BY c.customer_id ORDER BY o.order_date))) AS consecutive_order_dates\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_id\nORDER BY consecutive_order_dates DESC\nLIMIT 1;"}
{"Question": "Which customers have placed orders on the most unique dates across all years?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name, COUNT(DISTINCT DATE(o.order_date)) AS unique_order_dates\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_id\nORDER BY unique_order_dates DESC\nLIMIT 1;"}
{"Question": "Which customers have placed orders on the most unique days of the week?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name, COUNT(DISTINCT EXTRACT(DOW FROM o.order_date)) AS unique_order_days\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_id\nORDER BY unique_order_days DESC\nLIMIT 1;"}
{"Question": "Which customers have placed orders on the most unique months across all years?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name, COUNT(DISTINCT EXTRACT(MONTH FROM o.order_date)) AS unique_order_months\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_id\nORDER BY unique_order_months DESC\nLIMIT 1;"}
{"Question": "Which customers have placed orders on the most unique quarters across all years?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name, COUNT(DISTINCT EXTRACT(QUARTER FROM o.order_date)) AS unique_order_quarters\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_id\nORDER BY unique_order_quarters DESC\nLIMIT 1;"}
{"Question": "Which customers have placed orders on the most unique years?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name, COUNT(DISTINCT EXTRACT(YEAR FROM o.order_date)) AS unique_order_years\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_id\nORDER BY unique_order_years DESC\nLIMIT 1;"}
{"Question": "What is the most common customer country?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);", "Query": "SELECT country, COUNT(*) as customer_count \nFROM customers\nGROUP BY country\nORDER BY customer_count DESC\nLIMIT 1;"}
{"Question": "Which employee has shipped to the most countries?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15)\n);", "Query": "SELECT e.employee_id, e.first_name, e.last_name, COUNT(DISTINCT o.ship_country) as countries_shipped_to\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nGROUP BY e.employee_id, e.first_name, e.last_name\nORDER BY countries_shipped_to DESC\nLIMIT 1;"}
{"Question": "What is the most common product category for orders shipped to a specific country?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15)\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);", "Query": "SELECT c.category_name, COUNT(*) as order_count\nFROM orders o\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nJOIN categories c ON p.category_id = c.category_id\nWHERE o.ship_country = 'Germany'\nGROUP BY c.category_name\nORDER BY order_count DESC\nLIMIT 1;"}
{"Question": "Which customer has placed the most orders?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.customer_id, c.company_name, COUNT(*) as order_count\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_id, c.company_name\nORDER BY order_count DESC\nLIMIT 1;"}
{"Question": "Which employee has the most customers in their territory?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255)\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (territory_id) REFERENCES territories,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);", "Query": "SELECT e.employee_id, e.first_name, e.last_name, COUNT(DISTINCT c.customer_id) as customer_count\nFROM employees e\nJOIN employee_territories et ON e.employee_id = et.employee_id\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN customers c ON o.customer_id = c.customer_id\nGROUP BY e.employee_id, e.first_name, e.last_name\nORDER BY customer_count DESC\nLIMIT 1;"}
{"Question": "What is the most common customer country?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);", "Query": "SELECT country, COUNT(*) as customer_count \nFROM customers\nGROUP BY country\nORDER BY customer_count DESC\nLIMIT 1;"}
{"Question": "Which employee has shipped to the most countries?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15)\n);", "Query": "SELECT e.employee_id, e.first_name, e.last_name, COUNT(DISTINCT o.ship_country) as countries_shipped_to\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nGROUP BY e.employee_id, e.first_name, e.last_name\nORDER BY countries_shipped_to DESC\nLIMIT 1;"}
{"Question": "Which supplier has the most products in the highest category?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL\n);", "Query": "SELECT s.supplier_id, s.company_name, COUNT(*) as product_count\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nWHERE p.category_id = (SELECT category_id FROM categories ORDER BY category_id DESC LIMIT 1)\nGROUP BY s.supplier_id, s.company_name\nORDER BY product_count DESC\nLIMIT 1;"}
{"Question": "Which customer has the most orders shipped to the same country?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15)\n);", "Query": "SELECT c.customer_id, c.company_name, COUNT(*) as orders_to_same_country\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_id, c.company_name\nORDER BY orders_to_same_country DESC\nLIMIT 1;"}
{"Question": "Which region has the highest total freight cost for orders?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15)\n);\n\nCREATE TABLE region (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_description bpchar NOT NULL\n);", "Query": "SELECT r.region_description, SUM(o.freight) as total_freight\nFROM orders o\nJOIN region r ON o.ship_region = r.region_description\nGROUP BY r.region_description\nORDER BY total_freight DESC\nLIMIT 1;"}
{"Question": "Which employee has the most orders shipped to their home country?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15)\n);", "Query": "SELECT e.employee_id, e.first_name, e.last_name, COUNT(*) as orders_to_home_country\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nWHERE e.country = o.ship_country\nGROUP BY e.employee_id, e.first_name, e.last_name\nORDER BY orders_to_home_country DESC\nLIMIT 1;"}
{"Question": "What are the top 5 categories with the highest average product price?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_name, AVG(p.unit_price) as avg_price\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nGROUP BY c.category_id\nORDER BY avg_price DESC\nLIMIT 5;"}
{"Question": "Which categories have an average product price above the overall average?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "WITH overall_avg AS (\n    SELECT AVG(unit_price) AS overall_avg\n    FROM products\n)\nSELECT c.category_name, AVG(p.unit_price) AS avg_price\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nGROUP BY c.category_id\nHAVING AVG(p.unit_price) > (SELECT overall_avg FROM overall_avg);"}
{"Question": "Which categories have the most products with a price above the category average?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "WITH category_avg AS (\n    SELECT category_id, AVG(unit_price) AS avg_price\n    FROM products\n    GROUP BY category_id\n)\nSELECT c.category_name, COUNT(*) AS above_avg_products\nFROM products p\nJOIN category_avg ca ON p.category_id = ca.category_id\nJOIN categories c ON p.category_id = c.category_id\nWHERE p.unit_price > ca.avg_price\nGROUP BY c.category_name\nORDER BY above_avg_products DESC;"}
{"Question": "Which categories have the highest percentage of products with a price above the category average?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "WITH category_avg AS (\n    SELECT category_id, AVG(unit_price) AS avg_price\n    FROM products\n    GROUP BY category_id\n),\ncategory_product_counts AS (\n    SELECT p.category_id, COUNT(*) AS total_products, \n           SUM(CASE WHEN p.unit_price > ca.avg_price THEN 1 ELSE 0 END) AS above_avg_products\n    FROM products p\n    JOIN category_avg ca ON p.category_id = ca.category_id\n    GROUP BY p.category_id\n)\nSELECT c.category_name, \n       ROUND(100.0 * cpc.above_avg_products / cpc.total_products, 2) AS pct_above_avg\nFROM category_product_counts cpc\nJOIN categories c ON cpc.category_id = c.category_id\nORDER BY pct_above_avg DESC;"}
{"Question": "What is the distribution of product prices within each category?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_name,\n       MIN(p.unit_price) AS min_price,\n       MAX(p.unit_price) AS max_price,\n       PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY p.unit_price) AS q1,\n       PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY p.unit_price) AS median,\n       PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY p.unit_price) AS q3\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nGROUP BY c.category_name\nORDER BY c.category_name;"}
{"Question": "Which categories have the most variability in their product prices?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_name,\n       ROUND(STDDEV(p.unit_price), 2) AS price_stddev\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nGROUP BY c.category_name\nORDER BY price_stddev DESC;"}
{"Question": "What are the top 5 categories with the highest average product price?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_name, AVG(p.unit_price) as avg_price\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nGROUP BY c.category_id\nORDER BY avg_price DESC\nLIMIT 5;"}
{"Question": "Which categories have an average product price above the overall average?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "WITH overall_avg AS (\n  SELECT AVG(unit_price) AS overall_avg\n  FROM products\n)\nSELECT c.category_name, AVG(p.unit_price) AS avg_price\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nGROUP BY c.category_id\nHAVING AVG(p.unit_price) > (SELECT overall_avg FROM overall_avg);"}
{"Question": "What are the categories with the most and least number of products?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "WITH category_product_counts AS (\n  SELECT c.category_id, c.category_name, COUNT(p.product_id) AS product_count\n  FROM categories c\n  LEFT JOIN products p ON c.category_id = p.category_id\n  GROUP BY c.category_id\n)\nSELECT \n  (SELECT category_name FROM category_product_counts ORDER BY product_count DESC LIMIT 1) AS max_products_category,\n  (SELECT category_name FROM category_product_counts ORDER BY product_count ASC LIMIT 1) AS min_products_category\nFROM category_product_counts\nLIMIT 1;"}
{"Question": "Which categories have the highest and lowest total product inventory?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "WITH category_inventory AS (\n  SELECT c.category_name, SUM(p.units_in_stock + p.units_on_order) AS total_inventory\n  FROM categories c\n  JOIN products p ON c.category_id = p.category_id\n  GROUP BY c.category_name\n)\nSELECT \n  (SELECT category_name FROM category_inventory ORDER BY total_inventory DESC LIMIT 1) AS max_inventory_category,\n  (SELECT category_name FROM category_inventory ORDER BY total_inventory ASC LIMIT 1) AS min_inventory_category\nFROM category_inventory\nLIMIT 1;"}
{"Question": "What is the average product price for each category, and how many categories have an average price above the overall average?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "WITH category_avg_price AS (\n  SELECT c.category_name, AVG(p.unit_price) AS avg_price\n  FROM categories c\n  JOIN products p ON c.category_id = p.category_id\n  GROUP BY c.category_name\n),\noverall_avg AS (\n  SELECT AVG(unit_price) AS overall_avg\n  FROM products\n)\nSELECT \n  (SELECT COUNT(*) FROM category_avg_price WHERE avg_price > (SELECT overall_avg FROM overall_avg)) AS num_above_avg,\n  category_avg_price.*\nFROM category_avg_price;"}
{"Question": "Which categories have the highest and lowest percentage of discontinued products?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "WITH category_discontinued_pct AS (\n  SELECT c.category_name, \n         ROUND(SUM(CASE WHEN p.discontinued = 1 THEN 1 ELSE 0 END) * 1.0 / COUNT(p.product_id), 2) AS discontinued_pct\n  FROM categories c\n  JOIN products p ON c.category_id = p.category_id\n  GROUP BY c.category_name\n)\nSELECT\n  (SELECT category_name FROM category_discontinued_pct ORDER BY discontinued_pct DESC LIMIT 1) AS max_discontinued_category,\n  (SELECT category_name FROM category_discontinued_pct ORDER BY discontinued_pct ASC LIMIT 1) AS min_discontinued_category\nFROM category_discontinued_pct\nLIMIT 1;"}
{"Question": "What is the distribution of customer types in the database?", "Context": "CREATE TABLE customer_demographics (\n    customer_type_id bpchar NOT NULL PRIMARY KEY,\n    customer_desc text\n);\n\nCREATE TABLE customer_customer_demo (\n    customer_id bpchar NOT NULL,\n    customer_type_id bpchar NOT NULL,\n    PRIMARY KEY (customer_id, customer_type_id),\n    FOREIGN KEY (customer_type_id) REFERENCES customer_demographics,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT cd.customer_desc, COUNT(*) AS customer_count\nFROM customer_customer_demo ccd\nJOIN customer_demographics cd ON ccd.customer_type_id = cd.customer_type_id\nGROUP BY cd.customer_desc\nORDER BY customer_count DESC;"}
{"Question": "Which regions have the most customers?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);", "Query": "SELECT region, COUNT(*) AS customer_count\nFROM customers\nGROUP BY region\nORDER BY customer_count DESC;"}
{"Question": "What are the top 5 most expensive products by unit price?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT product_name, unit_price\nFROM products\nORDER BY unit_price DESC\nLIMIT 5;"}
{"Question": "What is the average unit price for products in each category?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);", "Query": "SELECT c.category_name, AVG(p.unit_price) AS avg_unit_price\nFROM products p\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_name;"}
{"Question": "What are the top 5 products by total order quantity?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT p.product_name, SUM(od.quantity) as total_quantity\nFROM order_details od\nJOIN products p ON od.product_id = p.product_id\nGROUP BY p.product_name\nORDER BY total_quantity DESC\nLIMIT 5;"}
{"Question": "Which customers have placed the most orders in the last 6 months?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name, COUNT(o.order_id) as order_count\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nWHERE o.order_date >= DATE_TRUNC('month', CURRENT_DATE - INTERVAL 6 MONTH)\nGROUP BY c.company_name\nORDER BY order_count DESC\nLIMIT 5;"}
{"Question": "What are the top 5 categories by total order value?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_name, SUM(od.quantity * od.unit_price) as total_order_value\nFROM order_details od\nJOIN products p ON od.product_id = p.product_id\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_name\nORDER BY total_order_value DESC\nLIMIT 5;"}
{"Question": "Which employees have the highest total order value for their customers?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT e.first_name, e.last_name, SUM(od.quantity * od.unit_price) as total_order_value\nFROM order_details od\nJOIN orders o ON od.order_id = o.order_id\nJOIN employees e ON o.employee_id = e.employee_id\nGROUP BY e.employee_id, e.first_name, e.last_name\nORDER BY total_order_value DESC\nLIMIT 5;"}
{"Question": "Which customers have the highest average order value?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.company_name, AVG(od.quantity * od.unit_price) as avg_order_value\nFROM order_details od\nJOIN orders o ON od.order_id = o.order_id\nJOIN customers c ON o.customer_id = c.customer_id\nGROUP BY c.company_name\nORDER BY avg_order_value DESC\nLIMIT 5;"}
{"Question": "What is the total freight cost for all orders?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT SUM(freight) AS total_freight_cost\nFROM orders;"}
{"Question": "What is the average freight cost per order for each customer?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);", "Query": "SELECT c.customer_id, AVG(o.freight) AS avg_freight_cost\nFROM orders o\nJOIN customers c ON o.customer_id = c.customer_id\nGROUP BY c.customer_id;"}
{"Question": "List all employees and the regions they are responsible for.", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (territory_id) REFERENCES territories,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE region (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_description bpchar NOT NULL\n);", "Query": "SELECT e.first_name, e.last_name, r.region_description\nFROM employees e\nJOIN employee_territories et ON e.employee_id = et.employee_id\nJOIN territories t ON et.territory_id = t.territory_id\nJOIN region r ON t.region_id = r.region_id\nGROUP BY e.first_name, e.last_name, r.region_description;"}
{"Question": "Find the top 5 employees with the most orders processed.", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(o.order_id) AS total_orders\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nGROUP BY e.first_name, e.last_name\nORDER BY total_orders DESC\nLIMIT 5;"}
{"Question": "Which category has the highest average product price?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_name, AVG(p.unit_price) AS avg_price\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nGROUP BY c.category_name\nORDER BY avg_price DESC\nLIMIT 1;"}
{"Question": "Which category has the highest total value of products in stock?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_name, SUM(p.unit_price * p.units_in_stock) AS total_value\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nGROUP BY c.category_name\nORDER BY total_value DESC\nLIMIT 1;"}
{"Question": "What is the total value of inventory for each product category?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_name, SUM(p.unit_price * p.units_in_stock) AS total_inventory_value\nFROM products p\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_name;"}
{"Question": "Which suppliers have the highest total inventory value across their products?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT s.company_name, SUM(p.unit_price * p.units_in_stock) AS total_inventory_value\nFROM products p\nJOIN suppliers s ON p.supplier_id = s.supplier_id\nGROUP BY s.company_name\nORDER BY total_inventory_value DESC\nLIMIT 5;"}
{"Question": "What are the top 5 suppliers by total orders placed?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT s.company_name, COUNT(od.order_id) AS total_orders\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nJOIN order_details od ON p.product_id = od.product_id\nJOIN orders o ON od.order_id = o.order_id\nGROUP BY s.company_name\nORDER BY total_orders DESC\nLIMIT 5;"}
{"Question": "What are the top 3 countries by total supplier revenue?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT s.country, SUM(od.unit_price * od.quantity) AS total_revenue\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY s.country\nORDER BY total_revenue DESC\nLIMIT 3;"}
{"Question": "What is the average price of products in each category?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_name, AVG(p.unit_price) AS avg_price\nFROM products p\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_name\nORDER BY avg_price DESC;"}
{"Question": "Which suppliers provide the most expensive products?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT s.company_name, MAX(p.unit_price) AS max_price\nFROM products p\nJOIN suppliers s ON p.supplier_id = s.supplier_id\nGROUP BY s.company_name\nORDER BY max_price DESC\nLIMIT 3;"}
{"Question": "What are the top 5 countries by total order value?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT ship_country, SUM(freight + (od.unit_price * od.quantity * (1 - od.discount))) AS total_order_value\nFROM orders o\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY ship_country\nORDER BY total_order_value DESC\nLIMIT 5;"}
{"Question": "Which employees have the highest total order value for their shipped orders?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT e.first_name, e.last_name, SUM(od.unit_price * od.quantity * (1 - od.discount) + o.freight) AS total_order_value\nFROM orders o\nJOIN order_details od ON o.order_id = od.order_id\nJOIN employees e ON o.employee_id = e.employee_id\nWHERE o.shipped_date IS NOT NULL\nGROUP BY e.employee_id\nORDER BY total_order_value DESC\nLIMIT 5;"}
{"Question": "What are the job titles of employees who report directly to the CEO?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT title \nFROM employees\nWHERE reports_to IS NULL;"}
{"Question": "Which employees have been with the company the longest among those who report directly to the CEO?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT first_name, last_name, hire_date\nFROM employees\nWHERE reports_to IS NULL\nORDER BY hire_date ASC\nLIMIT 1;"}
{"Question": "Which products have the highest units on order?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT product_name, units_on_order \nFROM products\nORDER BY units_on_order DESC\nLIMIT 5;"}
{"Question": "Which suppliers provide products that are below their reorder level?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);", "Query": "SELECT s.company_name, p.product_name\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nWHERE p.units_in_stock < p.reorder_level\nGROUP BY s.company_name, p.product_name\nORDER BY s.company_name;"}
{"Question": "Which employees have territories in the most regions?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (territory_id) REFERENCES territories,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE region (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_description bpchar NOT NULL\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(DISTINCT r.region_id) AS region_count\nFROM employees e\nJOIN employee_territories et ON e.employee_id = et.employee_id\nJOIN territories t ON et.territory_id = t.territory_id\nJOIN region r ON t.region_id = r.region_id\nGROUP BY e.employee_id\nORDER BY region_count DESC\nLIMIT 5;"}
{"Question": "Which employees have territories in the most different countries?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL,\n    country character varying(15) NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (territory_id) REFERENCES territories,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE region (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_description bpchar NOT NULL\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(DISTINCT t.country) AS country_count\nFROM employees e\nJOIN employee_territories et ON e.employee_id = et.employee_id\nJOIN territories t ON et.territory_id = t.territory_id\nGROUP BY e.employee_id\nORDER BY country_count DESC\nLIMIT 5;"}
{"Question": "List the top 5 categories with the highest number of products and the total number of products in each of those categories.", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_name, COUNT(p.product_id) as product_count\nFROM categories c\nLEFT JOIN products p ON c.category_id = p.category_id\nGROUP BY c.category_name\nORDER BY product_count DESC\nLIMIT 5;"}
{"Question": "Find the categories that have more than 10 products and the average price of products in those categories.", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_name, AVG(p.unit_price) as avg_price\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nGROUP BY c.category_name\nHAVING COUNT(p.product_id) > 10\nORDER BY avg_price DESC;"}
{"Question": "What is the average number of days between order date and required date for each customer?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.customer_id, AVG(o.required_date - o.order_date) AS avg_days_to_required\nFROM orders o\nJOIN customers c ON o.customer_id = c.customer_id\nGROUP BY c.customer_id;"}
{"Question": "What is the average number of days between order date and ship date for each product category?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    category_id smallint,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    product_id smallint,\n    order_date date,\n    shipped_date date,\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT c.category_name, AVG(o.shipped_date - o.order_date) AS avg_days_to_ship\nFROM orders o\nJOIN products p ON o.product_id = p.product_id\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_name;"}
{"Question": "Which employees have the highest total order count?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(o.order_id) as total_orders\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nGROUP BY e.employee_id\nORDER BY total_orders DESC\nLIMIT 3;"}
{"Question": "Which employees have the highest average order value?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT e.first_name, e.last_name, AVG(od.unit_price * od.quantity * (1 - od.discount)) as avg_order_value\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY e.employee_id\nORDER BY avg_order_value DESC\nLIMIT 3;"}
{"Question": "What are the top 5 customers who have placed the most orders?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name, COUNT(o.order_id) AS total_orders\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.company_name\nORDER BY total_orders DESC\nLIMIT 5;"}
{"Question": "Which customers have placed orders in the last 30 days?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nWHERE o.order_date >= DATE_TRUNC('day', CURRENT_DATE) - INTERVAL 30 DAY\nGROUP BY c.company_name;"}
{"Question": "What is the most common ship country for orders?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT ship_country, COUNT(*) as order_count\nFROM orders\nGROUP BY ship_country\nORDER BY order_count DESC\nLIMIT 1;"}
{"Question": "Which shippers have the highest average freight cost per order?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE shippers (\n    shipper_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    phone character varying(24)\n);", "Query": "SELECT s.company_name, AVG(o.freight) as avg_freight\nFROM orders o\nJOIN shippers s ON o.ship_via = s.shipper_id\nGROUP BY s.shipper_id\nORDER BY avg_freight DESC\nLIMIT 3;"}
{"Question": "What are the top 5 best-selling products by total units sold?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT p.product_name, SUM(od.quantity) as total_units_sold\nFROM products p\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_name\nORDER BY total_units_sold DESC\nLIMIT 5;"}
{"Question": "Which suppliers have products in multiple categories?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);", "Query": "SELECT s.company_name, COUNT(DISTINCT p.category_id) as num_categories\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nGROUP BY s.company_name\nHAVING COUNT(DISTINCT p.category_id) > 1\nORDER BY num_categories DESC;"}
{"Question": "What is the total number of unique products offered by suppliers in a specific country?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT COUNT(DISTINCT p.product_id)\nFROM products p\nJOIN suppliers s ON p.supplier_id = s.supplier_id\nWHERE s.country = 'USA';"}
{"Question": "What is the total number of unique products ordered by customers in a specific region?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT COUNT(DISTINCT od.product_id)\nFROM order_details od\nJOIN orders o ON od.order_id = o.order_id\nJOIN customers c ON o.customer_id = c.customer_id\nWHERE c.region = 'Western';"}
{"Question": "Which customer has placed the most orders?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name, COUNT(o.order_id) as total_orders\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_id\nORDER BY total_orders DESC\nLIMIT 1;"}
{"Question": "Which product category has the highest average unit price?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_name, AVG(p.unit_price) as avg_unit_price\nFROM products p\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_id\nORDER BY avg_unit_price DESC\nLIMIT 1;"}
{"Question": "Which employees have the most direct reports?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT e1.first_name || ' ' || e1.last_name as employee, COUNT(e2.employee_id) as direct_reports\nFROM employees e1\nLEFT JOIN employees e2 ON e1.employee_id = e2.reports_to\nGROUP BY e1.employee_id\nORDER BY direct_reports DESC\nLIMIT 5;"}
{"Question": "What are the job titles of employees who have never placed an order?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (employee_id) REFERENCES employees\n);", "Query": "SELECT e.title\nFROM employees e\nLEFT JOIN orders o ON e.employee_id = o.employee_id\nWHERE o.employee_id IS NULL\nGROUP BY e.title;"}
{"Question": "What is the average discount applied to orders for each product?", "Context": "CREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT p.product_name, AVG(od.discount) * 100 AS avg_discount_percentage\nFROM order_details od\nJOIN products p ON od.product_id = p.product_id\nGROUP BY p.product_name\nORDER BY avg_discount_percentage DESC;"}
{"Question": "What is the average discount applied to orders for each customer type?", "Context": "CREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE customer_customer_demo (\n    customer_id bpchar NOT NULL,\n    customer_type_id bpchar NOT NULL,\n    PRIMARY KEY (customer_id, customer_type_id),\n    FOREIGN KEY (customer_type_id) REFERENCES customer_demographics,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE customer_demographics (\n    customer_type_id bpchar NOT NULL PRIMARY KEY,\n    customer_desc text\n);", "Query": "SELECT cd.customer_desc, AVG(od.discount) * 100 AS avg_discount_percentage\nFROM order_details od\nJOIN orders o ON od.order_id = o.order_id\nJOIN customer_customer_demo ccd ON o.customer_id = ccd.customer_id\nJOIN customer_demographics cd ON ccd.customer_type_id = cd.customer_type_id\nGROUP BY cd.customer_desc\nORDER BY avg_discount_percentage DESC;"}
{"Question": "What are the top 5 best-selling products by total quantity ordered?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT p.product_name, SUM(od.quantity) AS total_quantity\nFROM products p\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_name\nORDER BY total_quantity DESC\nLIMIT 5;"}
{"Question": "Which products have been discontinued but still have units in stock?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT product_name, units_in_stock\nFROM products\nWHERE discontinued = 1 AND units_in_stock > 0;"}
{"Question": "Which region has the most customers?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);", "Query": "SELECT c.region, COUNT(c.customer_id) AS customer_count\nFROM customers c\nGROUP BY c.region\nORDER BY customer_count DESC\nLIMIT 1;"}
{"Question": "Which region has the highest total order value?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.region, SUM(o.freight) AS total_order_value\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.region\nORDER BY total_order_value DESC\nLIMIT 1;"}
{"Question": "What is the total freight cost for each shipper, broken down by customer region?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE shippers (\n    shipper_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    phone character varying(24)\n);", "Query": "SELECT s.company_name, c.region, SUM(o.freight) as total_freight\nFROM orders o\nJOIN shippers s ON o.ship_via = s.shipper_id\nJOIN customers c ON o.customer_id = c.customer_id\nGROUP BY s.shipper_id, c.region\nORDER BY s.company_name, c.region;"}
{"Question": "Which shippers have the highest and lowest average freight costs per order?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE shippers (\n    shipper_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    phone character varying(24)\n);", "Query": "WITH shipper_avg_freight AS (\n  SELECT \n    s.company_name,\n    AVG(o.freight) AS avg_freight\n  FROM orders o\n  JOIN shippers s ON o.ship_via = s.shipper_id\n  GROUP BY s.company_name\n)\nSELECT \n  company_name,\n  avg_freight\nFROM shipper_avg_freight\nORDER BY avg_freight DESC\nLIMIT 1;\n\nWITH shipper_avg_freight AS (\n  SELECT \n    s.company_name,\n    AVG(o.freight) AS avg_freight\n  FROM orders o\n  JOIN shippers s ON o.ship_via = s.shipper_id\n  GROUP BY s.company_name\n)\nSELECT \n  company_name,\n  avg_freight\nFROM shipper_avg_freight\nORDER BY avg_freight ASC\nLIMIT 1;"}
{"Question": "Which customers have ordered products from the most number of unique categories?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    category_id smallint,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.company_name, COUNT(DISTINCT p.category_id) AS num_unique_categories\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nGROUP BY c.company_name\nORDER BY num_unique_categories DESC\nLIMIT 10;"}
{"Question": "What are the top 10 most popular products (by total quantity ordered) in each category?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT c.category_name, p.product_name, SUM(od.quantity) AS total_quantity\nFROM order_details od\nJOIN products p ON od.product_id = p.product_id\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_name, p.product_name\nORDER BY c.category_name, total_quantity DESC\nPARTITION BY c.category_name\nLIMIT 10;"}
{"Question": "What is the average order value for the most popular product?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customer_demographics (\n    customer_type_id bpchar NOT NULL PRIMARY KEY,\n    customer_desc text\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE customer_customer_demo (\n    customer_id bpchar NOT NULL,\n    customer_type_id bpchar NOT NULL,\n    PRIMARY KEY (customer_id, customer_type_id),\n    FOREIGN KEY (customer_type_id) REFERENCES customer_demographics,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE region (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_description bpchar NOT NULL\n);\n\nCREATE TABLE shippers (\n    shipper_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    phone character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (territory_id) REFERENCES territories,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE us_states (\n    state_id smallint NOT NULL PRIMARY KEY,\n    state_name character varying(100),\n    state_abbr character varying(2),\n    state_region character varying(50)\n);", "Query": "SELECT p.product_name, AVG(od.unit_price * od.quantity) AS avg_order_value\nFROM products p\nJOIN order_details od ON p.product_id = od.product_id\nJOIN (\n  SELECT product_id, COUNT(order_id) AS order_count\n  FROM order_details\n  GROUP BY product_id\n  ORDER BY order_count DESC\n  LIMIT 1\n) top_product ON p.product_id = top_product.product_id\nGROUP BY p.product_name;"}
{"Question": "What is the total revenue generated by the most popular product?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customer_demographics (\n    customer_type_id bpchar NOT NULL PRIMARY KEY,\n    customer_desc text\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE customer_customer_demo (\n    customer_id bpchar NOT NULL,\n    customer_type_id bpchar NOT NULL,\n    PRIMARY KEY (customer_id, customer_type_id),\n    FOREIGN KEY (customer_type_id) REFERENCES customer_demographics,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE region (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_description bpchar NOT NULL\n);\n\nCREATE TABLE shippers (\n    shipper_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    phone character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (territory_id) REFERENCES territories,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE us_states (\n    state_id smallint NOT NULL PRIMARY KEY,\n    state_name character varying(100),\n    state_abbr character varying(2),\n    state_region character varying(50)\n);", "Query": "SELECT p.product_name, SUM(od.unit_price * od.quantity) AS total_revenue\nFROM products p\nJOIN order_details od ON p.product_id = od.product_id\nJOIN (\n  SELECT product_id, COUNT(order_id) AS order_count\n  FROM order_details\n  GROUP BY product_id\n  ORDER BY order_count DESC\n  LIMIT 1\n) top_product ON p.product_id = top_product.product_id\nGROUP BY p.product_name;"}
{"Question": "Which employees have not been assigned to any territories?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    -- other employee details\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (territory_id) REFERENCES territories,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);", "Query": "SELECT e.first_name, e.last_name\nFROM employees e\nWHERE e.employee_id NOT IN (\n    SELECT employee_id\n    FROM employee_territories\n);"}
{"Question": "Which employees have not been assigned to any regions?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    -- other employee details\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (territory_id) REFERENCES territories,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);", "Query": "SELECT e.first_name, e.last_name\nFROM employees e\nWHERE e.employee_id NOT IN (\n    SELECT et.employee_id\n    FROM employee_territories et\n    INNER JOIN territories t ON et.territory_id = t.territory_id\n);"}
{"Question": "What is the total number of products ordered across all orders?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    quantity smallint NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT SUM(od.quantity) AS total_products_ordered\nFROM order_details od\nJOIN orders o ON od.order_id = o.order_id;"}
{"Question": "What is the average number of orders per customer?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT AVG(order_count) AS avg_orders_per_customer\nFROM (\n  SELECT customer_id, COUNT(order_id) AS order_count\n  FROM orders\n  GROUP BY customer_id\n) AS subquery;"}
{"Question": "Which customers have placed orders for the most unique categories of products?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    category_id smallint,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.company_name, COUNT(DISTINCT p.category_id) AS unique_categories\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nGROUP BY c.customer_id\nORDER BY unique_categories DESC\nLIMIT 1;"}
{"Question": "Which customers have placed the most orders for discontinued products?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    discontinued integer NOT NULL\n);", "Query": "SELECT c.company_name, COUNT(*) AS discontinued_orders\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nWHERE p.discontinued = 1\nGROUP BY c.customer_id\nORDER BY discontinued_orders DESC\nLIMIT 1;"}
{"Question": "Which suppliers have the highest number of products in their portfolio?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT s.company_name, COUNT(p.product_id) as product_count\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nGROUP BY s.supplier_id\nORDER BY product_count DESC\nLIMIT 5;"}
{"Question": "What are the top 5 most popular product categories based on the number of products they contain?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT c.category_name, COUNT(p.product_id) as product_count\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nGROUP BY c.category_id\nORDER BY product_count DESC\nLIMIT 5;"}
{"Question": "What are the top 5 best-selling products in each category?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT c.category_name, p.product_name, SUM(od.quantity) as total_sold\nFROM products p\nJOIN categories c ON p.category_id = c.category_id\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY c.category_name, p.product_name\nORDER BY c.category_name, total_sold DESC\nLIMIT 5 PER GROUP;"}
{"Question": "What are the total sales and profit for each customer type?", "Context": "CREATE TABLE customer_demographics (\n    customer_type_id bpchar NOT NULL PRIMARY KEY,\n    customer_desc text\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE customer_customer_demo (\n    customer_id bpchar NOT NULL,\n    customer_type_id bpchar NOT NULL,\n    PRIMARY KEY (customer_id, customer_type_id),\n    FOREIGN KEY (customer_type_id) REFERENCES customer_demographics,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT cd.customer_desc, \n       SUM(od.unit_price * od.quantity * (1 - od.discount)) AS total_sales,\n       SUM(od.unit_price * od.quantity * (1 - od.discount) - od.unit_price * od.quantity * od.discount) AS total_profit\nFROM order_details od\nJOIN orders o ON od.order_id = o.order_id\nJOIN customer_customer_demo ccd ON o.customer_id = ccd.customer_id\nJOIN customer_demographics cd ON ccd.customer_type_id = cd.customer_type_id\nGROUP BY cd.customer_desc;"}
{"Question": "What are the most expensive products ordered by customers in each region?", "Context": "CREATE TABLE regions (\n    region_id SMALLINT PRIMARY KEY,\n    region_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    customer_id CHAR(5) PRIMARY KEY,\n    company_name VARCHAR(40) NOT NULL,\n    region_id SMALLINT NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES regions(region_id)\n);\n\nCREATE TABLE orders (\n    order_id SMALLINT PRIMARY KEY,\n    customer_id CHAR(5) NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE order_details (\n    order_id SMALLINT NOT NULL,\n    product_id SMALLINT NOT NULL,\n    unit_price REAL NOT NULL,\n    quantity SMALLINT NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id)\n);\n\nCREATE TABLE products (\n    product_id SMALLINT PRIMARY KEY,\n    product_name VARCHAR(40) NOT NULL,\n    unit_price REAL NOT NULL\n);", "Query": "SELECT r.region_name, p.product_name, p.unit_price\nFROM regions r\nJOIN customers c ON r.region_id = c.region_id\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nWHERE od.unit_price = (\n  SELECT MAX(unit_price)\n  FROM order_details od2\n  JOIN products p2 ON od2.product_id = p2.product_id\n  WHERE od2.order_id = od.order_id\n)\nGROUP BY r.region_name, p.product_name, p.unit_price;"}
{"Question": "Which customers have ordered the most expensive products from each supplier?", "Context": "CREATE TABLE suppliers (\n    supplier_id SMALLINT PRIMARY KEY,\n    supplier_name VARCHAR(40) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SMALLINT PRIMARY KEY,\n    product_name VARCHAR(40) NOT NULL,\n    supplier_id SMALLINT NOT NULL,\n    unit_price REAL NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\nCREATE TABLE orders (\n    order_id SMALLINT PRIMARY KEY,\n    customer_id CHAR(5) NOT NULL\n);\n\nCREATE TABLE order_details (\n    order_id SMALLINT NOT NULL,\n    product_id SMALLINT NOT NULL,\n    quantity SMALLINT NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders(order_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nCREATE TABLE customers (\n    customer_id CHAR(5) PRIMARY KEY,\n    customer_name VARCHAR(40) NOT NULL\n);", "Query": "SELECT c.customer_name, s.supplier_name, p.product_name, p.unit_price\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nJOIN suppliers s ON p.supplier_id = s.supplier_id\nWHERE (p.supplier_id, p.unit_price) IN (\n  SELECT p.supplier_id, MAX(p.unit_price)\n  FROM products p\n  GROUP BY p.supplier_id\n)\nGROUP BY c.customer_name, s.supplier_name, p.product_name, p.unit_price;"}
{"Question": "Which employees have processed the most orders in each region?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (territory_id) REFERENCES territories,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);", "Query": "SELECT e.first_name, e.last_name, r.region_description, COUNT(o.order_id) as order_count\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN employee_territories et ON e.employee_id = et.employee_id\nJOIN territories t ON et.territory_id = t.territory_id\nJOIN region r ON t.region_id = r.region_id\nGROUP BY e.employee_id, r.region_description\nORDER BY r.region_description, order_count DESC;"}
{"Question": "Which employees have processed the most orders for each product category?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);", "Query": "SELECT e.first_name, e.last_name, c.category_name, COUNT(od.order_id) as order_count\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY e.employee_id, c.category_name\nORDER BY c.category_name, order_count DESC;"}
{"Question": "What is the total revenue generated from each product category?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT c.category_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) AS total_revenue\nFROM order_details od\nJOIN products p ON od.product_id = p.product_id\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_name;"}
{"Question": "Which customers have the highest average order value?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.customer_id, c.company_name, AVG(od.unit_price * od.quantity * (1 - od.discount)) AS avg_order_value\nFROM orders o\nJOIN order_details od ON o.order_id = od.order_id\nJOIN customers c ON o.customer_id = c.customer_id\nGROUP BY c.customer_id, c.company_name\nORDER BY avg_order_value DESC\nLIMIT 10;"}
{"Question": "What are the top 5 best-selling products by total ordered quantity?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT p.product_name, SUM(od.quantity) as total_ordered\nFROM products p\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_id\nORDER BY total_ordered DESC\nLIMIT 5;"}
{"Question": "Which product categories have the highest total ordered quantities?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.category_name, SUM(od.quantity) as total_ordered\nFROM order_details od\nJOIN products p ON od.product_id = p.product_id\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_id\nORDER BY total_ordered DESC;"}
{"Question": "Which customers have placed orders on the most consecutive dates?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name, COUNT(DISTINCT o.order_date) as consecutive_order_dates\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_id\nORDER BY consecutive_order_dates DESC\nLIMIT 1;"}
{"Question": "Which customers have placed orders on the most unique dates across all their orders?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name, COUNT(DISTINCT o.order_date) as unique_order_dates\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_id\nORDER BY unique_order_dates DESC\nLIMIT 1;"}
{"Question": "What is the most common ship region across all orders?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT ship_region, COUNT(*) as shipment_count\nFROM orders\nGROUP BY ship_region\nORDER BY shipment_count DESC\nLIMIT 1;"}
{"Question": "Which country has the highest number of customers?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);", "Query": "SELECT country, COUNT(*) as customer_count\nFROM customers\nGROUP BY country\nORDER BY customer_count DESC\nLIMIT 1;"}
{"Question": "List the top 5 categories with the highest average product price.", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_name, AVG(p.unit_price) as avg_price\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nGROUP BY c.category_id\nORDER BY avg_price DESC\nLIMIT 5;"}
{"Question": "Find the categories that have at least 10 products with a unit price greater than $50.", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_name\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nWHERE p.unit_price > 50\nGROUP BY c.category_id\nHAVING COUNT(p.product_id) >= 10\nORDER BY c.category_name;"}
{"Question": "Which employees have territories in regions that are not covered by any other employee?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (territory_id) REFERENCES territories,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE region (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_description bpchar NOT NULL\n);", "Query": "SELECT e.first_name, e.last_name\nFROM employees e\nJOIN employee_territories et ON e.employee_id = et.employee_id\nJOIN territories t ON et.territory_id = t.territory_id\nWHERE t.region_id NOT IN (\n    SELECT region_id\n    FROM employee_territories et2\n    JOIN territories t2 ON et2.territory_id = t2.territory_id\n    WHERE et2.employee_id <> e.employee_id\n)\nGROUP BY e.employee_id\nHAVING COUNT(DISTINCT t.region_id) = 1;"}
{"Question": "What are the top 3 regions with the most employees assigned to them?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (territory_id) REFERENCES territories,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE region (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_description bpchar NOT NULL\n);", "Query": "SELECT r.region_description, COUNT(et.employee_id) AS employee_count\nFROM region r\nJOIN territories t ON r.region_id = t.region_id\nJOIN employee_territories et ON t.territory_id = et.territory_id\nGROUP BY r.region_id\nORDER BY employee_count DESC\nLIMIT 3;"}
{"Question": "What is the total discount amount given to customers by region?", "Context": "CREATE TABLE regions (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT r.region_name, SUM(od.unit_price * od.quantity * od.discount) AS total_discount\nFROM order_details od\nJOIN orders o ON od.order_id = o.order_id\nJOIN regions r ON o.ship_region = r.region_name\nGROUP BY r.region_name;"}
{"Question": "What is the total discount amount given to customers by product category?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    category_id smallint,\n    unit_price real,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT c.category_name, SUM(od.unit_price * od.quantity * od.discount) AS total_discount\nFROM order_details od\nJOIN products p ON od.product_id = p.product_id\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_name;"}
{"Question": "What are the best-selling products that are still in stock?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT p.product_name, SUM(od.quantity) AS total_sold\nFROM products p\nJOIN order_details od ON p.product_id = od.product_id\nWHERE p.discontinued = 0 AND p.units_in_stock > 0\nGROUP BY p.product_name\nORDER BY total_sold DESC\nLIMIT 10;"}
{"Question": "Which suppliers have the most discontinued products?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);", "Query": "SELECT s.company_name, COUNT(p.product_id) AS discontinued_products\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nWHERE p.discontinued = 1\nGROUP BY s.company_name\nORDER BY discontinued_products DESC\nLIMIT 5;"}
{"Question": "Which customers have the highest total order value across all their orders?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.company_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_order_value\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY c.customer_id\nORDER BY total_order_value DESC\nLIMIT 1;"}
{"Question": "Which customers have the highest number of orders that were shipped late (shipped_date > required_date)?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name, COUNT(*) as late_orders\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nWHERE o.shipped_date > o.required_date\nGROUP BY c.customer_id\nORDER BY late_orders DESC\nLIMIT 1;"}
{"Question": "What is the total value of the inventory based on the current unit prices?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT SUM(units_in_stock * unit_price) AS total_inventory_value\nFROM products;"}
{"Question": "Which product categories have the highest total inventory value?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);", "Query": "SELECT c.category_name, SUM(p.units_in_stock * p.unit_price) AS total_inventory_value\nFROM products p\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_name\nORDER BY total_inventory_value DESC;"}
{"Question": "What are the top 5 products ordered by customers from Germany?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    country character varying(15)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    quantity smallint NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders,\n    FOREIGN KEY (product_id) REFERENCES products\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    category_id smallint,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT p.product_name, SUM(od.quantity) AS total_quantity\nFROM order_details od\nJOIN orders o ON od.order_id = o.order_id\nJOIN customers c ON o.customer_id = c.customer_id\nJOIN products p ON od.product_id = p.product_id\nWHERE c.country = 'Germany'\nGROUP BY p.product_name\nORDER BY total_quantity DESC\nLIMIT 5;"}
{"Question": "Which employees have the most orders from German customers?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    country character varying(15)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    first_name character varying(10) NOT NULL,\n    last_name character varying(20) NOT NULL\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(o.order_id) AS total_orders\nFROM orders o\nJOIN customers c ON o.customer_id = c.customer_id\nJOIN employees e ON o.employee_id = e.employee_id\nWHERE c.country = 'Germany'\nGROUP BY e.employee_id, e.first_name, e.last_name\nORDER BY total_orders DESC\nLIMIT 3;"}
{"Question": "What is the total revenue generated by each product category?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT c.category_name, SUM(od.quantity * od.unit_price) as total_revenue\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY c.category_name;"}
{"Question": "What are the top 3 best-selling products in each category?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "WITH top_products AS (\n  SELECT p.product_id, p.product_name, p.category_id, SUM(od.quantity) as total_sold,\n         ROW_NUMBER() OVER (PARTITION BY p.category_id ORDER BY SUM(od.quantity) DESC) as rn\n  FROM products p\n  JOIN order_details od ON p.product_id = od.product_id\n  GROUP BY p.product_id, p.product_name, p.category_id\n)\nSELECT category_name, product_name, total_sold\nFROM top_products tp\nJOIN categories c ON tp.category_id = c.category_id\nWHERE rn <= 3\nORDER BY category_name, total_sold DESC;"}
{"Question": "Which supplier has the highest total sales value across all their products?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT s.company_name, SUM(od.unit_price * od.quantity) AS total_sales\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY s.supplier_id\nORDER BY total_sales DESC\nLIMIT 1;"}
{"Question": "Which suppliers have products that have never been ordered?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT s.company_name\nFROM suppliers s\nLEFT JOIN products p ON s.supplier_id = p.supplier_id\nLEFT JOIN order_details od ON p.product_id = od.product_id\nWHERE od.product_id IS NULL\nGROUP BY s.supplier_id;"}
{"Question": "What are the top 5 best-selling products by total quantity ordered?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT p.product_name, SUM(od.quantity) as total_quantity\nFROM products p\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_name\nORDER BY total_quantity DESC\nLIMIT 5;"}
{"Question": "Which suppliers have products in multiple categories?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);", "Query": "SELECT s.company_name, COUNT(DISTINCT p.category_id) as num_categories\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nGROUP BY s.company_name\nHAVING COUNT(DISTINCT p.category_id) > 1\nORDER BY num_categories DESC;"}
{"Question": "What is the total revenue generated from each product category?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT c.category_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_revenue\nFROM order_details od\nJOIN products p ON od.product_id = p.product_id\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_name;"}
{"Question": "What is the total revenue generated from each customer type?", "Context": "CREATE TABLE customer_demographics (\n    customer_type_id bpchar NOT NULL PRIMARY KEY,\n    customer_desc text\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE customer_customer_demo (\n    customer_id bpchar NOT NULL,\n    customer_type_id bpchar NOT NULL,\n    PRIMARY KEY (customer_id, customer_type_id),\n    FOREIGN KEY (customer_type_id) REFERENCES customer_demographics,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT cd.customer_desc, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_revenue\nFROM order_details od\nJOIN orders o ON od.order_id = o.order_id\nJOIN customer_customer_demo ccd ON o.customer_id = ccd.customer_id\nJOIN customer_demographics cd ON ccd.customer_type_id = cd.customer_type_id\nGROUP BY cd.customer_desc;"}
{"Question": "Which employees have processed orders for the most unique products?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(DISTINCT od.product_id) AS unique_products\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY e.employee_id\nORDER BY unique_products DESC\nLIMIT 10;"}
{"Question": "Which employees have processed the highest total order value for their customers?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT e.first_name, e.last_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) AS total_order_value\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY e.employee_id\nORDER BY total_order_value DESC\nLIMIT 10;"}
{"Question": "Which products have the highest reorder levels?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT product_name, reorder_level\nFROM products\nORDER BY reorder_level DESC\nLIMIT 5;"}
{"Question": "Which suppliers have the most products that are out of stock?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);", "Query": "SELECT s.company_name, COUNT(p.product_id) AS out_of_stock_products\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nWHERE p.units_in_stock = 0\nGROUP BY s.company_name\nORDER BY out_of_stock_products DESC\nLIMIT 5;"}
{"Question": "What is the average shipping delay for each customer type?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customer_demographics (\n    customer_type_id bpchar NOT NULL PRIMARY KEY,\n    customer_desc text\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE customer_customer_demo (\n    customer_id bpchar NOT NULL,\n    customer_type_id bpchar NOT NULL,\n    PRIMARY KEY (customer_id, customer_type_id),\n    FOREIGN KEY (customer_type_id) REFERENCES customer_demographics,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.customer_desc, AVG(o.required_date - o.shipped_date) as avg_delay\nFROM orders o\nJOIN customer_customer_demo ccd ON o.customer_id = ccd.customer_id\nJOIN customer_demographics c ON ccd.customer_type_id = c.customer_type_id\nWHERE o.shipped_date IS NOT NULL\nGROUP BY c.customer_desc;"}
{"Question": "What is the average shipping delay for each region?", "Context": "CREATE TABLE region (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_description bpchar NOT NULL\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15)\n);", "Query": "SELECT r.region_description, AVG(o.required_date - o.shipped_date) as avg_delay\nFROM orders o\nJOIN territories t ON o.ship_region = t.territory_description\nJOIN region r ON t.region_id = r.region_id\nWHERE o.shipped_date IS NOT NULL\nGROUP BY r.region_description;"}
{"Question": "Which category has the highest total sales revenue?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15)\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.category_name, SUM(od.quantity * od.unit_price) as total_sales\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nJOIN order_details od ON p.product_id = od.product_id\nJOIN orders o ON od.order_id = o.order_id\nGROUP BY c.category_name\nORDER BY total_sales DESC\nLIMIT 1;"}
{"Question": "Which categories have the most products with unit prices above a certain threshold?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_name, COUNT(*) as num_high_price_products\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nWHERE p.unit_price > 50\nGROUP BY c.category_name\nORDER BY num_high_price_products DESC;"}
{"Question": "Which customers have placed orders for products in the 'Beverages' category that total more than $5,000?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    category_id smallint,\n    unit_price real,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.company_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_orders\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nWHERE p.category_id = (SELECT category_id FROM categories WHERE category_name = 'Beverages')\nGROUP BY c.customer_id\nHAVING SUM(od.unit_price * od.quantity * (1 - od.discount)) > 5000;"}
{"Question": "Which customers have placed orders for products that have been discontinued?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    discontinued integer NOT NULL\n);", "Query": "SELECT c.company_name\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nWHERE p.discontinued = 1\nGROUP BY c.customer_id;"}
{"Question": "What is the average quantity of products ordered per order?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT AVG(quantity) AS avg_quantity\nFROM order_details;"}
{"Question": "What is the total revenue generated from the most common product quantity ordered?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT SUM(od.unit_price * od.quantity) AS total_revenue\nFROM order_details od\nJOIN (\n  SELECT quantity, COUNT(*) AS frequency\n  FROM order_details\n  GROUP BY quantity\n  ORDER BY frequency DESC\n  LIMIT 1\n) most_common ON od.quantity = most_common.quantity;"}
{"Question": "Which employees have the most diverse set of territories they cover?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (territory_id) REFERENCES territories,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE region (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_description bpchar NOT NULL\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(DISTINCT t.region_id) AS num_regions\nFROM employees e\nJOIN employee_territories et ON e.employee_id = et.employee_id\nJOIN territories t ON et.territory_id = t.territory_id\nGROUP BY e.first_name, e.last_name\nORDER BY num_regions DESC\nLIMIT 5;"}
{"Question": "Which employees have the most territories in the most regions?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (territory_id) REFERENCES territories,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE region (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_description bpchar NOT NULL\n);", "Query": "WITH employee_regions AS (\n    SELECT e.employee_id, COUNT(DISTINCT t.region_id) AS num_regions\n    FROM employees e\n    JOIN employee_territories et ON e.employee_id = et.employee_id\n    JOIN territories t ON et.territory_id = t.territory_id\n    GROUP BY e.employee_id\n)\nSELECT e.first_name, e.last_name, er.num_regions, COUNT(et.territory_id) AS num_territories\nFROM employees e\nJOIN employee_regions er ON e.employee_id = er.employee_id\nJOIN employee_territories et ON e.employee_id = et.employee_id\nGROUP BY e.first_name, e.last_name, er.num_regions\nORDER BY num_regions DESC, num_territories DESC\nLIMIT 5;"}
{"Question": "List all products with unit prices in the top 20% of all product prices.", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT product_name, unit_price \nFROM products\nWHERE unit_price >= (\n  SELECT unit_price\n  FROM (\n    SELECT unit_price, NTILE(5) OVER (ORDER BY unit_price DESC) AS price_quintile\n    FROM products\n  ) AS price_tiers\n  WHERE price_quintile = 1\n);"}
{"Question": "Find the top 5 best-selling products by total revenue.", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT p.product_name, SUM(od.quantity * od.unit_price) AS total_revenue\nFROM products p\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_name\nORDER BY total_revenue DESC\nLIMIT 5;"}
{"Question": "What is the total value of all products currently on order?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT SUM(od.quantity * od.unit_price) AS total_value\nFROM order_details od\nJOIN products p ON od.product_id = p.product_id\nWHERE p.units_on_order > 0;"}
{"Question": "Which suppliers have the most products currently on order?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);", "Query": "SELECT s.company_name, SUM(p.units_on_order) AS total_units_on_order\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nGROUP BY s.company_name\nORDER BY total_units_on_order DESC\nLIMIT 3;"}
{"Question": "Which employees have processed orders for customers in multiple countries?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    country character varying(15) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    ship_country character varying(15),\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT e.first_name, e.last_name\nFROM employees e\nJOIN (\n  SELECT employee_id, COUNT(DISTINCT ship_country) AS country_count\n  FROM orders\n  GROUP BY employee_id\n  HAVING COUNT(DISTINCT ship_country) > 1\n) o ON e.employee_id = o.employee_id"}
{"Question": "Which employees have processed the most orders for customers in their own country?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    country character varying(15) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    ship_country character varying(15),\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(*) AS order_count\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nWHERE e.country = o.ship_country\nGROUP BY e.first_name, e.last_name\nORDER BY order_count DESC\nLIMIT 3;"}
{"Question": "What is the average number of days between order date and shipped date for each customer?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.customer_id, AVG(o.shipped_date - o.order_date) AS avg_days_to_ship\nFROM orders o\nJOIN customers c ON o.customer_id = c.customer_id\nGROUP BY c.customer_id;"}
{"Question": "What is the average number of days between order date and required date for each product category?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    category_id smallint,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    product_id smallint,\n    order_date date,\n    required_date date,\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT c.category_name, AVG(o.required_date - o.order_date) AS avg_days_to_required\nFROM orders o\nJOIN products p ON o.product_id = p.product_id\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_name;"}
{"Question": "Which product category has generated the most total revenue?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT c.category_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_revenue\nFROM order_details od\nJOIN products p ON od.product_id = p.product_id\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_id\nORDER BY total_revenue DESC\nLIMIT 1;"}
{"Question": "Which customer has placed the most orders with the highest total revenue?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.customer_id, c.company_name, COUNT(o.order_id) as total_orders, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_revenue\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY c.customer_id\nORDER BY total_revenue DESC, total_orders DESC\nLIMIT 1;"}
{"Question": "Which suppliers have products in the most diverse set of categories?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT s.company_name, COUNT(DISTINCT p.category_id) as num_categories\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nGROUP BY s.supplier_id\nORDER BY num_categories DESC\nLIMIT 3;"}
{"Question": "What are the top 3 suppliers that have the most products in the most popular categories?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "WITH popular_categories AS (\n  SELECT category_id, COUNT(*) as product_count\n  FROM products\n  GROUP BY category_id\n  ORDER BY product_count DESC\n  LIMIT 3\n)\nSELECT s.company_name, COUNT(*) as product_count\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nWHERE p.category_id IN (SELECT category_id FROM popular_categories)\nGROUP BY s.supplier_id\nORDER BY product_count DESC\nLIMIT 3;"}
{"Question": "What is the total revenue generated by each customer?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.company_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) AS total_revenue\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY c.company_name;"}
{"Question": "Which customers have placed orders in the last 6 months?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT c.company_name\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nWHERE o.order_date >= DATE_TRUNC('month', CURRENT_DATE - INTERVAL 6 MONTH)\nGROUP BY c.company_name;"}
{"Question": "Which employees have the highest number of orders processed?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customer_demographics (\n    customer_type_id bpchar NOT NULL PRIMARY KEY,\n    customer_desc text\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE customer_customer_demo (\n    customer_id bpchar NOT NULL,\n    customer_type_id bpchar NOT NULL,\n    PRIMARY KEY (customer_id, customer_type_id),\n    FOREIGN KEY (customer_type_id) REFERENCES customer_demographics,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(o.order_id) AS total_orders\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nGROUP BY e.first_name, e.last_name\nORDER BY total_orders DESC\nLIMIT 5;"}
{"Question": "Which employees have processed the most orders for a specific customer?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customer_demographics (\n    customer_type_id bpchar NOT NULL PRIMARY KEY,\n    customer_desc text\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE customer_customer_demo (\n    customer_id bpchar NOT NULL,\n    customer_type_id bpchar NOT NULL,\n    PRIMARY KEY (customer_id, customer_type_id),\n    FOREIGN KEY (customer_type_id) REFERENCES customer_demographics,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT e.first_name, e.last_name, c.company_name, COUNT(o.order_id) AS total_orders\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN customers c ON o.customer_id = c.customer_id\nGROUP BY e.first_name, e.last_name, c.company_name\nORDER BY total_orders DESC\nLIMIT 5;"}
{"Question": "Which products have the highest total revenue across all orders?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT p.product_name, SUM(od.quantity * od.unit_price) AS total_revenue\nFROM products p\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_id\nORDER BY total_revenue DESC\nLIMIT 10;"}
{"Question": "Which customers have placed the most orders for discontinued products?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.customer_id, c.company_name, COUNT(*) AS order_count\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nWHERE p.discontinued = 1\nGROUP BY c.customer_id, c.company_name\nORDER BY order_count DESC\nLIMIT 10;"}
{"Question": "What is the distribution of product counts across different categories?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT \n    category_id,\n    COUNT(*) as product_count,\n    ROUND(COUNT(*) * 1.0 / (SELECT COUNT(*) FROM products), 2) as percentage\nFROM products\nGROUP BY category_id\nORDER BY product_count DESC;"}
{"Question": "Which categories have the highest and lowest number of products?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "WITH category_product_counts AS (\n    SELECT \n        category_id,\n        COUNT(*) as product_count\n    FROM products\n    GROUP BY category_id\n)\nSELECT\n    (SELECT category_name FROM categories WHERE category_id = cpc.category_id) as category_name,\n    product_count\nFROM category_product_counts cpc\nORDER BY product_count DESC\nLIMIT 1;\n\nWITH category_product_counts AS (\n    SELECT \n        category_id,\n        COUNT(*) as product_count\n    FROM products\n    GROUP BY category_id\n)\nSELECT\n    (SELECT category_name FROM categories WHERE category_id = cpc.category_id) as category_name,\n    product_count\nFROM category_product_counts cpc\nORDER BY product_count ASC\nLIMIT 1;"}
{"Question": "Which customers have ordered products from the most diverse set of suppliers?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);", "Query": "SELECT c.company_name, COUNT(DISTINCT p.supplier_id) as unique_suppliers\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nGROUP BY c.customer_id\nORDER BY unique_suppliers DESC\nLIMIT 1;"}
{"Question": "Which product categories have the highest average order value?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    order_date date,\n    freight real\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.category_name, AVG(od.unit_price * od.quantity) as avg_order_value\nFROM order_details od\nJOIN products p ON od.product_id = p.product_id\nJOIN categories c ON p.category_id = c.category_id\nJOIN orders o ON od.order_id = o.order_id\nGROUP BY c.category_name\nORDER BY avg_order_value DESC\nLIMIT 3;"}
{"Question": "Which employees have processed the highest total freight cost orders?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT e.first_name, e.last_name, COALESCE(SUM(o.freight), 0) as total_freight\nFROM employees e\nLEFT JOIN orders o ON e.employee_id = o.employee_id\nGROUP BY e.employee_id\nORDER BY total_freight DESC\nLIMIT 5;"}
{"Question": "Which employees have processed the most orders with the highest total freight cost?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(o.order_id) as total_orders, COALESCE(SUM(o.freight), 0) as total_freight\nFROM employees e\nLEFT JOIN orders o ON e.employee_id = o.employee_id\nGROUP BY e.employee_id\nORDER BY total_orders DESC, total_freight DESC\nLIMIT 5;"}
{"Question": "What is the average discount percentage applied to orders by customer type?", "Context": "CREATE TABLE customer_demographics (\n    customer_type_id bpchar NOT NULL PRIMARY KEY,\n    customer_desc text\n);\n\nCREATE TABLE customer_customer_demo (\n    customer_id bpchar NOT NULL,\n    customer_type_id bpchar NOT NULL,\n    PRIMARY KEY (customer_id, customer_type_id),\n    FOREIGN KEY (customer_type_id) REFERENCES customer_demographics,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT cd.customer_desc, AVG(od.discount) * 100 as avg_discount_percentage\nFROM order_details od\nJOIN orders o ON od.order_id = o.order_id\nJOIN customer_customer_demo ccd ON o.customer_id = ccd.customer_id\nJOIN customer_demographics cd ON ccd.customer_type_id = cd.customer_type_id\nGROUP BY cd.customer_desc;"}
{"Question": "What is the average discount percentage applied to orders by employee and region?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT e.region, e.first_name, e.last_name, AVG(od.discount) * 100 as avg_discount_percentage\nFROM order_details od\nJOIN orders o ON od.order_id = o.order_id\nJOIN employees e ON o.employee_id = e.employee_id\nGROUP BY e.region, e.first_name, e.last_name;"}
{"Question": "Which customers have ordered the most unique products across all suppliers?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);", "Query": "SELECT c.company_name, COUNT(DISTINCT p.product_id) AS unique_products\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nGROUP BY c.company_name\nORDER BY unique_products DESC\nLIMIT 5;"}
{"Question": "Which suppliers have the highest total order value from customers who have ordered from all suppliers?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);", "Query": "WITH all_customers AS (\n  SELECT c.customer_id\n  FROM customers c\n  WHERE EXISTS (\n    SELECT 1 FROM orders o\n    JOIN order_details od ON o.order_id = od.order_id\n    JOIN products p ON od.product_id = p.product_id\n    WHERE o.customer_id = c.customer_id\n    GROUP BY o.customer_id\n    HAVING COUNT(DISTINCT p.supplier_id) = (SELECT COUNT(*) FROM suppliers)\n  )\n)\nSELECT s.company_name, SUM(od.unit_price * od.quantity) AS total_order_value\nFROM order_details od\nJOIN orders o ON od.order_id = o.order_id\nJOIN products p ON od.product_id = p.product_id\nJOIN suppliers s ON p.supplier_id = s.supplier_id\nJOIN all_customers ac ON o.customer_id = ac.customer_id\nGROUP BY s.company_name\nORDER BY total_order_value DESC\nLIMIT 5;"}
{"Question": "What are the top 5 best-selling products by total revenue?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT p.product_name, COALESCE(SUM(od.unit_price * od.quantity * (1 - od.discount)), 0) as total_revenue\nFROM products p\nLEFT JOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_id\nORDER BY total_revenue DESC\nLIMIT 5;"}
{"Question": "Which product categories have the highest average unit prices?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_name, AVG(p.unit_price) as avg_unit_price\nFROM products p\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_id\nORDER BY avg_unit_price DESC;"}
{"Question": "Which employees have the highest total sales across all regions?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT e.employee_id, e.first_name, e.last_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_sales\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY e.employee_id\nORDER BY total_sales DESC\nLIMIT 3;"}
{"Question": "Which regions have the highest total sales across all employees?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE region (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_description bpchar NOT NULL\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (territory_id) REFERENCES territories,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region\n);", "Query": "SELECT r.region_id, r.region_description, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_sales\nFROM orders o\nJOIN order_details od ON o.order_id = od.order_id\nJOIN employees e ON o.employee_id = e.employee_id\nJOIN employee_territories et ON e.employee_id = et.employee_id\nJOIN territories t ON et.territory_id = t.territory_id\nJOIN region r ON t.region_id = r.region_id\nGROUP BY r.region_id, r.region_description\nORDER BY total_sales DESC\nLIMIT 3;"}
{"Question": "What are the top 3 most common ship cities for each country?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "WITH city_counts AS (\n  SELECT ship_country, ship_city, COUNT(*) as city_count,\n         ROW_NUMBER() OVER (PARTITION BY ship_country ORDER BY COUNT(*) DESC) as rn\n  FROM orders\n  GROUP BY ship_country, ship_city\n)\nSELECT ship_country, ship_city, city_count\nFROM city_counts\nWHERE rn <= 3;"}
{"Question": "What is the average freight cost for each top ship city in each country?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "WITH city_counts AS (\n  SELECT ship_country, ship_city, COUNT(*) as city_count,\n         ROW_NUMBER() OVER (PARTITION BY ship_country ORDER BY COUNT(*) DESC) as rn\n  FROM orders\n  GROUP BY ship_country, ship_city\n),\ntop_cities AS (\n  SELECT ship_country, ship_city\n  FROM city_counts\n  WHERE rn = 1\n)\nSELECT \n  top_cities.ship_country,\n  top_cities.ship_city,\n  AVG(orders.freight) as avg_freight\nFROM \n  top_cities\n  JOIN orders ON top_cities.ship_country = orders.ship_country AND top_cities.ship_city = orders.ship_city\nGROUP BY\n  top_cities.ship_country, top_cities.ship_city;"}
{"Question": "List the top 5 categories with the highest total revenue and the percentage of total revenue they contribute.", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "WITH category_revenue AS (\n    SELECT c.category_name, COALESCE(SUM(od.unit_price * od.quantity * (1 - od.discount)), 0) AS total_revenue\n    FROM categories c\n    LEFT JOIN products p ON c.category_id = p.category_id\n    LEFT JOIN order_details od ON p.product_id = od.product_id\n    GROUP BY c.category_id\n)\nSELECT \n    category_name,\n    total_revenue,\n    ROUND(total_revenue / (SELECT SUM(total_revenue) FROM category_revenue) * 100, 2) AS percentage_of_total\nFROM category_revenue\nORDER BY total_revenue DESC\nLIMIT 5;"}
{"Question": "Find the top 3 categories with the highest average order value.", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15)\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "WITH category_avg_order_value AS (\n    SELECT \n        c.category_name,\n        AVG(od.unit_price * od.quantity * (1 - od.discount)) AS avg_order_value\n    FROM categories c\n    LEFT JOIN products p ON c.category_id = p.category_id\n    LEFT JOIN order_details od ON p.product_id = od.product_id\n    LEFT JOIN orders o ON od.order_id = o.order_id\n    GROUP BY c.category_id\n)\nSELECT \n    category_name,\n    ROUND(avg_order_value, 2) AS avg_order_value\nFROM category_avg_order_value\nORDER BY avg_order_value DESC\nLIMIT 3;"}
{"Question": "Which customers have placed orders for the most discontinued products?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    category_id smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    quantity smallint NOT NULL,\n    FOREIGN KEY (order_id) REFERENCES orders,\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT c.company_name, COUNT(od.product_id) AS discontinued_products\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nWHERE p.discontinued = 1\nGROUP BY c.company_name\nORDER BY discontinued_products DESC\nLIMIT 5;"}
{"Question": "Which customers have placed the most orders for products that are currently in stock?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    units_in_stock smallint,\n    discontinued integer NOT NULL\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    quantity smallint NOT NULL,\n    FOREIGN KEY (order_id) REFERENCES orders,\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT c.company_name, COUNT(od.order_id) AS order_count\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nWHERE p.units_in_stock > 0 AND p.discontinued = 0\nGROUP BY c.company_name\nORDER BY order_count DESC\nLIMIT 5;"}
{"Question": "What is the average order value for each customer?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    total_order_value real NOT NULL\n);", "Query": "SELECT c.company_name, AVG(o.total_order_value) as avg_order_value\nFROM customers c\nLEFT JOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_id;"}
{"Question": "Which customers have the most consistent order frequency?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date\n);", "Query": "WITH customer_orders AS (\n  SELECT customer_id, order_date,\n         LAG(order_date) OVER (PARTITION BY customer_id ORDER BY order_date) as prev_order_date,\n         DATEDIFF(order_date, LAG(order_date) OVER (PARTITION BY customer_id ORDER BY order_date)) as days_between_orders\n  FROM orders\n)\nSELECT c.company_name, STDDEV(co.days_between_orders) as std_dev_days_between_orders\nFROM customers c\nLEFT JOIN customer_orders co ON c.customer_id = co.customer_id\nGROUP BY c.customer_id\nORDER BY std_dev_days_between_orders ASC\nLIMIT 10;"}
{"Question": "Which employees have the most territories assigned to them in each region?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (territory_id) REFERENCES territories,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE region (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_description bpchar NOT NULL\n);", "Query": "SELECT e.first_name, e.last_name, r.region_description, COUNT(t.territory_id) as territory_count\nFROM employees e\nJOIN employee_territories et ON e.employee_id = et.employee_id\nJOIN territories t ON et.territory_id = t.territory_id\nJOIN region r ON t.region_id = r.region_id\nGROUP BY e.employee_id, r.region_id\nORDER BY territory_count DESC\nLIMIT 1 PER GROUP;"}
{"Question": "What is the average number of territories managed by employees in each region?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (territory_id) REFERENCES territories,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE region (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_description bpchar NOT NULL\n);", "Query": "SELECT r.region_description, AVG(territory_count) as avg_territory_count\nFROM (\n  SELECT e.employee_id, r.region_id, COUNT(t.territory_id) as territory_count\n  FROM employees e\n  JOIN employee_territories et ON e.employee_id = et.employee_id\n  JOIN territories t ON et.territory_id = t.territory_id\n  JOIN region r ON t.region_id = r.region_id\n  GROUP BY e.employee_id, r.region_id\n) subquery\nJOIN region r ON subquery.region_id = r.region_id\nGROUP BY r.region_id, r.region_description;"}
{"Question": "What is the total value of products that are currently in stock?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT SUM(unit_price * units_in_stock) as total_value_in_stock \nFROM products;"}
{"Question": "What is the total value of products that have been discontinued?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT SUM(unit_price * units_in_stock) as total_value_discontinued\nFROM products\nWHERE discontinued = 1;"}
{"Question": "Which customers have placed the most total orders across all products?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.company_name, COUNT(o.order_id) AS total_orders\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_id\nORDER BY total_orders DESC\nLIMIT 3;"}
{"Question": "Which products have been ordered the most times across all customers?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15)\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT p.product_name, COUNT(*) AS total_orders\nFROM order_details od\nJOIN products p ON od.product_id = p.product_id\nGROUP BY p.product_id\nORDER BY total_orders DESC\nLIMIT 3;"}
{"Question": "Which product categories have the highest average unit price?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_name, AVG(p.unit_price) AS avg_unit_price\nFROM products p\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_name\nORDER BY avg_unit_price DESC;"}
{"Question": "Which suppliers provide products with the highest average unit price?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT s.company_name, AVG(p.unit_price) AS avg_unit_price\nFROM products p\nJOIN suppliers s ON p.supplier_id = s.supplier_id\nGROUP BY s.company_name\nORDER BY avg_unit_price DESC;"}
{"Question": "Find the employees who have the same first name and last name.", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT e.first_name, e.last_name \nFROM employees e\nWHERE e.first_name = e.last_name;"}
{"Question": "Find the employees who have the same birth year and hire year.", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT e1.first_name AS employee1_first_name, e1.last_name AS employee1_last_name, \n       e2.first_name AS employee2_first_name, e2.last_name AS employee2_last_name\nFROM employees e1\nJOIN employees e2 ON EXTRACT(YEAR FROM e1.birth_date) = EXTRACT(YEAR FROM e2.birth_date)\n                 AND EXTRACT(YEAR FROM e1.hire_date) = EXTRACT(YEAR FROM e2.hire_date)\nWHERE e1.employee_id < e2.employee_id;"}
{"Question": "What is the total revenue generated by each customer based on their orders?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);", "Query": "SELECT c.company_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) AS total_revenue\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY c.company_name;"}
{"Question": "Which products have the highest total sales quantity across all orders?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT p.product_name, SUM(od.quantity) AS total_sales_quantity\nFROM products p\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_name\nORDER BY total_sales_quantity DESC\nLIMIT 5;"}
{"Question": "Which suppliers have products in the most diverse set of categories?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT s.company_name, COUNT(DISTINCT p.category_id) as category_count\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nGROUP BY s.supplier_id\nORDER BY category_count DESC\nLIMIT 3;"}
{"Question": "Which suppliers have the most products in the most popular categories?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "WITH top_categories AS (\n  SELECT category_id, COUNT(*) as product_count\n  FROM products\n  GROUP BY category_id\n  ORDER BY product_count DESC\n  LIMIT 3\n)\nSELECT s.company_name, COUNT(*) as product_count\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nWHERE p.category_id IN (SELECT category_id FROM top_categories)\nGROUP BY s.supplier_id\nORDER BY product_count DESC\nLIMIT 3;"}
{"Question": "What is the total revenue generated by each employee for each product category?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT e.first_name, e.last_name, c.category_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_revenue\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY e.employee_id, c.category_name\nORDER BY e.first_name, e.last_name, c.category_name;"}
{"Question": "What is the total revenue generated by each employee for each region they are responsible for?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (territory_id) REFERENCES territories,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region\n);\n\nCREATE TABLE region (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_description bpchar NOT NULL\n);", "Query": "SELECT e.first_name, e.last_name, r.region_description, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_revenue\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN employee_territories et ON e.employee_id = et.employee_id\nJOIN territories t ON et.territory_id = t.territory_id\nJOIN region r ON t.region_id = r.region_id\nGROUP BY e.employee_id, r.region_description\nORDER BY e.first_name, e.last_name, r.region_description;"}
{"Question": "Which categories have the highest total revenue from orders?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "WITH category_revenue AS (\n  SELECT \n    c.category_id,\n    c.category_name,\n    SUM(od.quantity * od.unit_price) AS total_revenue\n  FROM categories c\n  JOIN products p ON c.category_id = p.category_id\n  JOIN order_details od ON p.product_id = od.product_id\n  GROUP BY c.category_id, c.category_name\n)\nSELECT \n  category_name,\n  total_revenue\nFROM category_revenue\nORDER BY total_revenue DESC\nLIMIT 3;"}
{"Question": "Which customers have placed the most orders in each region?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "WITH customer_orders AS (\n  SELECT\n    c.region,\n    c.customer_id,\n    c.company_name,\n    COUNT(o.order_id) AS total_orders,\n    ROW_NUMBER() OVER (PARTITION BY c.region ORDER BY COUNT(o.order_id) DESC) AS rn\n  FROM customers c\n  LEFT JOIN orders o ON c.customer_id = o.customer_id\n  GROUP BY c.region, c.customer_id, c.company_name\n)\nSELECT\n  region,\n  company_name,\n  total_orders\nFROM customer_orders\nWHERE rn = 1;"}
{"Question": "Which employees have processed orders for customers from the most diverse set of regions?", "Context": "CREATE TABLE regions (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    ship_region VARCHAR(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(DISTINCT o.ship_region) AS unique_regions\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nGROUP BY e.employee_id\nORDER BY unique_regions DESC\nLIMIT 1;"}
{"Question": "Which employees have processed orders for customers from the most diverse set of industries (customer types)?", "Context": "CREATE TABLE customer_industries (\n    industry_id SMALLINT PRIMARY KEY,\n    industry_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customer_demographics (\n    customer_type_id BPCHAR PRIMARY KEY,\n    customer_industry_id SMALLINT,\n    customer_desc TEXT,\n    FOREIGN KEY (customer_industry_id) REFERENCES customer_industries\n);\n\nCREATE TABLE customers (\n    customer_id BPCHAR PRIMARY KEY,\n    company_name VARCHAR(40) NOT NULL\n);\n\nCREATE TABLE customer_customer_demo (\n    customer_id BPCHAR,\n    customer_type_id BPCHAR,\n    PRIMARY KEY (customer_id, customer_type_id),\n    FOREIGN KEY (customer_type_id) REFERENCES customer_demographics,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE orders (\n    order_id SMALLINT PRIMARY KEY,\n    customer_id BPCHAR,\n    employee_id SMALLINT,\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(DISTINCT cd.customer_industry_id) AS unique_industries\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN customer_customer_demo ccd ON o.customer_id = ccd.customer_id\nJOIN customer_demographics cd ON ccd.customer_type_id = cd.customer_type_id\nGROUP BY e.employee_id\nORDER BY unique_industries DESC\nLIMIT 1;"}
{"Question": "What is the average order processing time for each employee, grouped by their region?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT e.region, AVG(o.shipped_date - o.order_date) as avg_processing_time\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nWHERE o.shipped_date IS NOT NULL\nGROUP BY e.region;"}
{"Question": "What is the average order processing time for each product category, grouped by the supplier's country?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);", "Query": "SELECT c.category_name, s.country, AVG(o.shipped_date - o.order_date) as avg_processing_time\nFROM orders o\nJOIN products p ON o.product_id = p.product_id\nJOIN categories c ON p.category_id = c.category_id\nJOIN suppliers s ON p.supplier_id = s.supplier_id\nWHERE o.shipped_date IS NOT NULL\nGROUP BY c.category_name, s.country;"}
{"Question": "Which products have been ordered by customers from the most unique regions?", "Context": "CREATE TABLE regions (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name VARCHAR(40) NOT NULL,\n    region_id smallint NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES regions\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar NOT NULL,\n    product_id smallint NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (product_id) REFERENCES products\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name VARCHAR(40) NOT NULL\n);", "Query": "SELECT p.product_name, COUNT(DISTINCT r.region_name) AS unique_regions\nFROM products p\nJOIN orders o ON p.product_id = o.product_id\nJOIN customers c ON o.customer_id = c.customer_id\nJOIN regions r ON c.region_id = r.region_id\nGROUP BY p.product_id\nORDER BY unique_regions DESC\nLIMIT 10;"}
{"Question": "What are the top 10 products ordered by customers from the most unique countries?", "Context": "CREATE TABLE countries (\n    country_id smallint NOT NULL PRIMARY KEY,\n    country_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name VARCHAR(40) NOT NULL,\n    country_id smallint NOT NULL,\n    FOREIGN KEY (country_id) REFERENCES countries\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar NOT NULL,\n    product_id smallint NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (product_id) REFERENCES products\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name VARCHAR(40) NOT NULL\n);", "Query": "SELECT p.product_name, COUNT(DISTINCT c.country_id) AS unique_countries\nFROM products p\nJOIN orders o ON p.product_id = o.product_id\nJOIN customers c ON o.customer_id = c.customer_id\nGROUP BY p.product_id\nORDER BY unique_countries DESC\nLIMIT 10;"}
{"Question": "What is the total discount amount given for each product category, grouped by customer type?", "Context": "CREATE TABLE customer_demographics (\n    customer_type_id bpchar NOT NULL PRIMARY KEY,\n    customer_desc text\n);\n\nCREATE TABLE customer_customer_demo (\n    customer_id bpchar NOT NULL,\n    customer_type_id bpchar NOT NULL,\n    PRIMARY KEY (customer_id, customer_type_id),\n    FOREIGN KEY (customer_type_id) REFERENCES customer_demographics,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    category_id smallint,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL\n);", "Query": "SELECT c.category_name, cd.customer_desc, SUM(od.quantity * od.unit_price * od.discount) as total_discount\nFROM order_details od\nJOIN products p ON od.product_id = p.product_id\nJOIN categories c ON p.category_id = c.category_id\nJOIN orders o ON od.order_id = o.order_id\nJOIN customer_customer_demo ccd ON o.customer_id = ccd.customer_id\nJOIN customer_demographics cd ON ccd.customer_type_id = cd.customer_type_id\nGROUP BY c.category_id, cd.customer_desc;"}
{"Question": "What is the total discount amount given for each product category, grouped by the region of the customer's shipping address?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    ship_region character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    category_id smallint,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL\n);", "Query": "SELECT c.category_name, o.ship_region, SUM(od.quantity * od.unit_price * od.discount) as total_discount\nFROM order_details od\nJOIN products p ON od.product_id = p.product_id\nJOIN categories c ON p.category_id = c.category_id\nJOIN orders o ON od.order_id = o.order_id\nGROUP BY c.category_id, o.ship_region;"}
{"Question": "Which customers have ordered products from the most number of suppliers?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL\n);", "Query": "SELECT c.company_name, COUNT(DISTINCT p.supplier_id) AS num_suppliers\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nGROUP BY c.company_name\nORDER BY num_suppliers DESC\nLIMIT 1;"}
{"Question": "Which suppliers have had the most orders placed for their products?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL\n);", "Query": "SELECT s.company_name, COUNT(*) AS total_orders\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nJOIN order_details od ON p.product_id = od.product_id\nJOIN orders o ON od.order_id = o.order_id\nGROUP BY s.company_name\nORDER BY total_orders DESC\nLIMIT 1;"}
{"Question": "What is the average number of days between the first and last order for each customer?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL\n);", "Query": "WITH customer_orders AS (\n  SELECT customer_id, MIN(order_date) AS first_order, MAX(order_date) AS last_order\n  FROM orders\n  GROUP BY customer_id\n)\nSELECT c.company_name, AVG(co.last_order - co.first_order) AS avg_days_between_first_and_last\nFROM customers c\nJOIN customer_orders co ON c.customer_id = co.customer_id\nGROUP BY c.company_name;"}
{"Question": "What is the average number of days between the first order and the last order for each employee?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    employee_id smallint,\n    order_date date\n);\n\nCREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    first_name character varying(10) NOT NULL,\n    last_name character varying(20) NOT NULL\n);", "Query": "WITH employee_orders AS (\n  SELECT employee_id, MIN(order_date) AS first_order, MAX(order_date) AS last_order\n  FROM orders\n  GROUP BY employee_id\n)\nSELECT e.first_name, e.last_name, AVG(eo.last_order - eo.first_order) AS avg_days_between_first_and_last\nFROM employees e\nJOIN employee_orders eo ON e.employee_id = eo.employee_id\nGROUP BY e.employee_id, e.first_name, e.last_name;"}
{"Question": "Which employees have processed orders for products from the most diverse set of suppliers?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);", "Query": "SELECT e.first_name, e.last_name\nFROM employees e\nWHERE (\n  SELECT COUNT(DISTINCT s.supplier_id)\n  FROM orders o\n  JOIN order_details od ON o.order_id = od.order_id\n  JOIN products p ON od.product_id = p.product_id\n  JOIN suppliers s ON p.supplier_id = s.supplier_id\n  WHERE o.employee_id = e.employee_id\n) = (\n  SELECT COUNT(DISTINCT supplier_id)\n  FROM products\n);"}
{"Question": "Which employees have processed orders for the most expensive products across all categories?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT e.first_name, e.last_name\nFROM employees e\nWHERE (\n  SELECT COUNT(DISTINCT p.category_id)\n  FROM orders o\n  JOIN order_details od ON o.order_id = od.order_id\n  JOIN products p ON od.product_id = p.product_id\n  WHERE o.employee_id = e.employee_id\n  AND od.unit_price = (SELECT MAX(unit_price) FROM products)\n) = (SELECT COUNT(*) FROM categories);"}
{"Question": "What is the total revenue generated from each product category?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT c.category_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_revenue\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY c.category_name;"}
{"Question": "What is the total revenue generated by each customer type?", "Context": "CREATE TABLE customer_demographics (\n    customer_type_id bpchar NOT NULL PRIMARY KEY,\n    customer_desc text\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE customer_customer_demo (\n    customer_id bpchar NOT NULL,\n    customer_type_id bpchar NOT NULL,\n    PRIMARY KEY (customer_id, customer_type_id),\n    FOREIGN KEY (customer_type_id) REFERENCES customer_demographics,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT cd.customer_desc, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_revenue\nFROM customer_customer_demo ccd\nJOIN customer_demographics cd ON ccd.customer_type_id = cd.customer_type_id\nJOIN orders o ON ccd.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY cd.customer_desc;"}
{"Question": "Which products have the highest total sales revenue across all orders?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT p.product_name, SUM(od.quantity * od.unit_price) AS total_sales_revenue\nFROM products p\nJOIN order_details od ON p.product_id = od.product_id\nJOIN orders o ON od.order_id = o.order_id\nGROUP BY p.product_name\nORDER BY total_sales_revenue DESC\nLIMIT 5;"}
{"Question": "Which customers have placed the most orders in the last 6 months?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT c.customer_id, c.company_name, COUNT(o.order_id) AS order_count\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nWHERE o.order_date >= DATE_TRUNC('month', CURRENT_DATE - INTERVAL 6 MONTH)\nGROUP BY c.customer_id, c.company_name\nORDER BY order_count DESC\nLIMIT 5;"}
{"Question": "What are the top 3 most popular product categories ordered together?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "WITH category_pairs AS (\n  SELECT c1.category_name AS category1, c2.category_name AS category2, COUNT(*) AS pair_count\n  FROM order_details od1\n  JOIN products p1 ON od1.product_id = p1.product_id\n  JOIN categories c1 ON p1.category_id = c1.category_id\n  JOIN order_details od2 ON od1.order_id = od2.order_id\n  JOIN products p2 ON od2.product_id = p2.product_id\n  JOIN categories c2 ON p2.category_id = c2.category_id\n  WHERE c1.category_id < c2.category_id\n  GROUP BY c1.category_name, c2.category_name\n)\nSELECT category1, category2, pair_count\nFROM category_pairs\nORDER BY pair_count DESC\nLIMIT 3;"}
{"Question": "Which customers have the highest average order value?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "WITH customer_avg_order AS (\n  SELECT c.customer_id, AVG(od.unit_price * od.quantity) AS avg_order_value\n  FROM customers c\n  JOIN orders o ON c.customer_id = o.customer_id\n  JOIN order_details od ON o.order_id = od.order_id\n  GROUP BY c.customer_id\n)\nSELECT customer_id, avg_order_value\nFROM customer_avg_order\nORDER BY avg_order_value DESC\nLIMIT 3;"}
{"Question": "Which customers have ordered the most unique products across all categories?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    category_id smallint,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.company_name, COUNT(DISTINCT p.product_id) AS unique_products\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nJOIN products p ON od.product_id = p.product_id\nGROUP BY c.company_name\nORDER BY unique_products DESC\nLIMIT 10;"}
{"Question": "Which categories have the highest average order value across all customers?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    category_id smallint,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_name, AVG(od.unit_price * od.quantity * (1 - od.discount)) AS avg_order_value\nFROM order_details od\nJOIN products p ON od.product_id = p.product_id\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_name\nORDER BY avg_order_value DESC\nLIMIT 5;"}
{"Question": "Which employees have processed orders for customers in the most diverse set of regions?", "Context": "CREATE TABLE regions (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    ship_region VARCHAR(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_region) REFERENCES regions\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(DISTINCT o.ship_region) AS unique_regions\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nGROUP BY e.employee_id\nORDER BY unique_regions DESC\nLIMIT 5;"}
{"Question": "Which employees have processed the highest total order value for their customers?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    freight real\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT e.first_name, e.last_name, SUM(od.unit_price * od.quantity * (1 - od.discount)) AS total_order_value\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY e.employee_id\nORDER BY total_order_value DESC\nLIMIT 5;"}
{"Question": "What is the total revenue generated from products that have been discontinued for more than a year?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    discontinued_date date,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_revenue \nFROM order_details od\nJOIN products p ON od.product_id = p.product_id\nWHERE p.discontinued = 1 AND p.discontinued_date < DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR);"}
{"Question": "What is the total revenue generated from discontinued products for each customer type?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE customer_demographics (\n    customer_type_id bpchar NOT NULL PRIMARY KEY,\n    customer_desc text\n);\n\nCREATE TABLE customer_customer_demo (\n    customer_id bpchar NOT NULL,\n    customer_type_id bpchar NOT NULL,\n    PRIMARY KEY (customer_id, customer_type_id),\n    FOREIGN KEY (customer_type_id) REFERENCES customer_demographics,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT cd.customer_desc, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_revenue\nFROM order_details od\nJOIN orders o ON od.order_id = o.order_id\nJOIN customers c ON o.customer_id = c.customer_id\nJOIN customer_customer_demo ccd ON c.customer_id = ccd.customer_id\nJOIN customer_demographics cd ON ccd.customer_type_id = cd.customer_type_id\nJOIN products p ON od.product_id = p.product_id\nWHERE p.discontinued = 1\nGROUP BY cd.customer_desc;"}
{"Question": "Which suppliers have the highest number of products that have never been ordered?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT s.company_name, COUNT(p.product_id) AS num_never_ordered\nFROM suppliers s\nLEFT JOIN products p ON s.supplier_id = p.supplier_id\nLEFT JOIN order_details od ON p.product_id = od.product_id\nWHERE od.order_id IS NULL\nGROUP BY s.company_name\nORDER BY num_never_ordered DESC\nLIMIT 5;"}
{"Question": "Which suppliers have the highest percentage of their products that have never been ordered?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "WITH supplier_product_counts AS (\n    SELECT s.supplier_id, s.company_name, COUNT(p.product_id) AS total_products\n    FROM suppliers s\n    LEFT JOIN products p ON s.supplier_id = p.supplier_id\n    GROUP BY s.supplier_id, s.company_name\n),\nnever_ordered_products AS (\n    SELECT p.supplier_id, COUNT(p.product_id) AS never_ordered\n    FROM products p\n    LEFT JOIN order_details od ON p.product_id = od.product_id\n    WHERE od.order_id IS NULL\n    GROUP BY p.supplier_id\n)\nSELECT \n    spc.company_name,\n    ROUND(CAST(nop.never_ordered AS FLOAT) / spc.total_products * 100, 2) AS pct_never_ordered\nFROM supplier_product_counts spc\nLEFT JOIN never_ordered_products nop ON spc.supplier_id = nop.supplier_id\nORDER BY pct_never_ordered DESC\nLIMIT 5;"}
{"Question": "What is the average number of days between the order date and the shipped date for each shipper?", "Context": "CREATE TABLE shippers (\n    shipper_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    phone character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT s.company_name, AVG(o.shipped_date - o.order_date) as avg_days\nFROM shippers s\nJOIN orders o ON s.shipper_id = o.ship_via\nGROUP BY s.shipper_id;"}
{"Question": "What is the average number of days between the order date and the required date for each customer and shipper combination?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE shippers (\n    shipper_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    phone character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT c.company_name AS customer, s.company_name AS shipper, AVG(o.required_date - o.order_date) AS avg_days\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN shippers s ON o.ship_via = s.shipper_id\nGROUP BY c.company_name, s.company_name;"}
{"Question": "Which products have been ordered by customers from the most diverse set of countries?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT p.product_name, COUNT(DISTINCT c.country) AS num_countries\nFROM products p\nJOIN order_details od ON p.product_id = od.product_id\nJOIN orders o ON od.order_id = o.order_id\nJOIN customers c ON o.customer_id = c.customer_id\nGROUP BY p.product_name\nORDER BY num_countries DESC\nLIMIT 10;"}
{"Question": "What are the top-selling products for each customer type?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE customer_customer_demo (\n    customer_id bpchar NOT NULL,\n    customer_type_id bpchar NOT NULL,\n    PRIMARY KEY (customer_id, customer_type_id),\n    FOREIGN KEY (customer_type_id) REFERENCES customer_demographics,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE customer_demographics (\n    customer_type_id bpchar NOT NULL PRIMARY KEY,\n    customer_desc text\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "WITH customer_top_products AS (\n  SELECT\n    ccd.customer_type_id,\n    p.product_id,\n    p.product_name,\n    SUM(od.quantity) AS total_quantity\n  FROM order_details od\n  JOIN products p ON od.product_id = p.product_id\n  JOIN orders o ON od.order_id = o.order_id\n  JOIN customer_customer_demo ccd ON o.customer_id = ccd.customer_id\n  GROUP BY ccd.customer_type_id, p.product_id, p.product_name\n  ORDER BY ccd.customer_type_id, total_quantity DESC\n)\nSELECT\n  cd.customer_desc,\n  ctp.product_name,\n  ctp.total_quantity\nFROM customer_top_products ctp\nJOIN customer_demographics cd ON ctp.customer_type_id = cd.customer_type_id\nWHERE ctp.rn = 1\nORDER BY cd.customer_desc, ctp.total_quantity DESC;"}
{"Question": "What is the total number of unique products supplied by each supplier, grouped by the supplier's country?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT s.country, COUNT(DISTINCT p.product_id) AS unique_products\nFROM suppliers s\nLEFT JOIN products p ON s.supplier_id = p.supplier_id\nGROUP BY s.country;"}
{"Question": "What is the total number of unique products supplied by each supplier, excluding discontinued products?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT s.company_name, COUNT(DISTINCT p.product_id) AS unique_products\nFROM suppliers s\nLEFT JOIN products p ON s.supplier_id = p.supplier_id\nWHERE p.discontinued = 0\nGROUP BY s.company_name;"}
{"Question": "Which employees have processed orders for customers from the most diverse set of industries?", "Context": "CREATE TABLE industry_types (\n    industry_id SMALLINT PRIMARY KEY,\n    industry_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customer_industry (\n    customer_id BPCHAR NOT NULL,\n    industry_id SMALLINT NOT NULL,\n    PRIMARY KEY (customer_id, industry_id),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (industry_id) REFERENCES industry_types\n);", "Query": "SELECT e.first_name, e.last_name\nFROM employees e\nWHERE (\n  SELECT COUNT(DISTINCT i.industry_id)\n  FROM customer_industry ci\n  JOIN orders o ON ci.customer_id = o.customer_id\n  WHERE o.employee_id = e.employee_id\n) = (\n  SELECT COUNT(*)\n  FROM industry_types\n);"}
{"Question": "Which employees have processed orders for customers from the most diverse set of regions?", "Context": "CREATE TABLE regions (\n    region_id SMALLINT PRIMARY KEY,\n    region_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customer_regions (\n    customer_id BPCHAR NOT NULL,\n    region_id SMALLINT NOT NULL,\n    PRIMARY KEY (customer_id, region_id),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (region_id) REFERENCES regions\n);", "Query": "SELECT e.first_name, e.last_name\nFROM employees e\nWHERE (\n  SELECT COUNT(DISTINCT r.region_id)\n  FROM customer_regions cr\n  JOIN orders o ON cr.customer_id = o.customer_id\n  JOIN regions r ON cr.region_id = r.region_id\n  WHERE o.employee_id = e.employee_id\n) = (\n  SELECT COUNT(*)\n  FROM regions\n);"}
{"Question": "What is the average discount percentage for each product category, grouped by customer type?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customer_demographics (\n    customer_type_id bpchar NOT NULL PRIMARY KEY,\n    customer_desc text\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE customer_customer_demo (\n    customer_id bpchar NOT NULL,\n    customer_type_id bpchar NOT NULL,\n    PRIMARY KEY (customer_id, customer_type_id),\n    FOREIGN KEY (customer_type_id) REFERENCES customer_demographics,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT c.category_name, cd.customer_desc, AVG(od.discount) * 100 as avg_discount_percentage\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nJOIN order_details od ON p.product_id = od.product_id\nJOIN orders o ON od.order_id = o.order_id\nJOIN customer_customer_demo ccd ON o.customer_id = ccd.customer_id\nJOIN customer_demographics cd ON ccd.customer_type_id = cd.customer_type_id\nGROUP BY c.category_id, cd.customer_desc;"}
{"Question": "What is the average discount percentage for each product category, broken down by the top 5 customers with the highest total discounts?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "WITH top_customers AS (\n    SELECT o.customer_id, SUM(od.discount) AS total_discount\n    FROM order_details od\n    JOIN orders o ON od.order_id = o.order_id\n    GROUP BY o.customer_id\n    ORDER BY total_discount DESC\n    LIMIT 5\n)\nSELECT c.category_name, tc.customer_id, AVG(od.discount) * 100 AS avg_discount_percentage\nFROM categories c\nJOIN products p ON c.category_id = p.category_id\nJOIN order_details od ON p.product_id = od.product_id\nJOIN orders o ON od.order_id = o.order_id\nJOIN top_customers tc ON o.customer_id = tc.customer_id\nGROUP BY c.category_id, tc.customer_id\nORDER BY c.category_name, tc.customer_id;"}
{"Question": "What are the top 5 best-selling products in each category, based on total units sold?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "SELECT c.category_name, p.product_name, SUM(od.quantity) as total_units_sold\nFROM products p\nJOIN categories c ON p.category_id = c.category_id\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY c.category_name, p.product_name\nORDER BY c.category_name, total_units_sold DESC\nLIMIT 5 PER GROUP;"}
{"Question": "What are the top 5 customers by total revenue generated, and what are their contact details?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    freight real,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.customer_id, c.company_name, c.contact_name, c.contact_title, c.phone, c.fax, SUM(od.unit_price * od.quantity * (1 - od.discount)) as total_revenue\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY c.customer_id\nORDER BY total_revenue DESC\nLIMIT 5;"}
{"Question": "What are the top-selling products in each region?", "Context": "CREATE TABLE regions (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_name VARCHAR(50) NOT NULL\n);\n\nALTER TABLE territories\nADD FOREIGN KEY (region_id) REFERENCES regions;", "Query": "WITH top_products AS (\n  SELECT \n    r.region_name,\n    p.product_name,\n    SUM(od.quantity) AS total_quantity,\n    ROW_NUMBER() OVER (PARTITION BY r.region_name ORDER BY SUM(od.quantity) DESC) AS rn\n  FROM order_details od\n  JOIN products p ON od.product_id = p.product_id\n  JOIN orders o ON od.order_id = o.order_id\n  JOIN customers c ON o.customer_id = c.customer_id\n  JOIN territories t ON c.country = t.territory_description\n  JOIN regions r ON t.region_id = r.region_id\n  GROUP BY r.region_name, p.product_name\n)\nSELECT region_name, product_name, total_quantity\nFROM top_products\nWHERE rn = 1\nORDER BY region_name;"}
{"Question": "Which customers have ordered the most of their country's top-selling product?", "Context": "CREATE TABLE customer_orders AS (\n  SELECT \n    c.customer_id,\n    c.country,\n    p.product_name,\n    SUM(od.quantity) AS total_quantity\n  FROM customers c\n  JOIN orders o ON c.customer_id = o.customer_id\n  JOIN order_details od ON o.order_id = od.order_id\n  JOIN products p ON od.product_id = p.product_id\n  GROUP BY c.customer_id, c.country, p.product_name\n);", "Query": "WITH country_top_products AS (\n  SELECT \n    country, \n    product_name,\n    total_quantity,\n    ROW_NUMBER() OVER (PARTITION BY country ORDER BY total_quantity DESC) AS rn\n  FROM customer_orders\n)\nSELECT \n  c.customer_id,\n  c.country,\n  c.product_name,\n  c.total_quantity\nFROM customer_orders c\nJOIN country_top_products t ON c.country = t.country AND c.product_name = t.product_name\nWHERE t.rn = 1\nORDER BY c.total_quantity DESC;"}
{"Question": "Which suppliers have the most products in the same category?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT s.company_name, COUNT(p.product_id) as product_count\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nGROUP BY s.company_name\nORDER BY product_count DESC\nLIMIT 5;"}
{"Question": "What are the top 5 categories with the highest total product price?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_name, SUM(p.unit_price * p.units_in_stock) as total_product_value\nFROM products p\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_name\nORDER BY total_product_value DESC\nLIMIT 5;"}
{"Question": "What is the average order processing time for each customer type?", "Context": "CREATE TABLE customer_demographics (\n    customer_type_id bpchar NOT NULL PRIMARY KEY,\n    customer_desc text\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE customer_customer_demo (\n    customer_id bpchar NOT NULL,\n    customer_type_id bpchar NOT NULL,\n    PRIMARY KEY (customer_id, customer_type_id),\n    FOREIGN KEY (customer_type_id) REFERENCES customer_demographics,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "SELECT cd.customer_desc, AVG(o.shipped_date - o.order_date) as avg_processing_time\nFROM orders o\nJOIN customer_customer_demo ccd ON o.customer_id = ccd.customer_id\nJOIN customer_demographics cd ON ccd.customer_type_id = cd.customer_type_id\nWHERE o.shipped_date IS NOT NULL\nGROUP BY cd.customer_desc\nORDER BY avg_processing_time;"}
{"Question": "How does the average order processing time vary by employee and region?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (employee_id) REFERENCES employees\n);", "Query": "SELECT e.region, e.first_name, e.last_name, AVG(o.shipped_date - o.order_date) as avg_processing_time\nFROM orders o\nJOIN employees e ON o.employee_id = e.employee_id\nWHERE o.shipped_date IS NOT NULL\nGROUP BY e.region, e.first_name, e.last_name\nORDER BY e.region, avg_processing_time;"}
{"Question": "What is the total number of unique regions represented in the territories table?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customer_demographics (\n    customer_type_id bpchar NOT NULL PRIMARY KEY,\n    customer_desc text\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE customer_customer_demo (\n    customer_id bpchar NOT NULL,\n    customer_type_id bpchar NOT NULL,\n    PRIMARY KEY (customer_id, customer_type_id),\n    FOREIGN KEY (customer_type_id) REFERENCES customer_demographics,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE region (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_description bpchar NOT NULL\n);\n\nCREATE TABLE shippers (\n    shipper_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    phone character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (territory_id) REFERENCES territories,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE us_states (\n    state_id smallint NOT NULL PRIMARY KEY,\n    state_name character varying(100),\n    state_abbr character varying(2),\n    state_region character varying(50)\n);", "Query": "SELECT COUNT(DISTINCT region_id) AS num_unique_regions\nFROM territories;"}
{"Question": "What is the total number of employees that have been assigned to territories?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE customer_demographics (\n    customer_type_id bpchar NOT NULL PRIMARY KEY,\n    customer_desc text\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE customer_customer_demo (\n    customer_id bpchar NOT NULL,\n    customer_type_id bpchar NOT NULL,\n    PRIMARY KEY (customer_id, customer_type_id),\n    FOREIGN KEY (customer_type_id) REFERENCES customer_demographics,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE region (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_description bpchar NOT NULL\n);\n\nCREATE TABLE shippers (\n    shipper_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    phone character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (territory_id) REFERENCES territories,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE us_states (\n    state_id smallint NOT NULL PRIMARY KEY,\n    state_name character varying(100),\n    state_abbr character varying(2),\n    state_region character varying(50)\n);", "Query": "SELECT COUNT(DISTINCT employee_id) AS num_employees_with_territories\nFROM employee_territories;"}
{"Question": "Which employee has the most direct reports?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(r.reports_to) AS num_direct_reports\nFROM employees e\nLEFT JOIN employees r ON e.employee_id = r.reports_to\nGROUP BY e.employee_id\nORDER BY num_direct_reports DESC\nLIMIT 1;"}
{"Question": "Which employees have worked at the company the longest and the shortest amount of time?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);", "Query": "WITH tenure_stats AS (\n    SELECT \n        first_name, \n        last_name, \n        hire_date,\n        CURRENT_DATE - hire_date AS tenure_days\n    FROM employees\n)\nSELECT \n    first_name, \n    last_name, \n    tenure_days\nFROM (\n    SELECT \n        first_name, \n        last_name, \n        tenure_days,\n        ROW_NUMBER() OVER (ORDER BY tenure_days DESC) AS longest_tenure_rank,\n        ROW_NUMBER() OVER (ORDER BY tenure_days ASC) AS shortest_tenure_rank\n    FROM tenure_stats\n) ranked_tenure\nWHERE longest_tenure_rank = 1 OR shortest_tenure_rank = 1;"}
{"Question": "What is the average number of products supplied per country?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT \n    s.country,\n    AVG(product_count) AS avg_products_per_country\nFROM (\n    SELECT \n        s.country,\n        COUNT(DISTINCT p.product_id) AS product_count\n    FROM suppliers s\n    JOIN products p ON s.supplier_id = p.supplier_id\n    GROUP BY s.country\n) AS subquery\nGROUP BY s.country\nORDER BY avg_products_per_country DESC;"}
{"Question": "Which countries have the highest number of unique products supplied?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT \n    s.country,\n    COUNT(DISTINCT p.product_id) AS unique_products\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nGROUP BY s.country\nORDER BY unique_products DESC\nLIMIT 3;"}
{"Question": "What is the total revenue generated by each supplier?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);", "Query": "SELECT s.company_name, SUM(od.quantity * od.unit_price) AS total_revenue\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nJOIN order_details od ON p.product_id = od.product_id\nJOIN orders o ON od.order_id = o.order_id\nGROUP BY s.company_name\nORDER BY total_revenue DESC;"}
{"Question": "Which suppliers have the highest average order value?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);", "Query": "SELECT s.company_name, AVG(od.quantity * od.unit_price) AS avg_order_value\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nJOIN order_details od ON p.product_id = od.product_id\nJOIN orders o ON od.order_id = o.order_id\nGROUP BY s.company_name\nORDER BY avg_order_value DESC\nLIMIT 5;"}
{"Question": "What are the top 5 categories with the highest average product price?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_name, AVG(p.unit_price) as avg_price\nFROM products p\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_id\nORDER BY avg_price DESC\nLIMIT 5;"}
{"Question": "Which categories have the highest total units in stock across all their products?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_name, SUM(p.units_in_stock) as total_units_in_stock\nFROM products p\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_id\nORDER BY total_units_in_stock DESC;"}
{"Question": "Which employees have processed orders for the most unique customers?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);", "Query": "SELECT e.first_name, e.last_name, COUNT(DISTINCT o.customer_id) as unique_customers\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nGROUP BY e.employee_id\nORDER BY unique_customers DESC\nLIMIT 5;"}
{"Question": "Which employees have processed the highest total order value?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT e.first_name, e.last_name, SUM(od.unit_price * od.quantity) as total_order_value\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY e.employee_id\nORDER BY total_order_value DESC\nLIMIT 5;"}
{"Question": "What is the distribution of products across different suppliers?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT \n    s.supplier_id,\n    s.company_name,\n    COUNT(p.product_id) as num_products\nFROM suppliers s\nLEFT JOIN products p ON s.supplier_id = p.supplier_id\nGROUP BY s.supplier_id, s.company_name\nORDER BY num_products DESC;"}
{"Question": "Which suppliers have the highest number of unique products?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT \n    s.supplier_id,\n    s.company_name,\n    COUNT(DISTINCT p.product_id) as num_unique_products\nFROM suppliers s\nLEFT JOIN products p ON s.supplier_id = p.supplier_id\nGROUP BY s.supplier_id, s.company_name\nORDER BY num_unique_products DESC\nLIMIT 5;"}
{"Question": "What are the top 5 products by total revenue in each category?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products\n);", "Query": "WITH product_totals AS (\n  SELECT \n    p.product_id, \n    p.product_name,\n    p.category_id,\n    SUM(od.unit_price * od.quantity * (1 - od.discount)) AS total_revenue,\n    ROW_NUMBER() OVER (PARTITION BY p.category_id ORDER BY SUM(od.unit_price * od.quantity * (1 - od.discount)) DESC) AS category_rank\n  FROM products p\n  JOIN order_details od ON p.product_id = od.product_id\n  GROUP BY p.product_id, p.category_id\n)\nSELECT \n  product_id, \n  product_name, \n  category_id, \n  total_revenue\nFROM product_totals\nWHERE category_rank <= 5\nORDER BY category_id, total_revenue DESC;"}
{"Question": "Which employees have the highest total order value for each region they are responsible for?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (territory_id) REFERENCES territories,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "WITH employee_totals AS (\n  SELECT\n    e.employee_id,\n    e.first_name,\n    e.last_name,\n    e.region,\n    SUM(od.unit_price * od.quantity * (1 - od.discount)) AS total_order_value,\n    ROW_NUMBER() OVER (PARTITION BY e.region ORDER BY SUM(od.unit_price * od.quantity * (1 - od.discount)) DESC) AS region_rank\n  FROM employees e\n  JOIN orders o ON e.employee_id = o.employee_id\n  JOIN order_details od ON o.order_id = od.order_id\n  GROUP BY e.employee_id, e.first_name, e.last_name, e.region\n)\nSELECT\n  employee_id,\n  first_name,\n  last_name,\n  region,\n  total_order_value\nFROM employee_totals\nWHERE region_rank <= 1\nORDER BY region, total_order_value DESC;"}
{"Question": "What is the most common ship country for each shipper?", "Context": "CREATE TABLE shippers (\n    shipper_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    phone character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "WITH shipper_countries AS (\n  SELECT s.shipper_id, s.company_name, o.ship_country, COUNT(*) AS country_count,\n         ROW_NUMBER() OVER (PARTITION BY s.shipper_id ORDER BY COUNT(*) DESC) AS rank\n  FROM shippers s\n  JOIN orders o ON s.shipper_id = o.ship_via\n  WHERE o.ship_country IS NOT NULL\n  GROUP BY s.shipper_id, o.ship_country\n)\nSELECT company_name, ship_country, country_count\nFROM shipper_countries\nWHERE rank = 1;"}
{"Question": "What is the most common ship city for each shipper?", "Context": "CREATE TABLE shippers (\n    shipper_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    phone character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "WITH shipper_cities AS (\n  SELECT s.shipper_id, s.company_name, o.ship_city, COUNT(*) AS city_count,\n         ROW_NUMBER() OVER (PARTITION BY s.shipper_id ORDER BY COUNT(*) DESC) AS rank\n  FROM shippers s\n  JOIN orders o ON s.shipper_id = o.ship_via\n  WHERE o.ship_city IS NOT NULL\n  GROUP BY s.shipper_id, o.ship_city\n)\nSELECT company_name, ship_city, city_count\nFROM shipper_cities\nWHERE rank = 1;"}
{"Question": "Which product categories have the highest average unit prices?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories\n);", "Query": "SELECT c.category_name, AVG(p.unit_price) AS avg_unit_price\nFROM products p\nJOIN categories c ON p.category_id = c.category_id\nGROUP BY c.category_name\nORDER BY avg_unit_price DESC;"}
{"Question": "Which suppliers provide products with the highest average unit prices?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);", "Query": "SELECT s.company_name, AVG(p.unit_price) AS avg_unit_price\nFROM products p\nJOIN suppliers s ON p.supplier_id = s.supplier_id\nGROUP BY s.company_name\nORDER BY avg_unit_price DESC;"}
{"Question": "Which employees have territories in regions that are different from their home region?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (territory_id) REFERENCES territories,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE region (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_description bpchar NOT NULL\n);", "Query": "SELECT DISTINCT e.first_name, e.last_name, e.region as home_region, t.territory_description, r.region_description \nFROM employees e\nJOIN employee_territories et ON e.employee_id = et.employee_id\nJOIN territories t ON et.territory_id = t.territory_id\nJOIN region r ON t.region_id = r.region_id\nWHERE r.region_description != e.region;"}
{"Question": "Which employees have territories in regions that are located in a different country than their home country?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE territories (\n    territory_id character varying(20) NOT NULL PRIMARY KEY,\n    territory_description bpchar NOT NULL,\n    region_id smallint NOT NULL,\n    FOREIGN KEY (region_id) REFERENCES region\n);\n\nCREATE TABLE employee_territories (\n    employee_id smallint NOT NULL,\n    territory_id character varying(20) NOT NULL,\n    PRIMARY KEY (employee_id, territory_id),\n    FOREIGN KEY (territory_id) REFERENCES territories,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);\n\nCREATE TABLE region (\n    region_id smallint NOT NULL PRIMARY KEY,\n    region_description bpchar NOT NULL,\n    country character varying(15) NOT NULL\n);", "Query": "SELECT DISTINCT e.first_name, e.last_name, e.country as home_country, t.territory_description, r.region_description, r.country as region_country\nFROM employees e\nJOIN employee_territories et ON e.employee_id = et.employee_id\nJOIN territories t ON et.territory_id = t.territory_id\nJOIN region r ON t.region_id = r.region_id\nWHERE r.country != e.country;"}
{"Question": "What is the average order processing time for each employee by region?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT e.region, e.first_name, e.last_name, AVG(o.shipped_date - o.order_date) as avg_processing_time\nFROM employees e\nJOIN orders o ON e.employee_id = o.employee_id\nWHERE o.shipped_date IS NOT NULL\nGROUP BY e.region, e.employee_id\nORDER BY e.region, avg_processing_time;"}
{"Question": "What is the average order processing time for each employee by the customer's country?", "Context": "CREATE TABLE employees (\n    employee_id smallint NOT NULL PRIMARY KEY,\n    last_name character varying(20) NOT NULL,\n    first_name character varying(10) NOT NULL,\n    title character varying(30),\n    title_of_courtesy character varying(25),\n    birth_date date,\n    hire_date date,\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    home_phone character varying(24),\n    extension character varying(4),\n    photo VARBYTE,\n    notes text,\n    reports_to smallint,\n    photo_path character varying(255),\n    FOREIGN KEY (reports_to) REFERENCES employees\n);\n\nCREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers,\n    FOREIGN KEY (employee_id) REFERENCES employees,\n    FOREIGN KEY (ship_via) REFERENCES shippers\n);", "Query": "SELECT c.country, e.first_name, e.last_name, AVG(o.shipped_date - o.order_date) as avg_processing_time\nFROM orders o\nJOIN employees e ON o.employee_id = e.employee_id\nJOIN customers c ON o.customer_id = c.customer_id\nWHERE o.shipped_date IS NOT NULL\nGROUP BY c.country, e.employee_id\nORDER BY c.country, avg_processing_time;"}
{"Question": "Which products have the highest and lowest total order quantities?", "Context": "CREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT p.product_name, SUM(od.quantity) as total_quantity\nFROM products p\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_name\nORDER BY total_quantity DESC\nLIMIT 1;\n\nSELECT p.product_name, SUM(od.quantity) as total_quantity\nFROM products p\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY p.product_name\nORDER BY total_quantity ASC\nLIMIT 1;"}
{"Question": "Which customers have placed orders for the most unique products?", "Context": "CREATE TABLE customers (\n    customer_id bpchar NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24)\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15),\n    FOREIGN KEY (customer_id) REFERENCES customers\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT c.customer_id, c.company_name, COUNT(DISTINCT od.product_id) as unique_products\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nJOIN order_details od ON o.order_id = od.order_id\nGROUP BY c.customer_id, c.company_name\nORDER BY unique_products DESC\nLIMIT 1;"}
{"Question": "What is the average number of days between the first and last order for each customer?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    order_date date,\n    FOREIGN KEY (customer_id) REFERENCES customers\n);", "Query": "WITH customer_orders AS (\n  SELECT customer_id, MIN(order_date) AS first_order, MAX(order_date) AS last_order\n  FROM orders\n  GROUP BY customer_id\n)\nSELECT \n  c.company_name,\n  AVG(co.last_order - co.first_order) AS avg_days_between_first_and_last\nFROM customers c\nJOIN customer_orders co ON c.customer_id = co.customer_id\nGROUP BY c.company_name\nORDER BY avg_days_between_first_and_last;"}
{"Question": "What is the average number of days between the first order and the last order for each employee?", "Context": "CREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    employee_id smallint,\n    order_date date,\n    FOREIGN KEY (employee_id) REFERENCES employees\n);", "Query": "WITH employee_orders AS (\n  SELECT employee_id, MIN(order_date) AS first_order, MAX(order_date) AS last_order\n  FROM orders\n  GROUP BY employee_id\n)\nSELECT\n  e.first_name || ' ' || e.last_name AS employee_name,\n  AVG(eo.last_order - eo.first_order) AS avg_days_between_first_and_last\nFROM employees e\nJOIN employee_orders eo ON e.employee_id = eo.employee_id\nGROUP BY e.first_name, e.last_name\nORDER BY avg_days_between_first_and_last;"}
{"Question": "Which suppliers have products in the most diverse set of categories?", "Context": "CREATE TABLE categories (\n    category_id smallint NOT NULL PRIMARY KEY,\n    category_name character varying(15) NOT NULL,\n    description text,\n    picture VARBYTE\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (category_id) REFERENCES categories,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);", "Query": "SELECT s.company_name, COUNT(DISTINCT p.category_id) AS num_categories\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nGROUP BY s.company_name\nORDER BY num_categories DESC\nLIMIT 3;"}
{"Question": "Which suppliers have the highest total sales across all their products?", "Context": "CREATE TABLE suppliers (\n    supplier_id smallint NOT NULL PRIMARY KEY,\n    company_name character varying(40) NOT NULL,\n    contact_name character varying(30),\n    contact_title character varying(30),\n    address character varying(60),\n    city character varying(15),\n    region character varying(15),\n    postal_code character varying(10),\n    country character varying(15),\n    phone character varying(24),\n    fax character varying(24),\n    homepage text\n);\n\nCREATE TABLE products (\n    product_id smallint NOT NULL PRIMARY KEY,\n    product_name character varying(40) NOT NULL,\n    supplier_id smallint,\n    category_id smallint,\n    quantity_per_unit character varying(20),\n    unit_price real,\n    units_in_stock smallint,\n    units_on_order smallint,\n    reorder_level smallint,\n    discontinued integer NOT NULL,\n    FOREIGN KEY (supplier_id) REFERENCES suppliers\n);\n\nCREATE TABLE orders (\n    order_id smallint NOT NULL PRIMARY KEY,\n    customer_id bpchar,\n    employee_id smallint,\n    order_date date,\n    required_date date,\n    shipped_date date,\n    ship_via smallint,\n    freight real,\n    ship_name character varying(40),\n    ship_address character varying(60),\n    ship_city character varying(15),\n    ship_region character varying(15),\n    ship_postal_code character varying(10),\n    ship_country character varying(15)\n);\n\nCREATE TABLE order_details (\n    order_id smallint NOT NULL,\n    product_id smallint NOT NULL,\n    unit_price real NOT NULL,\n    quantity smallint NOT NULL,\n    discount real NOT NULL,\n    PRIMARY KEY (order_id, product_id),\n    FOREIGN KEY (product_id) REFERENCES products,\n    FOREIGN KEY (order_id) REFERENCES orders\n);", "Query": "SELECT s.company_name, SUM(od.quantity * od.unit_price) AS total_sales\nFROM suppliers s\nJOIN products p ON s.supplier_id = p.supplier_id\nJOIN order_details od ON p.product_id = od.product_id\nGROUP BY s.company_name\nORDER BY total_sales DESC\nLIMIT 3;"}